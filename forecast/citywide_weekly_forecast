{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["# Preparations"],"metadata":{"id":"SSiKAbelztc9"}},{"cell_type":"code","source":["! pip install sktime\n","! pip install pmdarima"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QDSkpiinz3Rs","executionInfo":{"status":"ok","timestamp":1745780412064,"user_tz":300,"elapsed":30119,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"66bcdeb7-07c9-4f1c-dfe7-f75452e2289a"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting sktime\n","  Downloading sktime-0.37.0-py3-none-any.whl.metadata (34 kB)\n","Requirement already satisfied: joblib<1.5,>=1.2.0 in /usr/local/lib/python3.11/dist-packages (from sktime) (1.4.2)\n","Requirement already satisfied: numpy<2.3,>=1.21 in /usr/local/lib/python3.11/dist-packages (from sktime) (2.0.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from sktime) (24.2)\n","Requirement already satisfied: pandas<2.3.0,>=1.1 in /usr/local/lib/python3.11/dist-packages (from sktime) (2.2.2)\n","Collecting scikit-base<0.13.0,>=0.6.1 (from sktime)\n","  Downloading scikit_base-0.12.2-py3-none-any.whl.metadata (8.8 kB)\n","Requirement already satisfied: scikit-learn<1.7.0,>=0.24 in /usr/local/lib/python3.11/dist-packages (from sktime) (1.6.1)\n","Requirement already satisfied: scipy<2.0.0,>=1.2 in /usr/local/lib/python3.11/dist-packages (from sktime) (1.14.1)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas<2.3.0,>=1.1->sktime) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas<2.3.0,>=1.1->sktime) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas<2.3.0,>=1.1->sktime) (2025.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn<1.7.0,>=0.24->sktime) (3.6.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas<2.3.0,>=1.1->sktime) (1.17.0)\n","Downloading sktime-0.37.0-py3-none-any.whl (37.0 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m37.0/37.0 MB\u001b[0m \u001b[31m26.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading scikit_base-0.12.2-py3-none-any.whl (142 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m142.7/142.7 kB\u001b[0m \u001b[31m8.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: scikit-base, sktime\n","Successfully installed scikit-base-0.12.2 sktime-0.37.0\n","Collecting pmdarima\n","  Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl.metadata (7.8 kB)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.4.2)\n","Requirement already satisfied: Cython!=0.29.18,!=0.29.31,>=0.29 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (3.0.12)\n","Requirement already satisfied: numpy>=1.21.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.0.2)\n","Requirement already satisfied: pandas>=0.19 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.2.2)\n","Requirement already satisfied: scikit-learn>=0.22 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.6.1)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (1.14.1)\n","Requirement already satisfied: statsmodels>=0.13.2 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (0.14.4)\n","Requirement already satisfied: urllib3 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (2.3.0)\n","Requirement already satisfied: setuptools!=50.0.0,>=38.6.0 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (75.2.0)\n","Requirement already satisfied: packaging>=17.1 in /usr/local/lib/python3.11/dist-packages (from pmdarima) (24.2)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas>=0.19->pmdarima) (2025.2)\n","Requirement already satisfied: threadpoolctl>=3.1.0 in /usr/local/lib/python3.11/dist-packages (from scikit-learn>=0.22->pmdarima) (3.6.0)\n","Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.11/dist-packages (from statsmodels>=0.13.2->pmdarima) (1.0.1)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas>=0.19->pmdarima) (1.17.0)\n","Downloading pmdarima-2.0.4-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.manylinux_2_28_x86_64.whl (2.2 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.2/2.2 MB\u001b[0m \u001b[31m33.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: pmdarima\n","Successfully installed pmdarima-2.0.4\n"]}]},{"cell_type":"code","source":["# Core libraries\n","import os\n","import json\n","import warnings\n","\n","# Data manipulation\n","import pandas as pd\n","import numpy as np\n","\n","# Plotting\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import matplotlib.dates as mdates\n","\n","# Web scraping\n","import requests\n","from bs4 import BeautifulSoup\n","\n","# Google Colab integration\n","from google.colab import drive\n","\n","# Time series analysis\n","import statsmodels.api as sm\n","from statsmodels.tsa.stattools import adfuller, kpss\n","from statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n","\n","# Forecasting metrics\n","from sktime.performance_metrics.forecasting import mean_absolute_error, mean_squared_error, mean_absolute_percentage_error\n","\n","# Machine learning utilities\n","from sklearn.model_selection import train_test_split\n","from sktime.forecasting.arima import AutoARIMA\n","import statsmodels.api as sm\n","from prophet import Prophet\n","from sklearn.metrics import mean_absolute_error\n","import itertools\n","\n","\n","\n","# Others\n","import zipfile\n","\n","# Suppress warnings\n","warnings.filterwarnings(\"ignore\")\n"],"metadata":{"id":"5us6H_Fyzvk-","executionInfo":{"status":"ok","timestamp":1745780430300,"user_tz":300,"elapsed":18234,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["# ✅ Mount Google Drive\n","drive.mount('/content/drive')\n","\n","# ✅ Define Paths\n","DATA_DIR = \"/content/drive/Shared drives/github/divvy_demand_forecast/data\"\n","MODEL_DIR = \"/content/drive/Shared drives/github/divvy_demand_forecast/models\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uOP89BTN0LCV","executionInfo":{"status":"ok","timestamp":1745780704462,"user_tz":300,"elapsed":621,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"b932887a-1aee-46c9-bbe6-3356ecdb2cf6"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["# Load Data"],"metadata":{"id":"gT9WHyQW0VHu"}},{"cell_type":"code","source":["data_raw = pd.read_parquet(os.path.join(DATA_DIR, \"divvy_weekly_ridership_city.parquet\"))\n","print(data_raw.shape)\n","data_raw.head(4)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"yUNzPsgS0X80","executionInfo":{"status":"ok","timestamp":1745780478885,"user_tz":300,"elapsed":1268,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"e5fb4271-a958-4a78-be17-44c42110b6a2"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["(1206, 5)\n"]},{"output_type":"execute_result","data":{"text/plain":["  rideable_type member_casual  year  week_of_year  total_rides\n","0  classic_bike        casual  2020            49         1943\n","1  classic_bike        casual  2020            50         3291\n","2  classic_bike        casual  2020            51         2853\n","3  classic_bike        casual  2020            52         2311"],"text/html":["\n","  <div id=\"df-21c1d495-28f8-4100-a9a5-c326817f5290\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>rideable_type</th>\n","      <th>member_casual</th>\n","      <th>year</th>\n","      <th>week_of_year</th>\n","      <th>total_rides</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>classic_bike</td>\n","      <td>casual</td>\n","      <td>2020</td>\n","      <td>49</td>\n","      <td>1943</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>classic_bike</td>\n","      <td>casual</td>\n","      <td>2020</td>\n","      <td>50</td>\n","      <td>3291</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>classic_bike</td>\n","      <td>casual</td>\n","      <td>2020</td>\n","      <td>51</td>\n","      <td>2853</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>classic_bike</td>\n","      <td>casual</td>\n","      <td>2020</td>\n","      <td>52</td>\n","      <td>2311</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21c1d495-28f8-4100-a9a5-c326817f5290')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-21c1d495-28f8-4100-a9a5-c326817f5290 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-21c1d495-28f8-4100-a9a5-c326817f5290');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-83c24904-709e-4465-8780-0d3dddec4665\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-83c24904-709e-4465-8780-0d3dddec4665')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-83c24904-709e-4465-8780-0d3dddec4665 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data_raw","summary":"{\n  \"name\": \"data_raw\",\n  \"rows\": 1206,\n  \"fields\": [\n    {\n      \"column\": \"rideable_type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"docked_bike\",\n          \"electric_scooter\",\n          \"classic_bike\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"member_casual\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"member\",\n          \"casual\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2020,\n          2021\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 53,\n        \"samples\": [\n          15,\n          37\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rides\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 15862,\n        \"min\": 1,\n        \"max\": 69156,\n        \"num_unique_values\": 1185,\n        \"samples\": [\n          49747,\n          4046\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["rides_by_month = data_raw.groupby([\"year\",\"week_of_year\"])[\"total_rides\"].sum().reset_index()\n","rides_by_month.sort_values([\"year\",\"week_of_year\"])\n","rides_by_month.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"1wSiM8PFjnOn","executionInfo":{"status":"ok","timestamp":1745780478920,"user_tz":300,"elapsed":34,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"5950d10d-f67d-43c0-a3ff-ffe85f2e74e9"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   year  week_of_year  total_rides\n","0  2020             1        20732\n","1  2020             2        35051\n","2  2020             3        31479\n","3  2020             4        25173\n","4  2020             5        40070"],"text/html":["\n","  <div id=\"df-398b49c2-a989-4240-a7ca-c68055974287\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>week_of_year</th>\n","      <th>total_rides</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020</td>\n","      <td>1</td>\n","      <td>20732</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020</td>\n","      <td>2</td>\n","      <td>35051</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020</td>\n","      <td>3</td>\n","      <td>31479</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>25173</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020</td>\n","      <td>5</td>\n","      <td>40070</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-398b49c2-a989-4240-a7ca-c68055974287')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-398b49c2-a989-4240-a7ca-c68055974287 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-398b49c2-a989-4240-a7ca-c68055974287');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-6eff54d5-75d3-424b-ba77-fa033209e4d7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6eff54d5-75d3-424b-ba77-fa033209e4d7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-6eff54d5-75d3-424b-ba77-fa033209e4d7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rides_by_month","summary":"{\n  \"name\": \"rides_by_month\",\n  \"rows\": 276,\n  \"fields\": [\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2020,\n          2021,\n          2025\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 53,\n        \"samples\": [\n          20,\n          42,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rides\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45610,\n        \"min\": 4098,\n        \"max\": 168249,\n        \"num_unique_values\": 276,\n        \"samples\": [\n          126161,\n          142515,\n          117508\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["start_date = pd.to_datetime('2020-01-01')\n","\n","# 2. Create dates by adding 7 days repeatedly\n","full_dates = [start_date + pd.Timedelta(days=7*i) for i in range(rides_by_month.shape[0])]\n","rides_by_month[\"date\"]=full_dates\n","rides_by_month.set_index(\"date\",inplace=True)\n","rides_by_month"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"MfgSUk5gj63m","executionInfo":{"status":"ok","timestamp":1745780478984,"user_tz":300,"elapsed":63,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"bea211f5-bdbb-4b13-98a7-3950f1acc69b"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            year  week_of_year  total_rides\n","date                                       \n","2020-01-01  2020             1        20732\n","2020-01-08  2020             2        35051\n","2020-01-15  2020             3        31479\n","2020-01-22  2020             4        25173\n","2020-01-29  2020             5        40070\n","...          ...           ...          ...\n","2025-03-12  2025            10        37173\n","2025-03-19  2025            11        60529\n","2025-03-26  2025            12        44524\n","2025-04-02  2025            13        54650\n","2025-04-09  2025            14         6209\n","\n","[276 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a4441367-4bc8-4635-b008-be1da914f28e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>year</th>\n","      <th>week_of_year</th>\n","      <th>total_rides</th>\n","    </tr>\n","    <tr>\n","      <th>date</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2020-01-01</th>\n","      <td>2020</td>\n","      <td>1</td>\n","      <td>20732</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-08</th>\n","      <td>2020</td>\n","      <td>2</td>\n","      <td>35051</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-15</th>\n","      <td>2020</td>\n","      <td>3</td>\n","      <td>31479</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-22</th>\n","      <td>2020</td>\n","      <td>4</td>\n","      <td>25173</td>\n","    </tr>\n","    <tr>\n","      <th>2020-01-29</th>\n","      <td>2020</td>\n","      <td>5</td>\n","      <td>40070</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2025-03-12</th>\n","      <td>2025</td>\n","      <td>10</td>\n","      <td>37173</td>\n","    </tr>\n","    <tr>\n","      <th>2025-03-19</th>\n","      <td>2025</td>\n","      <td>11</td>\n","      <td>60529</td>\n","    </tr>\n","    <tr>\n","      <th>2025-03-26</th>\n","      <td>2025</td>\n","      <td>12</td>\n","      <td>44524</td>\n","    </tr>\n","    <tr>\n","      <th>2025-04-02</th>\n","      <td>2025</td>\n","      <td>13</td>\n","      <td>54650</td>\n","    </tr>\n","    <tr>\n","      <th>2025-04-09</th>\n","      <td>2025</td>\n","      <td>14</td>\n","      <td>6209</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>276 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a4441367-4bc8-4635-b008-be1da914f28e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a4441367-4bc8-4635-b008-be1da914f28e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a4441367-4bc8-4635-b008-be1da914f28e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-4ee543b4-43aa-4603-8511-59e993a4d0b3\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4ee543b4-43aa-4603-8511-59e993a4d0b3')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-4ee543b4-43aa-4603-8511-59e993a4d0b3 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_119eda29-db8a-49a8-85d2-c351e6e24c0b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('rides_by_month')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_119eda29-db8a-49a8-85d2-c351e6e24c0b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('rides_by_month');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"rides_by_month","summary":"{\n  \"name\": \"rides_by_month\",\n  \"rows\": 276,\n  \"fields\": [\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2020-01-01 00:00:00\",\n        \"max\": \"2025-04-09 00:00:00\",\n        \"num_unique_values\": 276,\n        \"samples\": [\n          \"2020-07-29 00:00:00\",\n          \"2022-05-18 00:00:00\",\n          \"2023-10-04 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          2020,\n          2021,\n          2025\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 53,\n        \"samples\": [\n          20,\n          42,\n          48\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_rides\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 45610,\n        \"min\": 4098,\n        \"max\": 168249,\n        \"num_unique_values\": 276,\n        \"samples\": [\n          126161,\n          142515,\n          117508\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["data = rides_by_month[rides_by_month[\"year\"]<2024]\n","testset = rides_by_month[rides_by_month[\"year\"]==2024]\n","plt.figure(figsize=(12, 6))\n","plt.plot(data['total_rides'])\n","plt.xlabel('Time (Year-Month)')\n","plt.ylabel('Total Rides')\n","plt.title('Total Divvy Rides per Month')\n","plt.xticks(rotation=45)\n","plt.tight_layout()\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":607},"id":"fdfXWkuV2D-V","executionInfo":{"status":"ok","timestamp":1745780479772,"user_tz":300,"elapsed":790,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"1773db0e-c174-4017-a1d8-61c4f00983df"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1200x600 with 1 Axes>"],"image/png":"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KsL06dPx0EMPwePxaI+tX78eZ555plaQAoD58+djz549aG5u1o6ZN29ewMecP38+1q9fDwCorq5GTU1NwDF5eXmYPXu2dkw4TqcTdrs94BcREREREREREaVR0PkLL7yAnJyckDG/H/3oRzjllFNQWFiIdevWYdmyZThx4gQeeeQRAEBNTQ2qqqoC3qesrEx7rKCgADU1Ndrb9MfU1NRox+nfL9wx4TzwwAO45557evCnJSIiIiIiIiIa2NKmKPXss8/immuuCclvuu2227TfT5kyBWazGT/4wQ/wwAMPwGKx9PdpBli2bFnA+YmZSiIiIiIiIiKiwS4txvc+/vhj7NmzB9///vejHjt79mx4PB4cPHgQAFBeXo7a2tqAY8T/l5eXd3uM/nH9+4U7JhyLxYLc3NyAX0RERERERERElCZFqT//+c+YMWMGpk6dGvXYLVu2wGAwoLS0FAAwZ84crF27Fm63Wztm9erVGD9+PAoKCrRj9OHp4pg5c+YAAKqqqlBeXh5wjN1ux4YNG7RjiIiIiIiIiIgodkkd32tvb8f+/fu1/6+ursaWLVtQWFiI4cOHA1CKP6+99hoefvjhkPdfv349NmzYgHPOOQc5OTlYv349br31Vnz729/WCk5XX3017rnnHixevBg//elPsX37djz++ON49NFHtY/z4x//GGeddRYefvhhfOMb38Bf//pXbNq0Cc888wwAZTPg0qVLcd9992Hs2LGoqqrC3XffjYqKim63BRIRERERERERUXiSLMtysj75mjVrcM4554S8/brrrsPzzz8PAHjmmWewdOlSnDhxAnl5eQHHffHFF7jxxhuxe/duOJ1OVFVV4Tvf+Q5uu+22gDypbdu24aabbsJnn32G4uJi3HLLLfjpT38a8LFee+013HXXXTh48CDGjh2LBx98EBdeeKH2uCzL+OUvf4lnnnkGLS0tOP300/H73/8e48aNi/nPG+tKRCIiIiIiIiKidBVr/SOpRanBhkUpIiIiIiIiIhroYq1/pEWmFBERERERERERDSwsShERERERERERUb9jUYqIiIiIiIiIiPodi1JERERERERERNTvWJQiIiIiIiIiIqJ+x6IUERERERERERH1OxaliIiIiIiIiIio37EoRURERERERERE/Y5FKSIiIiIiIiIi6ncsShEREVHcOlwe/Hvrcbg8vmSfChERERGlKRaliIiIKG4Pv7sXt/xlM579pDrZp0JEREREaYpFKSIiIorb2r31AICN1U1JPhMiIiIiSlcsShEREVFcGtud2FfXDgD48lhrks+GiIiIiNIVi1JEREQUl88O+ruj6tucqLV3JfFsiIiIiChdsShFREREcdkQNLL35VF2SxERERFR/FiUIiIiorhsOKAUpfKzMgBwhI+IiIiIeoZFKSIiIopZa6cbu2rsAICrZw0HAGxnUYqIiIiIeoBFKSIiIorZ54eaIMtAVbEN504oBcBOKSIiIiLqGRaliIiIKGZidG92VSFOrsiFQQLq2pyoY9g5EREREcWJRSkiIiKKmQg5n1VViCyzCWNKswGwW4qIiIiI4seiFBEREcXE4fRo+VGzqgoBAJOG5gFgUYqIiIiI4seiFBEREcXki8PN8PhkDM3PxLCCLADAZLUoxbBzIiIiIooXi1JEREQUk43V/jwpYTI7pYiIiIioh1iUIiIiopjo86QEEXZea3eiro1h50REREQUOxaliIiIKKoutxdbjrQAAGaPKtLenmU2YXSJEnbOET4iIiIiigeLUkRERBTV1iMtcHl8KMmxYGRRVsBj2gjfUXsyTo2IiIiI0hSLUkRERBTVRt3oniRJAY9xAx8RERER9QSLUkRERBSVyJP6mi5PSpg8jBv4iIiIiCh+LEoRERFRt9xeHz4/1AwAmFVVFPL4yUNyIUlAjb0L9W3O/j49IiIiIkpTLEoRERFRt7Yfa0Wn24v8rAyMLc0OedxmYdg5EREREcWPRSkiIiLqluiSmjmiEAaDFPaYycyVIiIiIqI4sShFRERE3dKKUiMLIh7DsHMiIiIiiheLUkRERBSRLMvYpBalZoyIXJQSnVIc3yMiIiKiWLEoRURElGZeWHcQp//mA3x5tO8LQEebO1Hf5oTJIGmFp3AmVihh5ydau9DQzrBzIiIiIoqORSkiIqI089rnR3C0uRN3/mMbPF5fn36uLw4rXVITh+bBmmGMeJzNYtJC0DccaIp4nCzLeH9XLRpZuCIiIiIa9FiUIiIiSiM+n4z9de0AgF0n7Hhx/aE+/XwiT2rG8Mije8I540sBAO/tqo14zGufH8XiFzbh/721KzEnSERERERpi0UpIiKiNHKspRNdbn931COr96LW3tVnn+/zGPKkhHknlwEAPthdB3eEDq6Vm48BgFZYIyIiIqLBi0UpIiKiNLK/XinmjCnNxrTKfLQ7Pbjvzb7pOnI4Pdh1wg4AOGVEftTjTxlegEKbGa2dbmw62BzyeEO7E58eaASAPi2kEREREVF6YFGKiIgojeyvVYpS48qycd/CSTBIwL+3HsfH++oT/rm2HmmBTwaG5mdiSF5m1OONBgnnTlBG+FbvDB3hW7W9Bj5Z+X19mxNe8T9ERERENCixKEVERJRGxNjbmNIcTBqah2vnjAQALH99B5web0I/lxjdOyWG0T3hPHWEb/WuGshyYNHpzW0ntN/7ZDDsnIiIiGiQY1GKiIgojejH9wDgtvPHoSTHguoGB5756EBCP9fnh0XIeX7M73PG2GJYTAYcaerE3lp/blR9mxMbqpXRPWuGcvlRa2dRioiIiGgwY1GKiIgoTciyjH21bQCAMSVKUSrXmoG7vnESAOCpD/fD4fQk5HP5fDK+0ELOC2N+vyyzCaePKQYArN5Zo7191Q5ldG9qZT7GluYAAOramCtFRERENJixKEVERJQm6tudsHd5YJCAUSU27e2XTK1AltkIp8eHurbEdB99Vd8Oe5cHmRlGTBiSE9f7ztNG+Oq0t7257TgA4BuTy1GWawHATikiIiKiwc6U7BMgIiKi2IiQ88rCLFgzjNrbJUlCtsWEDpc3YZ1SIk9qamUeMozx3cP6+klK2PnWIy2otXdBkoAN1U0AgAsnD8HBxg4A3MBHRERENNixU4qIiChNaHlS6uieXrZFuc/UnuCi1Iw4Qs6F0hwrplXmAwDe21WLd7bXQJaBaZX5GFaQhbIcK4D4x/ecHi983NhHRERENGCwKEVERJQmtM17ZaFFKZtalEpYp9ThnhelAP8Wvvd21uI/6ta9b0weAgA9Gt+rtXfha/e/j4ue/D92WBERERENECxKERERpYl9tZE7pWwWZZwvEZ1SzQ4XDtQ7AADTK3tXlPpkfyM2HlRG9y6YXA4AKNWKUrEXl/6y8TCaO9zYecKOy59eh4MNjh6dFxERERGlDhaliIiI0oQY3xtbFho8nq11Snl7/Xk2H1G6pEaX2FBgM/foY4wtzcaIoiy4vD7IMjB9uDK6ByjjfUDsnVIerw9/3XgEgPLnPNLUicufXo+dx+09OjciIiIiSg0sShEREaWB1g436tXNeqN1m/eERI7v9SZPSpAkCeedVKb9vxjdA4CyXKUo1ehwwuP1Rf1YH+6pR429C4U2M1YtPQMnDclFQ7sTVz6zHp+pXVhERERElH5YlCIiIkoD++vbAADluVbkWDNCHrclMOg8EUUpAJh3sr8odYGuKFVkM8NokCDLQEO7K+rHeWXDIQDA5TOGYVhBFv665Gs4dWQB2ro8+M6fN+DzQyxMEREREaUjFqWIiIjSgAg5Hxsm5BzQj+/1rijl8fqw9UgrgN4XpWaNLMT1c0fiJ/PHY2h+pvZ2g0FCaU5suVJHmjqwZm89AOCqWcMBAHmZGXjxe7NxxthidLl9+N9PD/fqPImIiIgoOUzJPgEiIiKKThSlRocJOQcAm1ktSrl6V5SqsXeh0+2F2WjAqOLwnytWBoOEFZdMDPtYaa4VJ1q7ohalXv3sCGQZOG1MEaqK/WOLmWYjLp02FB/va0CjI3q3FdFA4vXJ2HXCjs8PNWPToWbsqbFj0tA8XDmzErOqCiFJUrJPkYiIKCYsShEREaWBfWpRakxphKKUtn2vd0Hnx1uUItGQfCsMhr57YVsmOqXaIoedu70+vLpJCTi/ZvaIkMfzM5UxxtYOFqVocPD5ZNzx9614Z3sNHK7A7/W9te345xfHMLIoC1fMrMTlM4Zp+W298dKnh/Dyp4fwwvdmJeTjERER6SV1fG/t2rW4+OKLUVFRAUmSsHLlyoDHr7/+ekiSFPBrwYIFAcc0NTXhmmuuQW5uLvLz87F48WK0t7cHHLNt2zacccYZsFqtqKysxIMPPhhyLq+99homTJgAq9WKyZMn46233gp4XJZlLF++HEOGDEFmZibmzZuHffv2JeYvgoiIKAptfC9CUSpR43vHWzoBABV5mVGO7J3SXKUoVddNp9T7u2pR3+ZEcbYF5+nyqYQCm1KUaul0981JEqWYAw0O/POLY3C4vMi2mHDG2GLcOm8cnv72KbhyZiVsZiMONnbgoXf24PTffICN1b3LW/P6ZDy2ei9217Thg911CfpTEBER+SW1KOVwODB16lT87ne/i3jMggULcOLECe3XX/7yl4DHr7nmGuzYsQOrV6/Gf/7zH6xduxZLlizRHrfb7Tj//PMxYsQIfP7553jooYewYsUKPPPMM9ox69atw1VXXYXFixdj8+bNWLhwIRYuXIjt27drxzz44IN44okn8PTTT2PDhg2w2WyYP38+urq6HzsgIiLqrQ6XB8fUYlHkTqnEBJ2Lz1OR37dFqbIcpeOiu/G9lzcoWVHfmjkMGcbQS5a8TDMAoKWDRSkaHJrVrsBhBZnY+svz8dLi2fjxvLFYMGkIfnP5FGz8xTw8ePkUjCnNhtsrY/XOml59vo3VTdp4bE0rr3mJiCjxkjq+d8EFF+CCCy7o9hiLxYLy8vKwj+3atQurVq3CZ599hpkzZwIAnnzySVx44YX47W9/i4qKCrz88stwuVx49tlnYTabMXHiRGzZsgWPPPKIVrx6/PHHsWDBAvzkJz8BAPzqV7/C6tWr8dRTT+Hpp5+GLMt47LHHcNddd+HSSy8FALz44osoKyvDypUrsWjRokT9lRAREYU4UO+ALAOFNjOKsi1hj0lUp5QoSg3N79sxHTEGVBdhfO9QowMf72uAJPkDzoPlZymdUvYuN7w+GcY+HDckSgWiACs2WAazWUz41sxKGCQJd7y2VVta0FOrtp/Qfh8t/42IiKgnUn773po1a1BaWorx48fjhz/8IRobG7XH1q9fj/z8fK0gBQDz5s2DwWDAhg0btGPOPPNMmM1m7Zj58+djz549aG5u1o6ZN29ewOedP38+1q9fDwCorq5GTU1NwDF5eXmYPXu2dgwREVFfEaN7YyKEnAP+TqlEje8NLeif8b1ae/ii1F82KllSZ44tQWVhVthj8tRMKVkG2rrYLUUDn+iUys8yd3vctMo8AMCXx1rh8fp69Ll8Phmrdvg7rWpYlCIioj6Q0kWpBQsW4MUXX8T777+P3/zmN/joo49wwQUXwOtVgh1rampQWloa8D4mkwmFhYWoqanRjikrC8yhEP8f7Rj94/r3C3dMOE6nE3a7PeAXERFRvLTNexFG94BEBp330/ie6JQK80JXlmX8a/NRAMDVs8N3SQFAhtGgdYhxhI/S3ZYjLfjBS5twsMER8ZgWtShVoHYJRjKqOBvZFhM63V5tSUK8Nh9pCSgac3yPiIj6QkoXpRYtWoRLLrkEkydPxsKFC/Gf//wHn332GdasWZPsU4vJAw88gLy8PO1XZWVlsk+JiIjS0L66NgCRQ86BxIzvybKMY839W5RqdLjg8gR2ctS3OVFrd8IgKZ1S3RHdUs3cwEdp7n8/PYR3dtTiX5uPRTymWS2+RuuUMhgkTBmmdEttPdLSo/MRo3sTynMAsFOKiIj6RkoXpYKNGjUKxcXF2L9/PwCgvLwcdXWBm0A8Hg+ampq0HKry8nLU1tYGHCP+P9ox+sf17xfumHCWLVuG1tZW7deRI0fi+vMSEREBuvG9bjullKJUp9sLr0/u0eexd3m0NfN9vX2vICsDGUYlE6e+PXCEb8dxpbN4dEk2Ms3Gbj+OyJXiBj5Kdw3q90GjI/xIK+DvCMyP0ikFAFMr8wEoHVjxkmUZb29XpgG+e9pI7XN3uXvXiUlERBQsrYpSR48eRWNjI4YMGQIAmDNnDlpaWvD5559rx3zwwQfw+XyYPXu2dszatWvhdvsvVlevXo3x48ejoKBAO+b9998P+FyrV6/GnDlzAABVVVUoLy8POMZut2PDhg3aMeFYLBbk5uYG/CIiIoqHy+PDocYOAN0XpUSnFAA4XD3rlhKje4U2c9RiUG9JkoTSCBv4dhxXwplProj+vFmgdoy0cnyP0lyTuuWu2RH5a9k/vtd9pxQATB2WD6BnRakdx+042twJa4YBF0+tgDVDecnAsHMiIkq0pBal2tvbsWXLFmzZsgWAEii+ZcsWHD58GO3t7fjJT36CTz/9FAcPHsT777+PSy+9FGPGjMH8+fMBACeddBIWLFiAG264ARs3bsQnn3yCm2++GYsWLUJFRQUA4Oqrr4bZbMbixYuxY8cOvPrqq3j88cdx2223aefx4x//GKtWrcLDDz+M3bt3Y8WKFdi0aRNuvvlmAMqF89KlS3HffffhjTfewJdffolrr70WFRUVWLhwYb/+nRER0eByqNEBj0+GzWzEkLzIG/EsJoO2jaunI3z+PKm+3bwniLDz4Fwp0Sk1MYaiVJ7olOL4HqW5xnbla1gUp8LxB51H75SapnZK7a1tQ0echepVapfU2eNKkWU2oVwdt2WuFBERJVpSi1KbNm3C9OnTMX36dADAbbfdhunTp2P58uUwGo3Ytm0bLrnkEowbNw6LFy/GjBkz8PHHH8Ni8a/DfvnllzFhwgR8/etfx4UXXojTTz8dzzzzjPZ4Xl4e3n33XVRXV2PGjBm4/fbbsXz5cixZskQ7Zu7cuXjllVfwzDPPYOrUqfj73/+OlStXYtKkSdoxd955J2655RYsWbIEp556Ktrb27Fq1SpYrf1z4U5ERIOTfnRPkkJXwAuSJMGmdjf1uijVx6N7QpnaKVXXFjiutPOEKErlRf0Y+Zkc36OBQYztdVeUEuN7sXRKledZUZ5rhU8Gth+Lb9nO22qe1AWTlZgKkQHHXCkiIko0U/RD+s7ZZ58NWY6ce/HOO+9E/RiFhYV45ZVXuj1mypQp+Pjjj7s95oorrsAVV1wR8XFJknDvvffi3nvvjXpOREREiXJUDR4fUWSLemyONQP2Lk+PN/Ad7afNe0KZ2imlHwmyd7m1ccVYOqW0TCmO71Ea63B50OVWAv+buun6i6coBQBTK/NQs6MLW4+0YFZVYUzvs6+2DV/VO2A2GnDuBGXLtejSZKcUERElWlplShEREQ02Ih8qxxr9PpLN0ttOKeUF57CC/ilKleaKTCl/p9QudXRvaH5m1A1jAJCfqRzD8T1KZ2J0DwCaHa6IN23jGd8DdGHnR1tiPhcRcH762GLkWJXPU5bHTikiIuobLEoRERGlsA51G15WDMHjYgNfe68zpfqrUyo06FzkSZ00JLblIHncvkcDQKNuZM/jk9EW5nu40+WF06N0U8ValJqmhp1vjSPsXBSlFkzyb5guD/O9SkRElAgsShEREaUwEVCcaY7eKSU28PU+6LyfOqVyRNC5v1PKnycVW1FKy5Ti+B6lsSZHYK5aU3to55/okjIZpIBtm92ZNCwPkqSMATe0O6Mef6jRgV0n7DAaJJx3Upn2dgadExFRX2FRioiIKIWJTilbLJ1S5p4Xpdxen9YF0V/b97ROqbbQTqlYi1IFNmV8r5WdUpTGGoKKUOFypUThNT/L3O3SA71cawZGl2QDALbFMML3/q46AMDXRhVq31uAf3xPP2pLRESUCCxKERERpbDOHo3vxR90Xmvvgk8GzEYDim2W6O+QACLovKXDjS63F06PF/tq2wAAE4dG37wH6DulmClF6St4415zmA18LXHmSQlT1RG+LUdaox67V/3+mzEiMBRdP77n80VeUkRERBQvFqWIiIhSmOiUim18r+dB5yLkfEi+FQZDbF0YvZWXmQGzSbkUqW9zYl9tOzw+GflZGajIi61bS2RKtXa6+WKZ0lZwUaoxTFGqWdu8F19RalqlUuCNJVfqQL0DADC6JHDbZ0mOBQZJybsKd25EREQ9xaIUEaUsh9ODP/9fddg7xkSDhciU6uugcy1PKq9/8qQAQJIkrVuqrq0LO9XRvZOH5MY8npSndkr5ZIQNhyZKB8F5T+Ge9/yb96JvpdQTG/i2Hm2JuNVPONDQDgAYVZwd8PYMowHF2cr3KnOliIgokViUIqKU9cL6g/jVf3bigbd3JftUiJLG3ykVe1GqJ51Sx/o55Fwoy/Fn1ew4rowXxZonBQAWk1Er2HGEj9KV6JTKsSrfw+EypURuWrydUhPKc2E2GdDS4cahxo6Ix7V2urVsq6qgTikAKFe7F2u4gY+IiBKIRSkiSln765Q7tmv3NkS9u0s0UGmZUhnRi1La9j1Xz4tSQwv6tyhVqnZK1dq7dCHnseVJCdzAR+lOFKXGliodSmG37zl61illNhm0Qu/WbsLOD9Qrz7lluZaw2/3EYgIWpYiIKJFYlCKilHW0WXmRXGPvwoEGR5LPhig5tO17MayA703QuRjfG9pPm/eE0hz/qvldJ+LbvCfkqS/SW7iBj9JUo1qEGqMWpZrDdEo1a9v34uuUAvRh5y0RjxF5UsGje4IWds7xPSIiSiAWpYgoZR1Ti1IAsG5/QxLPhCh5RKZULON7vQs6T9L4nvpCd0N1ExwuL6wZBowqCf+iOBIxzsTxPUpXjQ4lU2psaQ6A0OBzwP/1XRBnpxQATBO5Ut0VpUSeVJjRPYDje0RE1DdYlCKilOTx+gIufP+PRSkapESnVDxB55GKUh0uD/7x+VGt0CXIsqwVgfu/KKWM74mxovHluTDGuf0vX7eBjyjddLg86HL7AABjytTxvXBFqR5mSgH+sPPtx+1we31hj9E6pSIUhbVOKRaliIgogViUIqKUdKK1C17devf1XzUG/D/RYODy+OBRv+6zMuIZ3wtflPrfTw/h9te24v63ApcH2Ls8cKjFr/7cvgf4O6VEbFy8o3sAkJepju8xU4pSwL+3HsdNr3yh5cFFI0b3zCYDKtVMt3BFKTHSJ77e4zGyKAu5VhNcHh/21LSFPcZflOq+U+oEx/eIiCiBWJQiopQk8qSGF2Yhx2KCvcujbeYiGiz0L2pjG9/rvlPqoLp56+0vawKKvGJ0r9BmjunzJJLolBJ6UpQSnVLhcniI+tszaw/gzW0nsP5AbB2+jWoBqshmRqFN+X6wd3lCOppE0bXAFn+nlCRJWrdUuFwpr09GdaNSlBodIVOqjJlSRETUB1iUIqKUJDaBjSjKwuxRRQA4wkeDT4dbKS5lGCWYTdGfsv3je+E7NMRGr0aHCxurm7S3+/Ok+jfkHABKcwM/Z7yb9wD/9r1WdkpRCnB6lO+/WDv3mtQ8qaJsM/IyMyCmV/VFVp9P7lWmFNB9rtTxlk64PD6YTYaIGzhFp1Sb09Oj3DoiIqJwWJQiopR0tFnp6BhWkInTxyhFqXX7G5N5SkT9TuRJZWbE1r2UbVaKUi6vDy5PaG6MfiTo7e0ntN9rRal+Ht0DgByLCdYM5XLEIAETynPi/hiiU4rb9ygVuL1KF6I9xq9HMb5XaLPAaJCQrxadmh3+929zeiCaG/My4++UAvwb+ER+m95X9UrI+ciirIiZbtkWk9aNGUvYeWuHGy+tP4jGdmePzpeIiAYHFqWIKCnu/fdO3PDiJngiBK6K8b1hBVk4bUwxAOCzg03ocse/6p4oXXU4Rch59DwpALBZ/MWrcJ0MTbrOi1Xba+BTX+UeVYtSkTok+pIkSdpY0OiSbFhjLMDp+TOlOL5HyScKwvau2LqJ9ON7gD/IXF9EFl/bmRnGHn2PAMCUSqULcV9de0junJYnFWF0TxDjtrGM8P323T24+/UduPzp9Vrhm4j6n9cn4/lPqnFIHdElSjUsShFRv3N5fHhuXTVW76zF7giBq/pOqTGl2SjNscDp8eGLQ839eapESSW25MWyeQ8ATEYDLOqYX7iwc/2L3Lo2JzYfUb6fjrcoLzCH9vPmPaEsRylK9SRPCvC/iGenFKUCkQUVa6dUU1BRqkjNldJ/vzZ39HzznlCaY8XQ/EzIMvDl0cCMxgMNSqdUpJBzYYjaTRmtU8rt9eE/244DAKobHLji6fU4rGbaEVH/env7Caz4907c/MrmuN+3y+3loiHqcyxKEVG/O9HaqW3a2lcXqSglOqUyIUmS1i31yVfMlaLBo0PtDIwnfFwLO3cFFqW8PlnLqDlNHYl9+8saAPpMqeQUpSoLswD419bHS4w7MVOKUoFWlOqKc3wvW+2UUoPM9Z2N4ns3v4d5UsK0CGHn/s170TqlYtvA93/7GtDc4UaRzYyRRVk41tKJK/64Dvvr2nt24kTUY9Xq9/eXx1qx87g95vdrcrhwxoMf4rpnN/bVqREBYFGKiJLgWLO/jX9vbegFqsfrQ02r6NxQXqzOHS3CzpkrRYOH2L5ni3F8D9CHnQcWpVo6XFoxeNGpwwEAb2+vgSzLSS9K3XreWNx90cm48tTKHr2/PlNKlnlHl5LLnykV6/ieGnSudkoV2kSmlL8o1dqLzXt6U9URvuCwc39RqvtOqfI8dXwvSqfU61uOAQAunlqBv/1gDsaWZqPW7sSVf1yPXSdif1FMRL13vNV/3f3a50difr/3d9Wivs2JT75qYHwG9SkWpYio3x3VFaX2hSlK1bY54fHJyDBKKM1RLoBFp9SXR1vQyhEdGiS0oPM4OqVEUao9aAOfGAXKy8zA108qhTXDgGMtndhypEV7gZmM7XuAkh23+PSqmLOzgongZ69PRhu3glGS+TOl4h3fU57vRFEqcHxP7ZTK7F2nVLiwc4fTo43jjY6SKVWudkrVdNMp1eHy4N2dtQCAS6dVoDTXild/MAcTK3LR6HBh0TOfoi6GoHQiSgwxog8AKzcfC7sIJZw1e+oBALIMHG7i+C31HRaliKjfHdUFnoYb3zuqPvENzc+EQd0CVJGfiVHFNvhkYMMBdkvR4BBvphQAZKth58GdUvrcmiyzCWePKwUAPL/uIHwyYDYaUKy+KE431gyjtsGPI3yUTLIsw6WO78V6AyVkfC8rXFFK+Vj5vciUAoBJQ/NgkJTxO1GMrm5QuqSKbGbkRfn4Ynyvu06p93bVocPlxfDCLG1csNBmxis3fA2jS2xo7XTjg911vfpzEFHsTug6pZo73Hh/V23U9/F4fVi7r177f/FzgqgvsChFRP1OhJgDyp2X4JZg/eY9vblqDs4n+5krRYND7zqlwhelRBfGBZPLAQBvbjsBABiSb9WKwOkoX9vAx6IUJY9HFwgcc6ZUpPG9jtDtewW9zJSyWUwYV5YDwD/C91V9bCHnAFCep3ZKdVOUekMd3bt0WgUkyf8zJS8zA/MnKj93Nh9uifvciahnRKfU/IllAIDXPj8a9X2+ONyCNt0G0YMsSlEfYlGKiPqdPlNKlhESfCqKUsGbwE4bLcLO2SlFg4MoSsXTKRUpU6oxqCh17oRSmI0G7UV0RV5y8qQSxZ8r5YpyJFHfESHnQGyZUh0uD7rcyvsUZQeO74kOKsBfbO1tpxQQOsL3lciTijK6B/iLUvVtTni8oSNAzQ6XNvJz6bSKkMdF55TY/ElEke2rbQt5Lo+Xvcut3aS65dyxAIA1e+qi5sKt2RPYzXiwkUUp6jssShFRvxNFp8wM5YV2cFHqWIvSSTWsIPBF8pzRRZAk5fju8iyIBopOdXwvnqDzbHP4olRwp1SONQOnjy3WHh9aMECKUuyUoiRye/ydUm1dbviirFIXhSezyQCbWnwO1ymVqO17gH/L5dYjrQCAA3F0ShXbLDAZJPhkoKE9tAD89vYaeHwyTh6SizGlOSGPTxuufO59de1oi7GTjGgw2nXCjvMeXYtbX93Sq48jFpnkZ2Vg0tA8zBxRAJ8M/POLY92+34dqcfmscSUAOL5HfYtFKSLqVx6vT2v7F2vp99YG5kpp43uFgS+S87PMmFShbA7aUM1uKRr4+iLoXLzgBYAFk8q13ydr816iaON7XIRASeTSdQ/5ZMDh6r7LQZ/1Jkbd9JlSYpukKLYWJKJTSmzgO9oCn0/Wbd6L3illMPgXkOhzaoTXdaN74ZTmWDGsIBOyDGw72tqj8ycaDMS1cW87lE6oo3uiG/pbM5Utt69tOhJxW21Naxd2nbBDkoDr5o5QzqOBQefUd1iUIqJ+VWPvgtcnw2w0YK46jrcvwvhecKYUAJyi3mUVd3iJBrKejO9FCzrXF6XOO6kMRjVHamiSNu8litYp5eD4HiWPO2ikzd7VfVFK5Enpvy+L1MBzp8en/QxIZKfU+LIcWDMMaOvy4EBDu9YBEUunFACU5YUPOz/e0omNB5sAABdPDV+UAoDpwwsAAJsPc4SPKBJRiHYE3WCK1zG1U0ps171wyhBkZhhxoMGBLyJ8D360VxndmzosH6eo36819i5t+QpRorEoRUT9SuRJVeRbMaFcae3fp+uU8vpkrdU4OFMKAKaoWRjbdOusiQYqcQGYGcf4XqRMKa0jI9v/orbAZsZFU4bAZJAwY0RBb083qfK0TCl2SlHyhBSlonw9ivE9kScFKKPtFpNyiS6+b1sT2CllMhoweajSLfXOjlp0ur0wGiRUhrkRFE65uoEveIz+P9uOQ5aBWVWF3XZearlSDDunQcDl8eHjffVxF3REUaq3hSDR0Si+J7MtJnxjyhAAwN8+Cx94LnLhzh5fgvwss3bTh91S1FdYlCKifqWFmBdkYkyZMipwSLeBr9beBY9Phskgaaun9cTYwfbjrWFDVokGEq1TKqP32/dE0Hnw9q6HLp+Kz34xL2z+Szrh9j1KBfEWpfTje4IkSQG5Um6vD23q93MiOqUAf9j5P79QXpQOL8yC2RTbywLx3Fxjdwa8/fUtxwFEHt0Tpqsdz1uOtEQcHyIaKF797DC+8+eNeOqD/XG9n+iOFNcBPSU27w3RLTO5YsYwAEohObjo5fb68PE+Zcv1OeNLAQAji5QuSoadU19hUYqI+pVoIx6Wn4WSbAvyszIgy/6V1P4240xtrEhvVHE2si0mdLl92FvbHvI40UDS2aPxPbVTyhXcKSXWzlsC3m42GVBgS8wL3WQSd3JbuX2PksjlCSyytEbrlAozVqv//0aHSyu0ShKQl9n7TinAH3bu37wX2+geAAwJM773763HseO4HSaDhAsnDen2/SdW5MJsNKDR4cKRptBcKqKBRCzz2X7cHtf7iZ8dTo+vVzdhjweN7wFKN+PIoiw4XF68sO5QwPGbDjaj3elBkc2sdVRWqT8fGHZOfYVFKSLqV0ebldbfoQWZkCQJY0uVbql9aoFJPB68eU8wGCTtSZIjfDTQaZ1SlvjH99p1WTayLPszpbLTvwAVTn4mt+9R8sWdKdUeOlYL6DbwOVxoUTsmcq0ZYW/W9IQYoRNizZMCgPI8//iex+vDA2/twi1/2QwA+Ob0oVGL3BaTESdX5AIANh+JLVeq0+XFuv0NIX+/RKmuvl25IXQ4zi4j/fbNDnfPu6WOB43vAUo35g1njgIAPPjObry7o0Z7bI2aJ3XWuBIY1J83WqcUi1LUR1iUIqJ+pXVKqUWnsWVqrlSdkit1tClynpQwRdscxLBzGthEW308nVI2NehcP77X7vTA7VU6OIoGQFdUOGKsiZlSlEzxj++JDsbA70v9Bj7xNZ2IPClhWEFmQHdWLJv3BDG+d7DRgW//eQP+uPYAAOAHZ43CA/81OaaPEW+u1GPv7cXVf9qA1zaFz8AhSlV16pjr0ebOuDqe9DdYOnoYdu7zyVr2W3DO29WzhuPq2cMhy8CP/roZW4+0AADW7FbypM4aX6IdO7JYyZvj+B71FRaliKhfaZlS6pPjOLVTaq/WKRV5854wlWHnNEiITqnMODKltPE93UWs6JLKMhthjeNjpRNt+14Hx/coeVwhnVKxju8FjtWKglGTw4Vm9Zi8BOVJAUqnxNRhedr/xzO+J4LOT7R24dMDTbCZjfjDNadg2QUnwWSM7aWFyJXarL4QjkZs9durW4xClA5Ep5THJ+NE0HKA7uify4LH8WPV0O6E2yvDIAFlOYE/YyRJwr2XTMTZ40vQ5fZh8QufYWN1E/bUtsEgAWeO9Rel/ON7DDqnvsGiFBH1G59us96wQqXoJDqlxMz90Zbux/cAfxbG7po2LSCdaCDqVaaUrlMqUsj5QOIvSrkZnkxJIzoSBXtnL8f3OvyZUonslAL8z6VAfJ1S5XlWSOoU4egSG16/+XRcMLn7HKlgYs38zuOtUZ/HvT4Zu08oxSixSYwoXdS3+RcCHGqMvajTnIBOqeNqEaws1xq2YGwyGvDU1afg5CG5aGh34dt/3gBA6WTUj+GOVItSDe1OtEUptBP1BItSRNRv6tqUOzZGg6TdsRkrNvA1OtDl9uJYc+B4XzgVeVYUZ5vh9cnYEWdwJFG6kGVZy5HIMseeKaUPOhfFmaYIL3wHErF9z+OT4ejltiKinnJ74uuUCrd9D4D2grDJ4dKyZRJdVBZFqVyrCcVx/GywZhhxx/njcf3ckXj95tMxpjT2gpYwrCATxdlmuL3Rn8erGxzoVH8WxtNpQpRsDqcnYHveoabYxt+8PjngZ0dPO6XEjWCxnCCcbIsJz15/KobkWeFSf36JrXtCrjVD+xkVT2GNKFYsShFRvzmmdkENyfPfsSnJtiAvMwM+WemWEplTQ7spSkmShCkc4aMBzuX1wetTikpZlngypZSilE+G9kKuqSP8hq+BxJph0Fbac4SPkiWeTKkOl0f7Hg3+3iyyhWZK5Se4U+r0McW4cmYlfnbBSZCk+ALUbzpnDFZcMlErgsdLkiRMq1S6pTYf7j7sfMdxf34ki1KUTup0XVIAcDjGgo690w19w29nD2+0HG8JDTkPpzzPimevP1X7fp53clnIMSO5gY/6EItSRNRvgvOkAOXCdJzaLfXJ/gatk0pkVkQyRc3C2BpjHgVRutG362fFkQOVZTZqozUi7Lwpwtr5gUSSJG7go6QLzpRq7aYoJUb3zCZDSHEnIOhcLbKKbsBEyTAa8JvLp+Dq2cMT+nFjJXKltkR5Ht95wt9J1dDu1Lo5iFJdfVBRKtYuo+CFHT3vlAofch7OSUNy8cbNp+GV78/GSUNyQx7nBj7qSyxKEVG/iRRiLnKlPtyjrKHVd1JFIsYOtnEDHw1QYnTPbDTEHB4MKMUZmzkw7FwrSg3gTCnA30nSXSGAqC+JTCmTukrd3hX5xaR+dC+4U8mfKeVGs0PNlLIltlMq2abHuIFvp268T5aBujZ2S1F6EEUp8e19qCm2olRzULdvTzOlRAZbRTfje3qjSrIxd0xx2Meq1A181TFu4GO2I8WDRSki6jdap1TQaN5YNY9i00Glhb+7PClBbOA70ODgC1AakDrVO6OZcYScCzZ13E+EnYuOjMIBnCkFAPlq0Y2dUpQsYnxPFJW6G99rdDgDjtUTBajmDpdWvMofYEXlKZX5kCTgWEsn6uzhC02yLGtFKfHCvoYjfJQmRAF1XKly8/VwoyOmYk3wCHqvM6Vi6JSKpqpYuVaPpVNKlmVc++xGnPfIR1xIRDFhUYqI+o3IiwouOo1TO6U8an5OcCdVOIU2s/Zxth9jtxQNPB092LwniFwp//ie8uI3OEx5oBHje8F3mYn6ixgtK8pWlnl0F3Tu37xnCXlMjO/JMnBQ7UxI9Pa9ZMu2mDBeff7fHGGEr9buRKPDBaNBwpShytg+c6UoXYhOqVNGKAVYh8urbcPtTvCNlY5uMqVW76zFijd2hB1rFdv3hiagKDVS7ZQ6GMMI4rajrfh4XwP21bUHjN8SRcKiFBH1m6PNyhPZsPzwnVJCrE+eYoQvWh4FUTrqTVFK28AnilLqBW6hLfTF70DC8T1KNtEpJbbZtTs98PnCd0ZE2rwHKHlPuVbl+1iEJSc6UyoVTIvyPL7zhHLTaUxJNkaomTbslKJ0IYpSwwqyMETNSo0lV6o5qCglnsvDefjdPXh+3UGs3lkb8Hanx6t9/u6278VKZEo1OVxojdKN/PqW49rv99e29/pz08DHohQRJZTb68NfNh5GQ3tguKMsyzgWIVOqJEfZwCfEMr4HAFPVsHNu4KOBqENt188yx7/dSmRKBXdKFQ6wTJpg/vG9wDvRhxod2HKkhRkX1OdE0LkoNMky0BbhBWVjlAUEwW9P9Pa9VCDCziNt4NtxTOmyOLkiV3thzU4pSheioFySbcHwIuXa93BT9PG31uBMqW46pURX1SdfNQS8vbZV+dwWkyEhS05sFhNKc5QbW93lSnl9Mv6zTVeUqmdRiqJjUYqIEuofnx/Fsn9+iTv/vi3g7Q3tLjg9PkiSsnpWT5KkgG6pWMb3AGCKmivFsHMaiMRFaM8ypYKCzkWm1ADvlMoLs32vtdONS576BAt/9wn+6w/r8OHuOhanqM+4PcrXls1igjVDucyOlCvlH9+LrShVMADHb6cPLwAAbD3SCqcn9IW3GP2ZWJGrXTvU2Dv77wSJekF0KpXkWDCiUOk0iqdTyqwuOenoJlNKdFGt/6ox4O0iMqMiPzNkkUJPjSyOvoFvQ3WjVowDgP11LEpRdCxKEVFC7a5pAwB8tLc+YBWueHIsz7XCbAr90SM28AGxd0pNGpoHSVLumkYKSe3O54ea8aePD0QcrSBKpt6N7/mDzrvcXjjUj5WIu6WpTHSS6Ndpv7LhsDbOt/lwC777/Ge45KlP8O6OGhanKOHE+J4yfqd8PUbKlYqW9ab/fs0wSrD14GdBqhtTko2yXAs63V58vLch5PEdasj5yUPYKUXpp77dX5TSOqViKEqJ57Ah+crXvCNCp5TPJ6NdLVhVNzi0YHNAt3kvv/eje0KVOsJX3U1R6t9blS6pUSXKsfvq2hL2+WngYlGKiBLqkNrS6/XJ2hMT4M+TipQXNa5M6ZQyhOmkiiTbYtI6rLbG2S0lyzKWvroZ9725K2LAKlEydSYo6Fzk1mQYJS2jZqASmTsi78Ll8eG5T6oBAMsumIAlZ45CZoYRXx5rxZKXPg/p6CTqLVGUMpsMyM3sPuOsydF9B2OBbtteXqY5Yd0OqcRgkHDh5CEAgH/rRn4ApZh3uEm5dji5Ihflecr1AzOlKB14fTIa1aJUaY4FI9Si1KGmGIpS6vhehfo13xFhBLjD7YX+3so6XbeUtnkvr/ch54LWKRVhfM/l8eGtL2sAALfOGwdA2bzNDXwUDYtSRJRQ+ifbf20+pv3enycV/slRbOCpyM9EhjH2H03+Eb6W+M6zsQNHmpRzau3kpi5KPf5OqfgLSfqgc/HCtyBrYL6o1RPbycT2vde3HENdmxNluRZ897Qq/PzCk/B/Pz0H188dCQBYu68+WadKA5RL65TyF4HtneFfUDZEG9/TvX2gbd7Tu3hqBQDgvZ21WjEeAHapXVJD8zORn2XWOqXq2pzweEM3jRGlkkaHEz4ZkCSl6zG+8T21KKXeyI3UKdXeFfizZZ0uV0ps3qtIwOY9oUps4IvQKbV2bz1aO90ozbHgwslDUJCVAVkGvmKuFEXBohQRJYzXJ+Nok791+Mtjrdivtu0eVYtSQyMUpWaPKsIPzhqFX148Ma7PKcLO493Apw+E7HTx4pZST6cWdN6LTCmXR9eNMbBH9wAgTze+J8sy/ufjAwCA6+dWaWPDRdkW3HzuGADKi9twa7SJeipgfC8z2vhe5O17AFCYpS9KDdzv3+mV+RianwmHy4sP99Rpb9dG9ypyAQDF2RYYDRK8Plkr6BGlKhFhUWQzw2Q0aON7De3ObrfpAf5cRHHNHClTqt0Z+LNl3f5GbSxddEpVJGDzniA6paobHGHH399QJyS+MWUIjAYJY9RpBuZKUTQsShFRwtTYu+Dy+pBhlHD2+BIA/m4pkSkVKcTcaJCw7IKTcN7JZXF9zqnqOukvj7XGlQ+zbr+/xbmTbcWUghwJCDpvd3oHVVFKbN9r7XBjzd567K1th81sxNWzhwccV2Qzw2wyQJaB2h7k0RFFIoLOM4wGLXg/XNB5h8ujPfdE+t7UB5sPxM17giRJuGiqMsKn39olQs5PHqIUpYwGCWXq9i+Rl0OUqvwh50pRKC8zQ/s+PhxlhE8UpYbli/G98NepbWqnVEmOBWaTATX2Li3v6URL4julRLeXvcujhbELHS4PVu+sBQBconY/jilVpiBYlKJoWJQiooQReVLDCrJw+YxhAICVm4/D55OjZkr11Phy5QmvpcMdsHGrOz6fHNDizKIUpSJtfC+jJ+N7/qDzaGvnB5J8tQjg8vrw+Hv7AACLZg3XigOCJEna3eNjLXxxS4mjZUoFBJ2HdjmIzXtmo0Ebtw1WNEiKUgBw8RTlRez7u+rQrnaRiE6piWqnFAAMyWeuFKWHOt3mPWFEoZor1c0In9vr074HREGpI9L4nnpckc2MGeomy0/UXCmtUyqBQeeZZqM2Rhscdr56Zy063V4ML8zCNPWGMTulKFYsShFRwoiNIsMLszDvpDLkWEw41tKJjQebomZK9ZTFZNTWbreFufAPZ1eNPeAOT1eEJ3uiZErE+J4SdN79hq+BJMtsRIZRyc3acqQFRoOE751eFfZYcbHPjgtKpIBMqUyRKRV6w0Qb3cuOnPWm75QayON7gFJ4qiq2wenx4f1dtXB5fNr4/8m6olQ5N/BRmtA6pbL9Ranh6va6w02Rt9eJG6ySbvGPI9L4nnrdm2M1Ye7oIgDA+q8aYO9yo00tWCUy6BwARqp/huBcKbHc6JKpFdrPNFGU2seiFEXBohQRJYwIOR9RlAVrhhEXTC4HADz/yUFtFCmRbcRCtLXbwfSjewA7pSg1dSRgfE8JOle+LwoGQVFKkiTkZfr/nBdNGRKxO1P8LDrewhe3lDhappTJ0O1zUyxjtfpMqfwBXpSSJAkXTVG38G09jr21bXB7ZeRlZgR8Dw/JVV6k13DsllKcKEqV5sbXKSWW7+RaM5CjLkvocHnDRlSIwlO2xYS5Y0RRqlG7EZyXmaFdDySKyJVaf6ARder3YUuHCx/tVRaHXDKtQjtWbMg+2ODQfjYShcOiFBEljL5TCgC+OV0Z4Vu1Q1kPW5JjgTUj/hfY0Ygn7ZiLUurongg+ZlGKUpH4urRZ4v+eCdy+N3g6pYDAMacbzhgV8ThRlOL4HiWS2+vPlNKCzsNs3xNFFf1oT7DBsn1PEFv4Ptpbj08PKDePTh6SG9BJxk4pShfhO6WU6+PuMqVEJ39BVobWKe31yXCGWcohOqWyrRmYMiwfNrMRzR1ufLBbWRjQFzeCRffT3z8/iln3v4/Z97+H7/x5I9xeGRPKczBO3aYNAEPyrLCZjfD45Ji2DtLgxaIUESXMIbUdeYTa2ju7qjBg60ei86SEHPVudCzje26vDxurmwAAp6mtzp0c36MUJLbzZPYgU8pmDhd0HvnF70AiXryfNqYIk4bmRTxuqJqzcZxFKUqgsJlSYcb3jqgvSisjLP8AgByLCSaDUpAZ6JlSADCuLAfjyrLh9sp4+iNlc6Y+TwrwjyLVcOyWUlx9DzOlmtXn7LwsM7LM/uf/cLlS7bpOqQyjAbOqCgEA//j8KIDEbt4TLjtlKK6ePRzjy3JgkIBauxNfHmsFENglBSgdkKO1XKm2hJ8LDRyJ7ecjokFLlv13QUaqd4IMBgmXTh+KP6z5CkDi86QE0SkVS1Fq65EWOFxeFNrMmD68AB/uqUcXO6UoBWlB5z0Y39N3Sg2moHMAmDO6GF8ea8Wt88Z1e5x4ccuiFCWSyyMypQz+TKkwXbxH1fGaysLIz4uSJKHAZkZ9m3PAj+8JF0+pwMOr96KhXXlBf3JQUUp0SnHsllJdfXuYopR60/ZYSyfcXh8yjKH9IS2d/k4po0GCNcOALrcPDqcn5HlcFKXEdfDc0cX4cE89Dqh5T33RKZWfZcb935wMQLnG2HHcjm1HW2Dv8uB7p4VmOI4pyca2o60MO6duJbVTau3atbj44otRUaEEoq1cuVJ7zO1246c//SkmT54Mm82GiooKXHvttTh+/HjAxxg5ciQkSQr49etf/zrgmG3btuGMM86A1WpFZWUlHnzwwZBzee211zBhwgRYrVZMnjwZb731VsDjsixj+fLlGDJkCDIzMzFv3jzs27cvcX8ZRGmuucOtFYUqC/13fv9r+lDt90P7qCiVq3VKRR/f+0TNk5ozqkh7sc/xPUpF4uuyZ0Hn/q/tBvVubVH24HhRe9t547D1l+dj5sjCbo/Tgs754pYSyK0LOs/L7KZTSt1IO6ybTikAuG7OCHxtVKG2zWqgu2hqYKdFcFFKbP6qtXfB5wvN2CFKFSJvqVRXlCrNscBiMsDrkyPeEGnpUG4kieUGovM5XKeUuO4WN6JErpQwJIGb98KxWUyYVVWI758xCredNy5sRMeYMm7go+iSWpRyOByYOnUqfve734U81tHRgS+++AJ33303vvjiC/zzn//Enj17cMkll4Qce++99+LEiRPar1tuuUV7zG634/zzz8eIESPw+eef46GHHsKKFSvwzDPPaMesW7cOV111FRYvXozNmzdj4cKFWLhwIbZv364d8+CDD+KJJ57A008/jQ0bNsBms2H+/Pno6uLFLBEAHGpU7sqU51oDnpTGluVo7fcjCm198rnj6ZT6RM2TmjumSAuQ5vgepaJEBJ0D/nX0A317l57FFP3vTKzJbnN6Ys6jI4pGy5QKCDoPfW7SOqWiFKVuPncs/rpkTp/kMaaiqmIbJg1VrhnMJgNGl2QHPF6SY4FBAjw+GQ1qXh5RqnE4PdqCH32nlMEgabmrkUb4xPY9UdTOUm8ydYTZwKcf3wOAk8pzA0Z9+yo2Ix5jSriBj6JL6vjeBRdcgAsuuCDsY3l5eVi9enXA25566inMmjULhw8fxvDhw7W35+TkoLy8POzHefnll+FyufDss8/CbDZj4sSJ2LJlCx555BEsWbIEAPD4449jwYIF+MlPfgIA+NWvfoXVq1fjqaeewtNPPw1ZlvHYY4/hrrvuwqWXXgoAePHFF1FWVoaVK1di0aJFvf67IEp3IrRRhDjqPXT5VKzccgzf1HVNJZIIk43WKdXh8mDz4WYAwGmji/GF+nt2SlEqEsVSmzn+p2qLyQCTQYJH10kwGIKS45FlNqEgKwPNHW4cb+lEbjn/fqj3AjKl1OemdqcHHq8PJnVUp8vt1fJm+mqsPZ1dNKUC24/ZMaE8J2S8KcNoQEmOBbV2J2pau1Ca07edIEQ9IcZPrRkGrWAkDC/Mwr66dm1jdTB/0LlyIykrI3KnVLt63Zut3pw1GCTMGVWEt7crC4bEmHoyiWD0r+rb4fPJMBikKO9Bg1FaBZ23trZCkiTk5+cHvP3Xv/41ioqKMH36dDz00EPwePyV5PXr1+PMM8+E2ey/Qzx//nzs2bMHzc3N2jHz5s0L+Jjz58/H+vXrAQDV1dWoqakJOCYvLw+zZ8/WjiEa7MQdnxGFoUWpkyty8fMLT+pRx0csciyxdUp9drAZbq+MofmZGFGUhUz1zjMzpSjVyLIMh3pXtCfje5IkBXRL5WdlaC+IyU+M8DFXihLF5fVnSokuXsDf0QD4u6SyLaZBEWAer+98bQSunTMCyy44Kezj5eoLbW7go1Qlis6lOdaA7ZGAbgOfOmEQTIzviZ8NolPK4YzcKZWje76fO6ZY+31FH4/vxWJ4YRbMRiUXi9tuKZK0CTrv6urCT3/6U1x11VXIzfXPl//oRz/CKaecgsLCQqxbtw7Lli3DiRMn8MgjjwAAampqUFUVGLpWVlamPVZQUICamhrtbfpjampqtOP07xfumHCcTiecTn9rsd1uj/ePTZQ2tKJUmE6pviYu/KON4Kzbr47ujS6CJEmwMlOKUpTT44OsNjn1tJibbTGhVc2yGSwh5/EakpeJHcftOMZcKUoQEXRuNhmQYTQgy2xEh8sLe6dHCyv350llhrxgJWX8+N5LJ0V8fEiuFVsB1LAoRSmqLszmPSHaBj4xvieKUjFlSukK4GKztNlkQFlu8otSJqMBVcU27Kltw/669oDcWSIhLYpSbrcb3/rWtyDLMv7whz8EPHbbbbdpv58yZQrMZjN+8IMf4IEHHoDFktz11w888ADuueeepJ4DUX853KTc8Rle1De5Ud3J0YLOu++UEnlSp6l3kUSnFDOlKNXoLz6zejC+B/jDzgGgcBDlScVjqHoX+QTv3lKC6IPOAWURR4fLqxWIAX+nVLSQcwpPbOBjpxSlKtEpVZIdpiilXicfjji+Jzql1PE99caUI4ZMKQAYVZKNhy6fghyrKex2v2QYU5qtFaXOmVCa7NOhFJQaX6ndEAWpQ4cOYfXq1QFdUuHMnj0bHo8HBw8eBACUl5ejtrY24Bjx/yKHKtIx+sf17xfumHCWLVuG1tZW7deRI0ei/GmJ0ld343t9zd8pFbko1dLhwo7jSrfiXPUukn98z9fHZ0gUns8nw+kJLYqKQFOzyQBjD/MX9ON77JQKj+N7lGgi6NysvhjMzQzt5D3a5O+UoviJDXw1rfy+pdSkje/lhhaltPG9pg7IcugGSVHAFjmQ4rm8wxkmU0qM71kDb15dMbMSCyYN6enpJ5zIleIGPookpYtSoiC1b98+vPfeeygqKor6Plu2bIHBYEBpqVKFnTNnDtauXQu3238xsHr1aowfPx4FBQXaMe+//37Ax1m9ejXmzJkDAKiqqkJ5eXnAMXa7HRs2bNCOCcdisSA3NzfgF9FA1Onyaq3KyRnfix50vv6rRsgyMLY0G6VqO3Mmx/coyb7/4ibMfeCDkNFTf8h5z3PY9HdOi7JZlArHX5RixwUlhtvjz5QC/Bu07GE6pTjG0jPslKJUV9emfG2G65RSxnaVjuj69tANkqJTqiCoUyp4fE+WZbSL8T1LamfTiaLUvrq2JJ8JpaqkFqXa29uxZcsWbNmyBYASKL5lyxYcPnwYbrcbl19+OTZt2oSXX34ZXq8XNTU1qKmpgculfLOuX78ejz32GLZu3YoDBw7g5Zdfxq233opvf/vbWsHp6quvhtlsxuLFi7Fjxw68+uqrePzxxwPG/n784x9j1apVePjhh7F7926sWLECmzZtws033wxACYxdunQp7rvvPrzxxhv48ssvce2116KiogILFy7s178zolQkWpBzrSat3bg/iTvR3Y3viU17c0b7i9sc36Nk21jdhEaHC7tPBF6oiVXSPR3dAwK39rFTKjxRlGL4KiWKFnRuUjul1Jsm+sKzPlOK4ie+b2vsLEpRaqrvJlPKYjKiQg3rPxyUK9Xl9mrd+3nBnVJB43tOj0/bsJttTe1EHn2nVLjuMKKkfgVv2rQJ55xzjvb/olB03XXXYcWKFXjjjTcAANOmTQt4vw8//BBnn302LBYL/vrXv2LFihVwOp2oqqrCrbfeGlBwysvLw7vvvoubbroJM2bMQHFxMZYvX44lS5Zox8ydOxevvPIK7rrrLvz85z/H2LFjsXLlSkya5A9ZvPPOO+FwOLBkyRK0tLTg9NNPx6pVq2C1Jj9AjijZDqkbREYkIU8K8F/0d9cp1dCuFLP1LwKsGf5OKVmWGThL/crrk7XW+9qgF1fi4rM3Gyv143sFzJQKS2wmqrF3weuTezwqSSSEZEppnVKh2/cqmSnVI+W5/k4pPndTKhIdUOGKUgAwsjgLx1o6caDegZkjC7W3i5Bzo0HSNuqJG6jBmVLiRqwkAVkZfbPdOlGqim0wSErMRn27E6U5fP1MgZJalDr77LO7rZZGq6Secsop+PTTT6N+nilTpuDjjz/u9pgrrrgCV1xxRcTHJUnCvffei3vvvTfq5yMaqP5n7QFsO9aKhy6fohV0AH+n1PAkjO4B/ln6LrcPLo8PZlNoE6i2YjfT/+Jc/4Lf6fEF/JmI+lq7rrMvuCjVqXVK9WZ8z/++HN8LrzTHCqNBgtcno77NqY0FEfWE1ydDbVzwZ0oFbYd1OD1ocqg3SQrZKdUTYqOYy+NDc4ebnaCUcursaqZUhOLLuLIcfLK/EbtrAruktZDzzAyt2CqWlgRnSmkh52YTDCl+Q8WaYcTwwiwcbOzA/tp2FqUoREpnShFR6uhye/HQu3vw763H8fqWYwGPJTPkHAjMzonULdWs3n0S7dAAYNUVrzjCR/1NP84T2imlfD1m9qJQGhh0ntxttKnKaJC0rguO8FFviS4pwJ8plRuUKSW6pPIyM7QuX4qP2WRAsZrVc4Jh55RivD4ZjWrhOVKn1EnlSs7wnlp7wNtFp1S+7lpVjPEHd0ppeVIpPronaCN89Qw7p1AsShFRTLYeaYFLDXB9ZWPgJslDaqdUMkLOAcBkNGgdJZFypfzbTMwB7yfuZjPsnPqbvihVYw8MO9WCzi09v9jUX6gWsZMgoqHcwEcJ4gpXlNIypZTnpiPq82Ulu6R6xb+Bj7lSlFqaO1zw+mRIUuQu5fHlOQAQkifZEhRyDug6pYJunrY5lWuI7F5cJ/SnMaXKn5kb+CgcFqWIKCYbq5u032890oKdx/13d0Sm1PDC5GRKAf4RvkhFKa0lOivwzrQ1g0UpSg59xkxwp5QjAZlS2RYGncdC5EqxKEW9JTbvAfpMKeX7sFXrlFJDzvOZJ9Ub3MBHqUqEnBdmmbXidLBxZTmQJKDR4dKOB4CWzm46pZwDo1NqXy2LUhSKRSkiiskGtSglxon++tlhAIDH68MxdRwhWZ1SQPdh5z6frL0gCC5KiRf9HN+j/tYWw/heb8JLuX0vNkPYKUUJ4vYqgVIZRknLg8kLGt87IkLO2SnVK+yUolRV183mPSHTbMRIdTnQHl2ulP8Gqq5Tyiy270XIlEqbTimO71FkLEoRUVRurw+fH2oGANwxfzwA4F9fHEOny4vjLV3w+GSYTQYtmyUZcrQw2dBOqbYuD8TeBH3QOeAvsnWxU4r6mT0o6Fy/3CMRQedi9C/LbGSIfzfEevnjfHFLveTfvOe/vPaP7wV1SnHzXq+wU4pSVX0MRSkAGF+mjvDV+CcPtEypTF2nVITxPVGUykmzTqn6NidaOyJvy6bBiUUpIopq+7FWdLq9yM/KwPVzR2J4YRbanB78Z9txHGpSRvcqCzKTuv0jp5tOKXHnyWY2hmzmEy/WOb5H/U3/tdrl9gWM82lB5+ZeZEqpRSl2SXVvKMf3KEFc4YpSWqeUyJRip1QiaJ1Sdn7fUmqJtSg1YYgoSvk7pbRMKd3ztrg51REUdC7iKtKlUyrbYtK+b/fXt0U5mgYbFqWIKCoxunfqyEIYDRIWzaoEAPxl42H/5r2i5OVJAd13Svln9ENfnHN8j5JFX4QCgNo2/x3/TrfyWG86paYPz8fMEQX49tdG9PhjDAYVHN+jBGGnVP8pz1W+b0+0sFOKUkud+lwetShVHtoppW2K1nVK2bRMqUjje+mzxVMb4WPYOQVhUYqIohIh57OrCgEAl88YBpNBwheHW/DerloAyc2TAmLrlArOkwL843vslKL+Fvy1qs9GERefvR3f+/sP5+K/zxrd448xGIiiVHOHO+RONFE83B5lBNds9HcNi6DzDpcXje1O7cbJsAJ2SvXGEN34nn70mSjZtE6p7Cjje+W5AJTgb69P+RoWY2367XviOqDT7dWOA9Iv6BxgUYoiY1GKiLrl9cn4TCtKFQEASnOsmHdSGQBgzZ56AMCIwuQWpXK72b4nnuS7K0oxU4r6mz2oKKUPO9eCznsxvkexybVmaOMPx9l1Qb2gje/pxsT1ozW71PXvRTYzv7d7SWRKdbq9IV2nRMkkilKlUXJWhxdmITPDCKfHh4PqFmtxE7VAd71q0/0M0d9A1TKl0mR8D9Bt4GNRioKwKEVE3dp1wo42pwfZFhNOUuffAeCq2cMDjkv2+J7I7ei+Uyp0fM/K8T1KElFAVZd0BRSlEjG+R7GryBddFxzho54LN75nMhq0wtSO460AgGFJvokzEFgzjNoL92McvaUUEmunlNEgYVyZUqTZrRasRdxEnq4oZTEZICJbO5z+AmxbOnZKlbBTisJjUYqIuiVG92aOLIBJd6F9xphiDM33jx8MT/r4XuROqXDbTAT/+J6vD8+OKJTolBJjPLV2p/aYP+icRan+wFwpSoRwRSnA38m747iSHcPRvcQYp24v23q0JbknQqQTa9A5AExQR/j21Nghy7I/6Fx3E1WSJC1XSr+Br92pXEOkS9A5AIxVv2ePtXRyXJ4CsChFRN3aUN0IAJil5kkJBoOERacqgeeSlPyL7O6LUqFP8gIzpShZxNfq2FLlIq1G3ynl6n2mFMVOFKWOcXyPekEUpfSZUoC/k1d0SlUy5DwhRM6liBggSrZOlxdtajdTLEWp8WrY+a6aNjhcXri9SmZUcNyEuEHl0BVytKDzNOqUKrSZUWgzQ5aBA/WOsMf87bMj+MYTH+PGlz/Hk+/vw3s7a3GspZPZcQNc+nwVE1G/k2VZF3JeFPL4ladW4oX1hzCuLBsWU3JfPOdYIo/v+bfvhemUMjNTipLDrn5dji3Nxge761CnK0qJC0/mzvSPoeyUogRweSJ0SqlFqeoG5UVYsm/iDBSnqkWpDSxKUYoQXVIWk0HrkOyO2MC3p6ZNu4FqNhm0G6aCzWIC2pyBnVJd6ZcpBSgjfBsdTdhf145JQ/NCHn/yw3040tSJHcfteOvLGu3tJw/JxfPfPTVqVhelJ3ZKEVFE++va0dzhhjXDgMlhnjhKc634+M5z8NLi2Uk4u0CiU8oeplOqWQs6D5MplcFMKUoO0Sklgj/ZKZU8IlOKRSnqDZfa5WA2BY/vKUUpsTirkplSCXHK8AIYDRKOtXQyV4pSQrUaWF6Wa4UkSVGO9ndKHW7qwLFm5Ws4PzMj5H3FtYDDmd6dUgAwpixyrlStvQtHmjphkIA7F4zHN6cPxYTyHJgMEnaesOPbf96AJoerv0+Z+gGLUkQU0afq3ccZIwpCLrKFTLMRRkP0J96+lmON3CnVKoLOu82UYlGK+o8sy1qmlMhYqG9zauueO1iU6ldD8pTOlROtHN+jnnNH7JQKfNHITqnEsFlMmFShZPJwhI9SweqdSmfP3NGh0wXhFGVbtDE/MZkQLmoiXKaUFnSehp1SALCvri3ksU0HmwEoWVs3nj0Gj145DauWnokPbj8bZbkW7K1tx3f+vAGtnaHX+pTeWJQioojEE+SskbE9uSaTuOjvrlOqwBauKKX8GGRRivqT0+PTsiOqim0wGiT4ZKCh3QlZlrWvRwad94+hWqYUcyuo5yIHnQc+9+iXhFDvzOIIH6UIn0/GOztqAQDzJ5XH/H5ihO9TNcM1XNREliWwU8rl8cGpFsFFfEW6EN3h4TqlNh3yL1fSG16UhZe//zUU2czYcdyO65/bqHWK0cDAohQRhSXLMjYcUJ4gZ48qjHJ08olOKeWJOrDAJOb08zLDBJ2LTCmO71E/El1SBknJgxCro2tau9Dl9kHURZgp1T+UUQvl50cjRwOoh7Sgc1P4oHMAKM2xaGPj1Huz1LzLzw6yKEXJtflIM+rbnMixmGLulAL8RanPDyldQuGKUqJTStyw0o/x2Szp9fNkrDq+d6ixQ8vhE8TfwYwRBSHvN6Y0G//7/dnIy8zA5sMt+P4LnzF6YwBhUYqIwjrU2IG6NifMRgOmVeYn+3Si0rcv6zfwebw+rXuqIMwTvZXje5QE9k5/273BIKEsT8k0qrV3BWzXCQ47pb5hNhlQqo5QMFeKekpkSoV2Svmfn5gnlVgz1Rev++va0djuTPLZ0GC2arsyunfuSaVxLf8ZX66MoHa5lQJNuPE9f6aUcq0quoQyM4wwGdPr5Xx5rhXZFhM8PhmHGv0b+DpcHuw4bgcAzBwZ/mb4SUNy8dLiWcixmPDpgSb86s2d/XLO1PfS66uYiPqNGN2bVpmfFnd1jQZJK0zpi1L6cb48ZkpRihDZZ6KDokwtiNTau7Q7f9YMQ0rktQ0WFdzAR70UaXxP/9zDPKnEKrCZMV7N5ftMzaMh6m+yLGPVDqUotWBi7KN7gL9TSsgLN76nFqU61JtWWp5UmoWcA4AkSRhdYgMQOMK35XALvD4ZFXnWbkecpwzLx33fnAQA+OIQv+cHChaliCisLw4rP+hPrQptoU1VYgOfPuy8WR3dy7GYwt5N0sb33L6Qx4j6iiiWirHTcq1TyqkLOU+/i810VpEnilIMO6eeiRx07n+RWVnATqlEE9cpG5krRUmy84QdR5o6YTEZcNb4krjed0xpdsANqLCdUupN1+BOqZw0CzkXxpQqhTh9UWqTGN2L0CWlN0z9OdrB8b0Bg0UpIgrruLqFamSRLclnEjtRlBKjUQDQooac54cJOQf8nVJdETqlnB4vnvukGgfqQwMZiXpK65RSv2bLcpWiVI29S7sTytG9/lWRr/wbHG1mpxT1jJYpZQzKlLKyU6oviVypjQcbk3wmNFi9o47unTWuJO4bStYMI6qK/dfa4aImbEGdUu1O5RoiHTulAH/Y+b4wRamZYfKkgmVrRTqGnQ8ULEoRUVh1dqUoJV4spwNx4a/vlBIh5/lhQs4BXaZUhLst7++qwz3/3onfrNqdyFOlQU4UTkWnlPg+04/vZXHzXr8arhbgDzd1JPlMKF1FzJTKZKZUX5qldlbsPG4PeP4n6i/a6F4cW/f0xutG+MIt5RGFLod6faCN76Vtp1TgBj6vT9ZG8YI374Ujwt25gW/gYFGKiMKqa1MCQ0tzLUk+k9j5x/fCdEqFufME+Mf3ImVK1arFucZ2buSixPFnSolOKX+mlLjozErTi810NbJIKRbog1eJ4qFlSpmCg87ZKdWXyvOsGF6YBZ/s395F1F++qm/H3tp2mAwSvj6hrEcfY0KZvygVtlNKLcJ0OEWn1MAoSn1V3w6vT8aemja0Oz3ItpgwQQ1+7474czs9Pni8jN8YCFiUIqIQLo8PTepa9NKc9OmUEl0n9jCZUvlhZvSB6EHnosDFuXVKJLs2vqdmSuXqM6WUr7ksju/1KzGqfKipAz6fnOSzoXQUKei8ONsCa4YBORYThuSxKNUXTlW7pT47yFwp6l/vqF1Sc8cUhw0pj8WEIf5CTLjrVdEpJa5F29M46BwAKgsyYTYZ4PT4cKy5E58fUr5vpw/Pj2nBi01XjBM5W5TeWJQiohD16lrlDKMU9o5NqgrXKdXaqbz4j/TnEEUpl8cHb5gXonb1/UWhgCgRxNeoyJQqVYtSrZ1uNKsFYY7v9a8heVZkGCW4PD7U2Bl2TvGLlCmVaTbilRu+hr8s+RrMJl5694XZVUpRimHn1N/e2VELIP6te3r6DXzddkq5Ajul0jXo3GQ0YJSao7W/vs0fch5DnhSgFP7Fz9J2Xp8PCHxmJKIQIk+qNMcKSUqflfQ5WqaU/wlK65TK7H58Dwgfds5OKeoLotgpvmZzrSatQHqwUck0ymRRql+ZjAZtM9pBjvBRD7g84TOlAOCU4QWYNDSvv09p0JilFqW2HmmNuLiEKNGOt3Ri65EWSBJw3sk9G90DlLHer40qxLTKfBRnh8ZmZGZEyJRK004pABity5XadFDd+B3D5j2BYecDC4tSRBQiHfOkAH2nlD7oXGRKhR/fs+juWocb4Wtzik4pXuRS4midUmqmlCRJWq7UgQalIMJOqf43QsuVYtg5xS/S+B71vRFFWSjJscDl9WHrkZZknw4NEu+qo3unjihESU7Pr5klScJfl8zBv26cC0OY8bXImVLpM80QbKxalPp4XwOOtXTCaJAwrTI/5vdn2PnAwmdNIgrh75RKr6KUGIWyhy1KhX/iliTJnysVpvDk75TyQJaZM0OJIb5Gc3QByGIDX3WDso0m3rXS1Hsj1Fypgw3slKL4RQo6p74nSZLWLcURPuovYuve/B5u3QsWaTohePteumdKAf6w8//b3wAAOGlITkBWVDQ2MzulBhI+axJRCK1TKo1CzgEgNzN0fK+lUxnfK4jQKQX4x6TCtfyLMSufrGz5IEoE8TWao7ugFEWpY82dANgplQxiAx/H96gnImVKUf+YpY7+bGTYOfUDWZbxxeEWAMA540v69HMNtEwpwF+UEvd7Z46IfXQP8Iedsyg1MLAoRUQhatVOqbK0Hd/TZUo5lKJSdxtRutvAp/9YHOGjRBHFTv2q+PI8pSgl8vZZlOp/I9TgVY7vUU+4vJEzpajviU6pTQebmStFfc7h8sKl3qzs662aolPK7ZXh8vjQpo3vpW9RqqrYBv2k4syRsYWcC6Io1c7tewMCnzWJKES6dkr5g87943v+7XuRO6WsGcqPwnDje3ZdUYp3YyhRwnVKBY/LZnJ8r9+NFON7jQ6O61Lc3B5mSiXThPIclOVa0On24tMDjck+HUoRfbU9WWzKtZgMfb6YRH+TqtPlRbt6nZvO43sWk1EbmQfi75TKVrvHeG0+MPBZk4hC1NrTPehceYJyeXxai3Ok7XuAf3wvfKeUv8AV7nGieHl9snaXMzcztFNKYKdU/xuanwmjQUKX26cV54li5WLQeVJJkoSvn6RsQHtvV22Sz4ZSwfOfVGPSL9/Bh3vqEv6xxXbnQlvkm56JkmE0wKz+XHG4PLqg8/QtSgHA6BJlhG9ofmbINVA0WqZUHxUdqX/xWZOIQtS3iaDzdO2UUkLJRZeUJAW++A8mxveC2/2dHm9AjhTvxlAi6DfFhMuUEliU6n9mkwFD85UxDIadU7y0TCkTM6WS5Ty1KPX+rjp2OxI2H2mBTwa2HWlN+Mdu7ojeiZ9IWbpcqfYw3dbpaEJ5DgD/6G08mCk1sLAoRUQB3F4fGtWW5HTtlHJ5fXB6fGhVQ85zrRkwhlmxK1gjZErp86SA8ON9RPES3XcWkwEWk7/wVB5SlErvi810NUINO2euFMXLxfG9pJszugiZGUacaO3CjuP2ZJ8OJZm4butwJ75wIcb3CmyRb3omkugMsnd5tC186d4ptfj0Kiw5cxTumD8+7vfN1opSvDYfCPisSUQBGtqdkGXAZJBQ2E93fxIl22yC2KZr73Lr7mJ1f8GgBZ27ArfrBRelHCxKUQLYO8UdzsCvy5KgTCl2SiWHPleKKB7+7Xu8vE4Wa4YRZ4wtBqB0S9HgJm429sVNxSZH9O3OiSSuCep1o+XpnCkFAAU2M35+4Ulah3I8/EHn7JQaCPisSUQB6tQ8qZIcCwzddBelIoNB0u6ctHV50NIhNu91f8EQKVNKnycF9F1YJg0u4usqNzPwYtKaYQwooPZ1cCqFx04p6im32L5n4uV1Ms1jrhSpRCxDX2xPbuno56KUen1bp27INhsDu60HGwadDyx81iSiALXqk11pbnrlSQm5ulypZu2CoftOKaspfKaU6GgR+uKihgYfe1f4TikgMFeKnVLJwU4p6il2SqWGcyaUQpKAL4+1oqa1K9mnQ0nUp51S4hqzH4LOAcCmXhOIJRzp3iXVW+yUGlj4rElEAcSTXfB6+nTh38DnRqvaKdXd5j1A1ynlitYpxaIU9Z7WKRXmgjKgKJUxuC84k2Vksb9TikHJFA83t++lhJIcC6ZV5gMA3t/NbqnBTMuU6oNO91gjIhJF5EyKm8fpnifVW+Lvg51SAwOfNYkogGgLTv+ilL9TKj9Ka3WsQecdfOKjBLB3iqJUuE4p//ed2LRD/WtYQRYkSbn7KpY+EMXCH3SeXqPvA5E2wreTRanBTBSl+iITVASdF/ZTp5Tonq5VYzYGe1GKQecDC4tSRBRAdEoFr6dPFzna+J4bLeqL//xYg86Dx/eCO6XcfOKj3hPFzuBMKSBwAx/H95LDmmFERZ4SunqII3wUBy1Tip1SSXfeyUpR6pOvGpkHOYgNpKBzm0UUpdROqUE/vqf8fXB8b2DgsyYRBahN804pMRJl7/RoIZTRx/eUH4VdruCiFDulKPFEsTNcppQ+y806iANMk02M8B1sYNg5xU7LlGLQedKNLc1GZWEmXB4fPt7XkOzToSTpdPfd+F6LNr7XX51SatC5evM4h51SAAAHi84DAp81iSjAgOqUEhcMUVqrI3VKiewfo7qFkJlSlAhap1SYu5yiUyozw5h22y8HkhFq2Dk7pShWPp8Mj4+dUqlCkiRthO99buEblHw+GV1upVCc6E4pWZZ1Qef9kyklgs5FhxY7pZgpNZDwWZOIAoiiVEmadkqJTCl7l0cLocyL0ikVLVOqJFv5u2BRihKhu06poQXK2Fi0r1nqWyOL1E6pRnZKUWzcPp/2e2ZKpQZRlPpgdx18Pi4tGGycHv/3ZKLjFzrdXi1Drt86pYI6owZ7ppQoSrm9MpweXp+nu8H91UxEATxeHxra1e17uelalBKdUh60dsQ27x9t+15ZrgU19i7mUlBCdJcpNaE8B7efNw5jy3L6+7RIh51SFC+RJwWwUypVzKoqRI7VhIZ2F7YcbcEpwwuSfUrUj/Q3GhN9U1F0K5lNhn7Lf7QFfZ5B3yml+/vocHphYeRBWuOzJhFpGh0uyLIyrlZkS9eilNi+59Y6pWINOu8KDjrvVIoHYpSxL7a30OAjtu/lWEK/LiVJwi1fH4sFk8r7+7RIZ6RalGKnFMXK7dF3SvHyOhVkGA04a1wJAG7hG4z0RSmXxwdvArvlmh3K83hhlhmS1D+dkSJTShjsmVImowHWDOVnLcPO0x+fNYlII0LOi7PNWo5SuhFFqUaHS7sgyY/WKRVpfM+pXHSU5ylFqb7Y3kKDj79TiiN6qWp4oTK+19rp1tZ+E3VHhJwbDVLaPn8ORKeNKQYA7DhuT/KZUH8LvmZLZLd7s1ikE+WmZyIFd2QN9vE9gGHnAwmLUkSkqbOnd8g54H+hf7hJ6XAwSNHvJlnN3WdK+Tul+KRHvefPlOIFZarKNBu10PmDHOGjGLjUohTzpFLLEPWmksjLpMEjuPs9kTcWRVGqMMoinUQKyZQKk0s52DDsfOBgUYqINLVtSqdUaZqGnAP+jWb16gVofpY56hYzrVPK5Qt4e3BRip1SlAh29euKRanUNkINOz/EET6KgciU4uheainNUZ6/69XrGxo8gnOkEpkrJTpo+yvkHAiTKcVOKdjUkcZ2J6/P0x2fOYlIIzqlSnLSt1MqeKNZfgwjUuEypWRZ1rJ/RMcEt+9Rb3XpNvZwfC+1+XOl2ClF0YnxPTOLUilFLG1pdLjg8fqiHE0DSXD3eyK73ZvUzNICW3+O7wVlSvHGFmwW5fqdnVLpj8+cRKQR7e1labp5Dwh9ko5l3j9TN74ny8rd7i63Dx41FLM8T/n74PY96i3RfSdJQLaZF5SpbEQxO6UodqLYzE6p1FKYZYbJIEGWgYZ25sMNJsHd7Qkd31M7pQr7s1PKwk6pYGJ8j0Hn6Y/PnESkqbOL8b0B1CkVwwWDVe2U8vpkbQSjTc39MUhAcbZSlHJ7Ze2FB1FPiK+rbIsp6lgpJRc7pSgeWqaUid/XqcRgkLTncLHMhQaH4EyphI7vaUHn/ZgpZQ7OlGJRiplSAweLUkSkGQidUjazEfrX+jF1SmX47z6Jdm+R+5NtMQVcCDBXinpDfF3lMqA05TFTiuLhZqdUyhIjfAw7H1yCx/f6oijVr0HnQZlS0Zb4DAai45xFqfTHZ04i0tQOgE4pSZICuqXyM6NfMGQY/Su8u7SilNLRkpuZAbPJoG1U6nDziY96ro2b99LGCLVTqsnhQquaL0cUieiyZaZU6hHLW+oYdj6ohIzvJfD6rcmhPCfEcuMzUfQ3UAF2SgH68T3eME53fOYkIgDK6FpDe/p3SgGBL/gLYrhgkCRJt4FPeWJr0zakKe+fpd2N4RMf9Zy9k51S6SLbYtLGfg6zW4qiEEHn7JRKPWJ5i1jmQoNDX3ZKtSShU8pgkLRuKYMUWqQajLIZdD5gJPWZc+3atbj44otRUVEBSZKwcuXKgMdlWcby5csxZMgQZGZmYt68edi3b1/AMU1NTbjmmmuQm5uL/Px8LF68GO3t7QHHbNu2DWeccQasVisqKyvx4IMPhpzLa6+9hgkTJsBqtWLy5Ml466234j4XonTW2O6ET1ae6Iqy070opeuUivEulsiVEhcxwR0t4kKA43vUG21aBx7vcKaDYQWZAIBjLZ1JPhNKdSJTymxiUSrV+DulWJQaTIIzpRJ5/dakBp0X9GOmFOC/QZptMUGSmF/HTKmBI6nPnA6HA1OnTsXvfve7sI8/+OCDeOKJJ/D0009jw4YNsNlsmD9/Prq6/O2311xzDXbs2IHVq1fjP//5D9auXYslS5Zoj9vtdpx//vkYMWIEPv/8czz00ENYsWIFnnnmGe2YdevW4aqrrsLixYuxefNmLFy4EAsXLsT27dvjOheidCYu1oqyLdooW7rSd0rFGkKZaVZ+HPqLUqKjJbAolciVwjT42LViJzul0oEoats5vkdR+Dul0vv5cyAqy1U6peo5vjeoBBehEtUp1enywqlmyBX0Y6cU4N/Ax2sIhVaU4rV52kvqrdoLLrgAF1xwQdjHZFnGY489hrvuuguXXnopAODFF19EWVkZVq5ciUWLFmHXrl1YtWoVPvvsM8ycORMA8OSTT+LCCy/Eb3/7W1RUVODll1+Gy+XCs88+C7PZjIkTJ2LLli145JFHtOLV448/jgULFuAnP/kJAOBXv/oVVq9ejaeeegpPP/10TOdClO5E1kK6j+4B/kISEHunlGiD7lIvWsSL0Nyg8T12SlFvBBc7KbXlZyrf/8yUomg4vpe62Ck1OPXV+F6TOrpnNhpgM/fvCJ2+U4r8fw+M1kh/KfvMWV1djZqaGsybN097W15eHmbPno3169cDANavX4/8/HytIAUA8+bNg8FgwIYNG7RjzjzzTJjN/kr2/PnzsWfPHjQ3N2vH6D+POEZ8nljOJRyn0wm73R7wiyhV1apZC+kcci7EG3QO+ItSwZ1SweN7vBtDvSGKnbzLmR7yWJSiGLk9DDpPVdr2PWZKDSriJqJFHantTND1W7M6upefldHvI3SiCMaQc4U/6JzX5umu18+cdrsdK1euxK5duxJxPpqamhoAQFlZWcDby8rKtMdqampQWloa8LjJZEJhYWHAMeE+hv5zRDpG/3i0cwnngQceQF5envarsrIyyp+aKHnExdpg7ZSKnCklOqWUxxMZlEmDj9YpxUyptMCiFMXKxU6plCVutjW0O+HzyUk+G+ov4nquSB2xcyTo+q05CSHnQqYoSrFTCoB/nJGZUukv7mfOb33rW3jqqacAAJ2dnZg5cya+9a1vYcqUKfjHP/6R8BNMZ8uWLUNra6v268iRI8k+JaKIatXxvZKB1ikV6/ieOfz2PVE8EC3THXzio15gplR6yVWLUi0sSlEU2vgeg85TTnG2GZIEeHyyNnpFA58oShVmK8WjRMUvNOk6pfqbTYzvsVMKgP/vg0Wp9Bf3M+fatWtxxhlnAAD+9a9/QZZltLS04IknnsB9992XsBMrLy8HANTW1ga8vba2VnusvLwcdXV1AY97PB40NTUFHBPuY+g/R6Rj9I9HO5dwLBYLcnNzA34Rpao6bXwv/TulxMidySDFfDdJy5RSL2KCiwdap5SbnVLUc3YtU4pFqXTATimKFYPOU5fJaNC6ZWrtDDsfLEQRqtCmXNd2JGh8r6XDrX7c/u+UyhJB5+yUAsDxvYEk7qJUa2srCgsLAQCrVq3CZZddhqysLHzjG9/Avn37EnZiVVVVKC8vx/vvv6+9zW63Y8OGDZgzZw4AYM6cOWhpacHnn3+uHfPBBx/A5/Nh9uzZ2jFr166F2+2/oFy9ejXGjx+PgoIC7Rj95xHHiM8Ty7kQpTt/0PnA6ZSKZ94/OFPKHiFTqoNhitQL/kwpXlCmAxalKFZuLzOlUpnoAmfY+eDRFTS+l7Cgc7VTqiDG7c6JZGPQeQAt6NzlhSxzNDedxf3MWVlZifXr18PhcGDVqlU4//zzAQDNzc2wWuN7Mdve3o4tW7Zgy5YtAJRA8S1btuDw4cOQJAlLly7FfffdhzfeeANffvklrr32WlRUVGDhwoUAgJNOOgkLFizADTfcgI0bN+KTTz7BzTffjEWLFqGiogIAcPXVV8NsNmPx4sXYsWMHXn31VTz++OO47bbbtPP48Y9/jFWrVuHhhx/G7t27sWLFCmzatAk333wzAMR0LkTpbiB2SuXHccFg1cb3lLvd/qBztVNKfeJjphT1hn8slJ1S6UAUpewsSlEULg8zpVKZuLapZ9j5oKGN76lFqeBtfD0lMqWSUZQ6fWwxcq0mnDamuN8/dyoSmVJenwyn+jOY0lPcZdalS5fimmuuQXZ2NoYPH46zzz4bgDLWN3ny5Lg+1qZNm3DOOedo/y8KRddddx2ef/553HnnnXA4HFiyZAlaWlpw+umnY9WqVQHFr5dffhk333wzvv71r8NgMOCyyy7DE088oT2el5eHd999FzfddBNmzJiB4uJiLF++HEuWLNGOmTt3Ll555RXcdddd+PnPf46xY8di5cqVmDRpknZMLOdClK68Phn17SLoPP2/pk8akguDBEwemhfz+4Ru31NehIrQ9KwMEXTOFmEK9ZeNh1GQZcaCSZFHugH9WCjvcqYDUdhmpxRF42bQeUoTRSnRFU4DX3BRKlE3FZvV8b2CJIzvzZ9YjvNPLuv3rX+pSnSOAcoIn1haROkn7qviG2+8EbNmzcKRI0dw3nnnwWBQnnxHjRoVd6bU2Wef3W2rnSRJuPfee3HvvfdGPKawsBCvvPJKt59nypQp+Pjjj7s95oorrsAVV1zRq3MhSldNDhe8PhmSpASCprsxpdnY+It5cd3FCsmU6gzKlGKnFEVQ3+bEsn9+CZvZiPkT50e8WPT5ZC33gJlS6UE/vifLMl8IUET+oHN+jaSi0lxRlGKn1GAhOt+LExx03qyN7yXneZzPQ34Gg4QssxEdLi8cTg+Ks9N/2mOw6tGt2pkzZ2LKlCmorq7G6NGjYTKZ8I1vfCPR50ZE/UTcOSyymWEaIHd5431i0m/fk2V98SAoU4qdUhSkRW3ld7i8cHp8Ee/Utbs8EPdh2CmVHkRRyuuT4XB5meNBETFTKrWJLvA6ju8NGv5MqcQGnWvje0nolKJQNosJHS4vw87TXNzPnB0dHVi8eDGysrIwceJEHD58GABwyy234Ne//nXCT5CI+p7YRlOak/6jez1l1Y3vOVxe+LTiQdD2PXZKURCH7mtCZEaFIx4zGw1sMU8T1gyDVmRo4Sp56oaL43spjeN7g4ssy1oRqjA7weN7aqdUYRIypSiUFnbORURpLe5nzmXLlmHr1q1Ys2ZNQJ7SvHnz8Oqrryb05Iio73m8Pvz+w68AAKNKbEk+m+TRZ0qJPKkMowRrhvJjMsvs3/BBpOfQ3Z0TXzvhaDllmey2SReSJGmh9MyVou64GXSe0rh9b3BxeX3azUWxfc/p8cHr6/2GtqYkBp1TKBF27uAkQ1qL+8p45cqVePXVV/G1r30tYKZ14sSJ+OqrrxJ6ckTU9x59by82HWpGtsWEn8wfn+zTSZpMs/JCosvthb3Tv3lP/JyzaeN9fNKjQPqiVHft4/qvK0ofeZkmNLQ7WZSibvmDzpn3kor8nVJO5sMNAl0u/ya2Qt2YXae7d2PYnS4vutzKxy6w8bk8FYiwcwfH99Ja3Ldz6uvrUVpaGvJ2h8PBH/BEaebjffX4/RqlmPzryyZjRBE7pTpd/k4pfe6PyJxiezAF64h5fC9woyOlB5ErZWdRirohxvfMJnZKpaIStSjl8vhYYB4ExOY9k0FCtsUE8RK1o5eFC5EnJT4uJZ/NwqLUQBD3M+fMmTPx5ptvav8vClF/+tOfMGfOnMSdGRH1qbq2Ltz66hbIMnDVrOG4aEpFsk8pqUTGT5fHqxUW9EUp8aQnLnSIBH3LeHdFKXtX4EZHSg/56ogGX8hSd1weZSyI43upyZph1ArMHOEb+MS1WmaGEZIkISsjMbmg+pBzNmOkBnF93s6bxmkt7hLv/fffjwsuuAA7d+6Ex+PB448/jp07d2LdunX46KOP+uIciSjBvD4Zt766BQ3tLowvy8EvLz452aeUdPpOKbvW0ZIR8jjvxFCw2DOl1I2OzJRKK3nMlKIYuBl0nvJKcyxo7XSjzu7EuLKcZJ8O9aFOtfhkVbvcM80mOFze3helHMrzAEPOU0e2hdfnA0Hcz5ynn346tmzZAo/Hg8mTJ+Pdd99FaWkp1q9fjxkzZvTFORJRgv1hzX58sr8RmRlG/O6a6dwEBv94XpfbB3s3nVKJCsqkgUM/0tl9ppTaKWVhp1Q6YVGKYsFMqdRXmht5A9/Kzcfwuw/3Q5b5/D4Q6DulAP8G5U537woXIuQ8P4vP46mCmVIDQ49u144ePRr/8z//k+hzIaJ+YO9y4/H39wEA7r10IsaU8m4hEH77nn7MSlzQAECHy8MRLNJ0xDi+x06p9CS277V0sChFkYmilJmdUimrNMIGvi63F3f+fRtcXh/OHl+CiRV5yTg9SqCuCEWp3nZKtahFKX14OiWXf3yPRal0FtOVsd1uj/kD5ubm9vhkiKjvHWnqgNsro8hmxuUzhiX7dFKGNSDoXC0e6ApPFpMBBgnwycoxLEqR4HDF2CnFTKm0xE4pioXLy0ypVKdt4LMHFqW2HGnRguq3H2tlUWoAEON7mdr4XnxFKXuXGw+u2o2rZ43AyRX+17ZNDtEpxaJUqshm0PmAEFNRKj8/P+YwN6+XIWNEqazWrrStl+dZGdKok2n2d0qJF5/68T1JkpBlNqHd6QkoQhDFmill7wwdC6XUx6IUxcLt4fa9VFeaKzqlAsf3Nh1s0n6/43jsN+IpdXUEdUqJEa/OGK/fVm4+hv/99DB2n2jD3384V3u76JgttPHmUqpg0PnAENOV8Ycffqj9/uDBg/jZz36G66+/Xtu2t379erzwwgt44IEH+uYsiShhalqVO4Rl6sUZKTJ1uVoNamt/cPEgy2xEu9MTMK5FpM+UimX7nihyUHoQ/152FqWoGww6T31ap1TQ+N7Gg83a71mUGhi6etkpJa4DPz/cjLq2Lm30U3RKFbBTKmXYGHQ+IMRUlDrrrLO0399777145JFHcNVVV2lvu+SSSzB58mQ888wzuO666xJ/lkSUMDVqpxSLUoH0Ye/igjU3aMwqUZkENLDEmiklOm1YlEovItCWnVLUHS1TysQO5FQlilL1uqKU1yfji0P+otTO43Z4fTKMBv47prNIQeex3lRsVjuiZBlYvbMW18weob6dRalUo43v8YZxWov7ds769esxc+bMkLfPnDkTGzduTMhJEVHfqRPjeyxKBTAaJG3sQlywBgdSZ6nt3yxKkV7MmVIsSqUlju9RLNzMlEp52vie3T++t7vGjnanB9kWEzIzjOh0e1Hd4EjWKVKCiKKUNXj7XozXby26n/erttdov29m0HnK6S7ovLXTze/nNBH3M2dlZWXYzXt/+tOfUFlZmZCTIqK+U6NlSlmSfCapR9xRE3kTwYHU2p02tgiTTkeMmVKiqJHLolRa0RelfD6ui6fwXBzfS3miU8rh8movYDepo3unjCjAhCHKNuIdx1uTc4KUMP6gc+X7MTNDdNPEWJRSi08AsP6rRrSqnVPNDuW/ooOWkk90SnWEyZT68V8347xHPsK+2rb+Pi2KU9xpq48++iguu+wyvP3225g9ezYAYOPGjdi3bx/+8Y9/JPwEiSixalo5vhdJZoYRrZ1u7Y53SKaUhZ1SFEqfY9AeYXxPlmXY1cfYKZVexL+XTwbaXZ6QsV4igJlS6cBmMcFmNsLh8qLO3oXskmxsVEPOTx1RgLo2JzYfbsHO43ZcOm1oks+WeqMrwvheZ4wjXiLQHAA8Phnv767Ff50yjJ1SKUj82wZnSsmyjA0HmuDxyVj3VSPGluUk4/QoRnE/c1544YXYu3cvLr74YjQ1NaGpqQkXX3wx9u7diwsvvLAvzpGIEki/fY8CiSBMIaRTKiO+TAIaHPR3XiNlSjlcXnjVLhsWpdKLNcOojfa2dnCEj8LTtu+xKJXS/Bv4nJBlWdu8N3NkISZW5AIAtrNTKu0FZ0rFG3Te0qkUn04fUwxAGeHrcnu1989nplTK0GdKybK/m7nW7tS+DrYf4/d0quvRXurKykrcf//9iT4XIupjXW6vFt7ITKlQ+rBzAMgN6ZRi0DmF0hcp210e+HwyDEEhuWJ0z2w0wMKV8WknLzMD9W1OtHa6waACCkfLlGLQeUorybGgusGBujYnjjZ3otbuRIZRwrTKfO3F7Y7jdsiyDEniv2W6EuN7VnNQ0Lk71vE95Tn7ylMr8X/7G/DR3noca+kEoGSQBl8fUvKITCmfrBQjRf7rgYZ27ZgvWZRKeTF9R23btg2TJk2CwWDAtm3buj12ypQpCTkxIkq8OrsS4G02GditEUZmRmCxIFKmVKyZBDTwuTw+7cUooGzqcbg8IV87osMmNzODL3TSkChK2Rl2TmHIssxMqTQhcqXq7F3YWK10SU0amodMsxHjyrNhMkho6XDjeGsXhuZnJvNUqRdEh0xWD4LOPV6f1vU8d3QRKgszcaSpE69vPgZA2bzH5/HUkWU2QpKU6692p0crSh1s6NCO2VfXji63N+TmM6WOmIpS06ZNQ01NDUpLSzFt2jRIkhTQHidIkgSvly/WiFJVjW7zHp9QQ+nH9ywmgzayI9jUJ7pYMwlo4NNnGBgNErw+Ge3O0KKUvUsUpXh3NR3lcwMfdcOjC8BnUSq1iTzN+jYnvqpXOilOHVkIALCYjBhbloNdJ+zYfqw1pCi1v64d9/x7B3789bGYqb4PpSZ/0LkY3xOZoNGv3/Q/5/MyM7BgYjn+5+Nq/G3TUQBAAUPOU4okSbCZTWh3euBwegE1Oqpa1ynl9cnYU9OGqZX5yTlJiiqmq+Pq6mqUlJRovyei9FSrK0pRqEzdHZRwG9IyE9ApxTs1A4tDvcA1mwywmY1o7nArYed5gceJi1x2KKanPBalqBsi5BxgplSq0zql2pzaSM+pugLTxIpc7Dphx47jdsyfWB7wvo++txcf72tAfpaZRakUJzqlxPWWLY5OKRFzkWM1wWQ0YMEkpSglbuwWMOQ85dgsRrUo5S86Vjc4Ao758lgri1IpLKai1IgRI8L+PlhnZ2fvz4iI+owoSpUx5DwsfbEoePMeoO+U6llR6tMDjfj2nzbgpwsm4IYzR/XsJCmliHyxbIsJNotSlLKHCTu3syiV1liUou64PfpOKXYhp7LSXKUotbumDfvrlE6KGSMKtMcnVeTi758DO4PCzls73Fi9oxYAcLS5A5TaehN03qqGnBeoYebTKwtQkmNBfZtTfTufx1ONkivlRLuuKHVALUpNHZaHrUdbsYMLDFJaQm7nOJ1OPPzww6iqqkrEhyOiPlLTKjqlLEk+k9SUGVCU6qZTytmz8b0tR1rg8cnYdKipZydIKUd8LWSZjcixKF8z7WG+PkQxIzfM1xWlPtE52cKiFIUh8qQkSRnjpdRVmqPclNt1wg4AGFOajUJd58vEoUqb6/Zj9oD3+/e249q/85Em3oRPdcHje1na+F70opQIOc9Xi08Gg4T5E8u0xwvZKZVytA186vWXx+vDkSaleHzx1AoAod/TlFpiLko5nU4sW7YMM2fOxNy5c7Fy5UoAwHPPPYeqqio89thjuPXWW/vqPIkoAUTrcRnH98LSZ0qF26xiU7fvdca4vSVYh/pkye19A4fDqfxb2swmZKtfM21doYULdkqlN3ZKUXf0IefMa0xtYnxPODVoDO+kIbmQJOV6qbHdqb39H18c1X7f0O7sccc09Y+uoE4pLeg8hus3Mb6nf75eMHGI9nvRQUWpQ0wyiJuCx1o64fbKMJsMOO9kpaC4p6YNLo8v4seg5Iq5KLV8+XL84Q9/wMiRI3Hw4EFcccUVWLJkCR599FE88sgjOHjwIH7605/25bkSUS/VsijVrYBMqXCdUhmBd2LiJbKownXSUHoSmVJZFqNWyGwPN76nvo1B5+mJRSnqjlt9ocM8qdQnOqWEU0cWBPx/tsWEkUU2AMCO40pnxVf17dh8uAVGgwSruqX3WAtH+FJZcKaUuL6L5fqtpSNwfA8AZo8q1J4HWJRKPTatU0r5dxeje1VFNgwvzEKu1QSX14e9tW1JO0fqXszPnq+99hpefPFF/P3vf8e7774Lr9cLj8eDrVu3YtGiRTAaGdxLlOq07XvMlAoraqaUJfZMgnDE1pcOJ++wDhTi3zTbYtLax9vCFKUYdJ7exL+bnUUpCsOtdUqxSyrV5WaaAjbrBndKAUrYOeAvSv3jc6VL6qxxJagqzgbAEb5UFzq+p/zX6fHB6wvdIK8nnq/zddlRGUYDrpo1HABwyoiCsO9HyZNtCSw6VterRaliGyRJwiR1LJe5Uqkr5qLU0aNHMWPGDADApEmTYLFYcOutt7JNmShNyLKMWrvSis7te+Hpx/fCFaWy4gjKDEfcwXHEsJKY0oP4N80yG7UcsrZuMqVYlEpP4sUJO6UoHP34HqU2SZK0Eb7yXCuGFWSGHDOxQs2VOt4Kr0/GP784BgC4fMYwVKrHM+w8tXW5le9J//ie/5ou2ghfs9oplR/UEXXn/PHYuvz8gGB8Sg1ZolNKvb4Wm/eqSpSux8lqUUps3KTUE/Ozp9frhdns/+Y0mUzIzs7uk5MiosRr6XBrs9SlDDoPK1rQeTxBmeE4mCk14Ih/01gzpRh0np44vkfdcXuVzgsWpdKDKErNHFkQ9ua66JTaedyOdV81oMbehbzMDHz9pFIMK8gCABxpZqdUqvJ4fVqhWNxMtGYYIP6pO6LcGNSCzoNuIhkMEvK4eS8lBQedH2z0d0oBkRcYUOqIOdxClmVcf/31sFiUH+RdXV347//+b9hstoDj/vnPfyb2DIkoIcToXqHNDIuJ47bhBGZKddcp1dNMKeX9mCk1cIicsCyLUeuuC5cpxU6p9MaiFHVHjO/px8IodY0stuGLwy2YO7o47OOiKFXd4MAL6w4CAC6ZWgGLyYjKQqVTSmz2otTTpQuzFrEMkiQhM8OIDpc3akh9uPE9Sm3+oHM1U6o+sCg1Sf2e3nXCDo/XBxNvIKScmItS1113XcD/f/vb3074yRBR3+HmvegsGf4nqe46pTrdXvh8Mgxxrv4WHVIujw9ur4931QcAsVHRZjEhp5tMKbvaPZXLolRa0helevK9TwObCDpnplR6+NmCCZg7uhiXTqsI+3hRtgVD8qw40dqF93bVAQAumzEMALROqaPslEpZ4sahJAEWXaE4y6wUpaJ1qzeHCTqn1GbTZUp1ub043qp8f4qi1MgiG7ItJrQ7Pdhf344J5blJO1cKL+ai1HPPPdeX50FEfay2VQ055+heRJlRgs5Fp5QsA10eb0BGQSz0W186XF7kZbIole5Ep5R+fC9cJxw7pdKbKCbKspIZxn9H0nOxUyqtlOZacblaZIpkYkUuTqjXTWNKszF1mDL+o3VKMVMqZXW5/HlS+vFM5ZrNFbUoJcb3OKqXPvTje4caOyDLynV8kU0pLBoMEk6uyMXG6iZsP2ZnUSoF8dmTaJBgp1R0gUHnoRcj+qJVT3Kh9O/T0xFASi3i3zHLbESORQ06D8qUcnq8WugqO6XSkzXDqN1x5wY+CsZMqYHnZDXsHAAuO2WYVtwQnVItHe6w+YGUfCLIXH/NBvhvLEYd34uQKUWpy2bx3xQUIeej1M17wiSxwIBh5ymJz55Eg0Qti1JRBWRKZYZ2QRkMknZMhzP+opS+U8rBXKkBwaEb39OCzoP+be2d/lECMeJH6Ye5UhSJm9v3BhyRQWOQgG9OH6q9PdtiQoHaQcMRvtQkilLWoKJUZgy5oG6vT3sO5/he+sjWbd/TNu8VB+ZeTx6mfE+zKJWa+OxJNEjUiPG9PBalIrEGBJ2Hv0Mm5tY73PEVlWRZDuiUcvSgqEWpR/w72iwmbeQzOFNKFDFyLCZmEaUxEXrLohQF04LOWZQaME4bU4xZVYVYcubokOumykJ1Ax/DzlOS6ITSd78Duk4pd+TrL/3Pd3Y2pw+bNr7nRXVDOwCgqjg74BjRKbXzhB1en9y/J0hR8ZYt0SBRa3cCAMrZKRVR4Phe+B+P/jtt8RWVXF4fPLonQQfH9wYEccfVphvfC96+p+VJMZ8irbFTiiJxMeh8wLFZTPjbD+aEfayyIAvbjrayUypFdUUY38vM8BcuImlRQ85zrSYYeRMpbYgbxvrxvaqSwE6pUSXZsGYY0OFSCldjSnP6/TwpMt7SIRokOL4Xnf4CJjvCmJVYOxvv+F7w8T0Z/6PUI4LOs8z+TqlOt1frnAB0m/cidN9RemBRiiJhptTgMqyAYeepLFqmVHfjeyLkvMDG0b10og8614pSRYFFKaNBwslDxAifvX9PkKKKqVPqjTfeiPkDXnLJJT0+GSLqG06PF40O5e4Px/ciG5JnxbyTylCaa4EpwouLWDIJwgneyMZOqYHBnyll1DKlxNvz1TwKOzfvDQhilEO8aCEStEwpbt8bFIap43vslEpNUcf3uul0b2HIeVoS27A7XF5tkmFkcVbIcZOH5uGLwy3YfqwVC3VZcZR8MRWlFi5cGNMHkyQJXi/v/hOlmjp1dM9sNGgBnRRKkiT86bqZ3R5j0z3xxSP4eGZKDQz6oPMMowHWDAO63D60dYUWpdgpld4idUr5fDL++tkRzB5ViNEl2eHelQY4ZkoNLlqnFDOlUlKkTintpmI3mVLN6vheHkPO00rwdENJjiXsFu2JQ5VcqS8Zdp5yYnr29Pl8Mf1iQYooNYnRvdJcS8B6VIpfTzOlgjuj4u20otSjD68XxcpsNVdKH3beyk6pASFSUerdnTX4+b++xC9f35GM06IU4PIyU2owqSzwd0rJMgOTU01vOqXEz3fewE0v1gwD9BFgwZv3BC3s/Lid37sphrd0iAaBGrUoxZDz3oslkyCc4AwpdkqlP314fZYaspmrbeDzFy4YdD4wiKKUPagotaG6CQBwsNHR7+dEfWvTwSZ8vK8+6nFuDzOlBhPRKdXu9DBjLgWJTilrSKaU6HSPninF8b30IkmStoEPAEZFKEqNKc2G0SChzenRFkBRaujR9j2Hw4GPPvoIhw8fhsvlCnjsRz/6UUJOjIgSp6ZVDTlnnlSvZfVwfC+4U4qZUulPX1jMUi9+Ra6UPkPM3qn8PjfCRkdKD/lZ4TulNh9uAaB0pPp8Mgzc2DQgeH0yrn/uMzg9Xmz6xXndFpW1TCkWpQYFa4YRJTkW1Lc5caSpUxvVptQQPeic43sDUbbFpHWpR+qUMpsMGFGYhQMNDnxV386c3RQS9xXy5s2bceGFF6KjowMOhwOFhYVoaGhAVlYWSktLWZQiSkF1bcrdAHZK9Z64qIm3qBR8Z87hZFEq3Yl/Q4vJoAXj54QpSnF8b2AIN77X5fZix3Elm8LtldHU4UJxtiUp50eJ1eRwad/HR1s6kJeVF/FYMb5nZtD5oFFZkIn6NieONndg8rDIXxvU//zje4HfjzEFnXN8L23pO6VGRihKAcCokmytKHXamOL+ODWKQdzPnrfeeisuvvhiNDc3IzMzE59++ikOHTqEGTNm4Le//W1fnCMR9ZLolGJRqvdsMVzUhBM8rhdvpxWlHvFvqA/YFL+3h8mUymVRKq2FK0rtON4Kt9efSyF+1lL6a2j3j3bURRnzcHmYKTXYDFNzpY40M+w81XRFDDqP3uneKsb3WJRKO7GM7wHA6FLlsa/q2vv8nCh2cReltmzZgttvvx0GgwFGoxFOpxOVlZV48MEH8fOf/7wvzpGIeklkSnF8r/fERU28mVDslBp4RLecyJMCoG17adcVpexdLEoNBKIo1dLhjy0Qo3uCWCpB6U9flIr278rxvcGnslBs4OtM8plQsIiZUhmxb9/Lz+T4XrrJVq/FJAkYXpQV8TixJfereuZAppK4nz0zMjJgMCjvVlpaisOHDwMA8vLycOTIkcSeHRElhLigLsvhWElv2dQnvU53fEUlUcTKUe/kMFMq/YnCoti8B/g7pcIGnbMoldZEUbHN6YFPDbj/4nBzwDEn2Ck1YNS3+YtSNSxKURD/Bj52SqWaaNv3Orq5KdjCTqm0Ja7FhhVkwmIyRjzOX5Rip1QqifvZc/r06fjss88AAGeddRaWL1+Ol19+GUuXLsWkSZMSfoJE1DuyLPvH99gp1WuiHTzeTilRwCjJtfTo/Sn1iH/DLN2Fb27YoHO1U8rKi9x0JoqKsgwtTFV0So0tVS5y2Sk1cAR2SnU/vidGOM0sSg0a/vE9dkqlGtEplWUOHt+LHnQuOmEZXp9+xE3BquLsbo8bXaKM751o7Qq4VqPkivvZ8/7778eQIUMAAP/v//0/FBQU4Ic//CHq6+vxxz/+MeEnSES909rphlPNuyhjplSviZn1uDOl1ONL1BDk7lYSU3oQ/4b6HAOxfU8ULXw+GW3qRQ87pdKbxWSENUO5bGrtdONEaydOtHbBIAHnnVwGgJlSA4m+U6ouSrHR5WWm1GAjxveONndAluUoR1N/ipQpJbYnd0YY33N5fNq1Wj6fr9OOuP6q6mZ0D1AKjsXZStGxOsIIn8vjw6cHGvHh7jq8t7MWq7bX4K0vT2iLTSjx4t6+N3PmTO33paWlWLVqVUJPiIgSS4wd5GdlhMzXU/wye7l9r1QtDLJTKv2Ji9fA8T11xEstSrV1eSBer+Rmxv2USykmLzMDXW4nWjvdWsDxhPJcjFLHAaKNeVH6aGj3Z4fVtkUZ3xNB59y+N2gMycuEJAFdbh8a2l0oYTxCyhCdUCGZUlqnVPjrNzFqL0nMgExHC6cPxb7adlwxszLqsaNKstHQ3oSv6tvDbs98+N09+OPaAyFvNxokrPvZubzJ3wfifvY899xz0dLSEvJ2u92Oc889NxHnREQJJMYOuHkvMUQBoqfb99gpNXCIXIrAoPPATCkRcm7NMHSbcUDpQYTftna68cUhJU/qlBH52s9XdkoNHPrxvZrWaON7zJQabMwmA4ao3/fcwJdaOiNu31P+v8vt03IB9cToXq41A0YDux7TzSnDC/CXJV/DpKGhRaZg0XKlPtpbDwAYVWLDtMp8zBhRAIvJAK9PxvEWjuz2hbhv265ZswYulyvk7V1dXfj4448TclJElDi16oskVvUTI6uXnVLibio7pdJf2KDzoEwphpwPLOLfsbXTjc1HWgAoF8Llecr3NTulBg79+F6jwwm31xex6MRMqcFpWGEWjrd24WhzJ04ZXpDs0yFVV4Sgc/1zdafbGzB6DwAtnQw5HyxErlS4olRblxt7atsAAH9d8jWU5iivn85/9CPsrW2POP5JvRNzUWrbtm3a73fu3Imamhrt/71eL1atWoWhQ4cm9uyIqNfEiyR2SiVGVgxBmeGIUa9StSjl8vrg8vhg5rhH2tLG93QXtrlBmVKtDDkfUMRIR31bF748pmRLTB9eoBWb27o8cDg9IS92KP3oO6VkWfn/IXmZYY8VmVL8eT64DCvIxMZq4EgTO6VSSaROKWuGAZKkfD93uMIUpbTNeww5H+hGq8tJvqoLzZTaeqQVsqx8f4uCFOD/eupiUapPxHzVNG3aNEiSBEmSwo7pZWZm4sknn0zoyRFR74miVFku8w4SQQRldri8kGUZkhRbi7cY9SrW5U50urx8EZPGtKBz3d1YkSklOqXs7JQaUMS/4/oDjXB5fCi0mTGyKAuSJCHbYkK704Mae5c2GkDpyeuT0eRQpgIsJgOcHh9q7ZGLUhzfG5wq1Q18R7mBL6WIolRwppQkScjMMKLD5Q0bwdAsNu/x+XrAG6M+R1c3OOD1yQHjmpsPK6P504O6H8XXU7w3pSk2MRelqqurIcsyRo0ahY0bN6KkpER7zGw2o7S0FEYj8zKIUo02vpfHTqlEEPlBXp8Ml9cXc05Qh26ji9logMvrg8PlQR7bxNOWGMHM0t1t1WdKybLM8b0BRvw7frK/EQAwvTJfK0yX5VrQXu9BbSuLUumu0eGET1YCj8eV5eDLY61KXliE/Fw3t+8NSsMK/Bv4KDX4fDK63Mr3Y/D43v9v777j2yrP/vF/jiRLtuS9HduxM0mcvQgJMxASRmlpgdICAQJlJvCEtKyWhtUvUH4FmvZh9GGFFmihpWWF0ZASSkgge+/pOPHeW+v8/pDuI8mWLMnWsHQ+79crL4IsOye5LZ+j61zX5wYc3e4dZhs6LL0jGJo7OL6nFkPSk5QbDhWNHSjJMikf2+IsSk0dmu7xOeL7KdhMWQpMwEWpkpISAIDdbg/bwRBR6Ildgzi+FxpGtztvHd22gItSIoPKZNDCaNDC3GFXMokoNrkypdw6pZxFKYtNRrfVrgSdcyef+CCKUqITborbRWtBWhIO17ajkmHnMa+u1dExkWXSY0h6InaebEZNHzvwWazMlFKj4kxHpxTH9waPbqvrfWrP8T3AVVjw1u3S1Ol43WdwfC/uaTUShmWbsK+qFYdr25SilCzLHnmR7ox6ju+FU7/OnocPH8Zdd92FuXPnYu7cubj77rtx+PDhUB8bAKC0tFQZG3T/tWjRIgDAeeed1+tjt99+u8fXKC8vx6WXXgqj0Yjc3Fzce++9sFo93wyuWbMGU6dOhcFgwMiRI7FixYpex/L888+jtLQUiYmJmDlzJjZs2BCWvzNRKDU4t7XOSub4XijotBpl5K4jiBNTh+iq0euUsM123m2Jaa5Co1vQuVuQamuXlZ1ScSYtyfNenvtFq9hMgmHnsU/kSWUnG5R1re5jXZVOKY5jq4ooSp1s6vS6mxtFnnsItbeilDHB9w7KjR08X6uJt1ypI3XtaOqwwKDTYGxBqsfzxfgeg87DI+iz5+eff46ysjJs2LABEydOxMSJE/Hdd99h3LhxWLVqVcgPcOPGjaisrFR+iT/jqquuUp5zyy23eDzn6aefVj5ms9lw6aWXwmw2Y926dXjjjTewYsUKLFu2THnO0aNHcemll2LOnDnYtm0blixZgp/97Gf4/PPPlee88847WLp0KR5++GFs2bIFkyZNwvz581FTUxPyvzNRKCm7ifAkGzJK2HmAnU5mq10JwjXpdTAZgvt8Gpw6lKBz14WvRuPIFgIc3TRK0Dlff3HBPQBXIwETi9OV/xc78PVVvKDYIHbe8yxKdft8vpmZUqqUn5oInUaCxSYrXekUXaJgYNBpoNH0HqcVnVLeOtXF+F4Gx/dUQYzZu+/At+W4Y3RvQmFar8xXUeTsNHNqLByC3h7mgQcewD333IOnnnqq1+P3338/LrzwwpAdHACP7CoAeOqppzBixAice+65ymNGoxH5+fleP//f//439uzZgy+++AJ5eXmYPHkyHn/8cdx///145JFHoNfr8dJLL2HYsGF45plnAABjx47F2rVr8dxzz2H+/PkAgGeffRa33HILFi5cCAB46aWXsHLlSrz22mt44IEHQvp3JgqVbqtNeePMduTQMel1aOqwBBx2KAKxAUcmlZGdUnFBXNQa9Z6n0pRER+B1a5cFLZ2O54hd+Si2ud9BH52XohQgASDfGYLN8b3YJzqlclKC7JRippSqaDUShqQnobyhAxWNnT6D8ClyOp3XW97ypADXTUVv3S5ifI+776nDiBzHyJ57UUoZ3SvJ6PX8JHZKhVXQt3T27t2Lm2++udfjN910E/bs2ROSg/LFbDbjzTffxE033eSx49Vbb72F7OxsjB8/Hg8++CA6Olyz3evXr8eECROQl5enPDZ//ny0tLRg9+7dynPmzp3r8WfNnz8f69evV/7czZs3ezxHo9Fg7ty5ynO86e7uRktLi8cvokgSd30kyRXATAOn3GkzB9bpJIpPep0GCVqN0lnDTKnYJoLOTT2KUkqnFMf34o57x1vPi9b8AIoXFBtc43t6ZefavotSzJRSqwLnJjIsRg8OoovF2+ge4Nbp7m18r915vmanlCq4OqVc43uiU6pnyDngHnTOa/dwCPpdak5ODrZt24ZRo0Z5PL5t2zbk5uaG7MC8ef/999HU1IQbb7xReeyaa65BSUkJhgwZgh07duD+++/H/v378c9//hMAUFVV5VGQAqD8f1VVVZ/PaWlpQWdnJxobG2Gz2bw+Z9++fT6P98knn8Sjjz7a778v0UA1ub0h9tbGTP1jCnIHjo4egdiuTCme2GKZe3i9O1EAbuni+F68cS8uTnEb3QNcRakqvjmNeWJ8z7NTyvf4nsXK8T21Skl0/EzgOP7gILpYfBWlkpzXX96KUuJ8zckCdRju7JRqaDejod0MvU6DA9WtAHqHnAPMlAq3gItSjz32GH7xi1/glltuwa233oojR45g9uzZAIBvvvkGv/3tb7F06dKwHSgAvPrqq7j44osxZMgQ5bFbb71V+f2ECRNQUFCACy64AIcPH8aIESPCejz+PPjggx7/Ji0tLSgu9rGfMFEYNHXwBBsOrk6pwE5M4nlizEsEY4vwc4o9siy7ZUr16JRKdO3QJnbfY6dUfEjrq1PK2TFR29YNi83OAkUMq3NuEOKeKdXcaUGXxaa8MXFnZtC5aimdzxzHHxREwcDb6xRwv6nYu4jY2OEc3+P5WhWMeh0K05NwsqkTR2rb0G21wy4DhelJyPWyY7lr9JOZUuEQcFHq0Ucfxe23345f//rXSElJwTPPPIMHH3wQADBkyBA88sgjuPvuu8N2oMePH8cXX3yhdED5MnPmTADAoUOHMGLECOTn5/faJa+6uhoAlByq/Px85TH356SmpiIpKQlarRZardbrc3xlWQGAwWCAwcAdzyh6xAmWb4hDS3Q6BdrCq3RKOS9ejUGO/9Hg0221w+bcbcmo994p5ciUYlEqnmQn6zFreBZ0WgnDs00eH8sy6ZGgdYQe17Z2Y0g682Vilfvue6mJOiQmaNBlsaO6pUvZOlyQZdkt6JwdyWqjZESyU2pQEB3svjKlknyM77lnsKZzfE81hueYcLKpE4dr21Dj7Iad4mV0D3APOmcBOhwCvqUjy46Lb0mScM8996CiogLNzc1obm5GRUUF/ud//scj5ynUXn/9deTm5uLSSy/t83nbtm0DABQUFAAAZs2ahZ07d3rskrdq1SqkpqairKxMec7q1as9vs6qVaswa9YsAIBer8e0adM8nmO327F69WrlOUSDEXcSCQ9xUdMWYKeTr04pXsTGLve16xV0bhBFKasr6JxFqbggSRL+eusZ+MvNM3td82g0EnJTnCN8zJWKae7je5Ik9TnCZ7PLcF4iM1NKhUy8yTSodPkZ3/OVKSVG9yQJSE3k+Vot3HOltpSLPKneo3uA69q/i+N7YRHU2bPnBVhKSgpSUlJCekDe2O12vP7667jhhhug07ku/g8fPozHH38cmzdvxrFjx/Dhhx/i+uuvxznnnIOJEycCAObNm4eysjIsWLAA27dvx+eff46HHnoIixYtUrqYbr/9dhw5cgT33Xcf9u3bhxdeeAHvvvsu7rnnHuXPWrp0KV5++WW88cYb2Lt3L+644w60t7cru/ERDUbcSSQ8skyOf09xN92fjh7ZQybuvhfzxAVtUoIW2h55baJTqq6tW+mgYKeUOogRPuZKxS6rzY6GDtf4HgDkpfgOsRch5wAzpdTIyHH8QcXf+J5R6XT3XC8Rd8EMVnUZkesoSh2qaetz5z2AmVLhFlTQ+ejRo/12QzU0NAzogLz54osvUF5ejptuusnjcb1ejy+++AK///3v0d7ejuLiYlxxxRV46KGHlOdotVp8/PHHuOOOOzBr1iyYTCbccMMNeOyxx5TnDBs2DCtXrsQ999yD5cuXo6ioCK+88grmz5+vPOfqq69GbW0tli1bhqqqKkyePBmfffZZr/BzosGksYOjQ+FQmOEYyznZ2BnQ88Uuba5OKeedOnZKxSxfIecAkGxwvN7E94dWIyl30ym+Mew89jV0mCHLgEYCMp03IPLSfBelROEZYFFKjZIN7JQaTDqVznQf43vOwkKHxXtRinlS6jLCGXa+/nA9Oi02GHQalBWken2u8r3DG8phEVRR6tFHH0VaWlq4jsWnefPmKeOD7oqLi/HVV1/5/fySkhJ88sknfT7nvPPOw9atW/t8zuLFi7F48WK/fx7RYMGg8/AoTDcCAE42BVqU8tx9z8hOqZjXs9DoLtnZKSW+P1ITdWEdb6fBwzXmxaJUrBKje5kmg9IFmZfi6Jiqae3dHWvxKErxda424hzATqnBwd/ue0YfQedNHZwsUKORzvE98X0zoTANeh8bVnB8L7yCKkr95Cc/QW5ubriOhYhCzHWS5Z2fUAq6U8p58SPa/JXdetgpFbPESKa3u7FifE98f7BTUT0KnB01leyUilmunfdcb07z+uiAs7iFnLP4rD4mdkoNKkqmlJ+g8/ZuH51SvF5WlZwUA1IMOrQ6r8d9hZwDDDoPt4D7jHmiJYo9PMmGx5B0ZzdEaxfMVv9bw4pW32RRlGKnVMxTut8Mve/tKEHn3Qw5Vxsx5sWg89hV5xZyLuSmOn7vNVPK6ujk5+ieOimdUjyfDwpiHfxlSvUa3xMZrDxfq4okSRjuzJUCfIecA66CJjOlwiPo3feIKHY0dYqiFNuRQynbZIBep4EsB5YdIwoYoqvGyEypmCfusnotSvXYuYedUuqRz/G9mFfr3MAiJ9lVlBLr6m18z6x0SrEopUbKTSaezweF/o/v8XpZrUSuFOA75Bxw65RiUSosAj6D2u12ju4RxRhlfI9vikNKo5FQmO4Y4ato6vD7fHHnTly8mnhnNeYpOyp6GREQmVICO6XUw318jzfzYpPolMp265Ryzwrrua4WFqVUTbnJxPP5oNAldsbV950L1HO9GjlZoFojnLlShelJys96b0RRymy1w2bn+T3UeAYlimMMOg8fUZQKJFdK6ZRyXryKDIo23lkdVGRZxoHq1oBCLNvNvoPOU3oWpRJ5kasWYszLbLUrP38pttQ5O6XcM6XEunaYbcpYriCKUnqGnKsSO6UGF3+dUmK9euYCNXN8T7XOHZ0DrUbCZZOG9Pk895wydkuFXlBB50QUO7osNuWHZhrv/IScKEqdavI/ptOrU8ogOqV4ETsYVDV34b0tFfjH5gocrWvH+MJUvHPrLK+jeYIrU8pL0HmPz+P4nnoYdFpkmvRoaDejqqULGSbeEIg1yvieW6eUUa9DSqIOrV1W1LR0eRSalU4pHzs2UXwT42AMOh8cxHWv70wpH51S7c6buPyZrTrjC9Ow+9H50PvpdjXoNJAkQJYdRc3kPq4RKXg8gxLFqWZnnpRG6v0mmQZO2YEvgPG99h47tYnuGotNDigoncLjm0N1uPH1DZj91Gr8f5/vx9G6dgDArpMt+J+/be2zPTuYTKnUJL7+1ETkDzHsPDbVtYrd9wwej7vywjxzpczOoHN/b2goPolzQJeFIz2DQac5sN33Oi022N3WS2Sw8iaSOiUmaKHR9N3tKkmS0oEXSEc9BYdnUKI45R7a6O8HLQVPGd9r8j++19GjgGF0u1hit1R0dFlsWLhiI9bsr4VdBmaUZuDpKyfizZtnQq/T4Iu9NXjik70+P7+vTKnEBA20bq85XuSqS77YgS+ATRBo8HGN73kWpfJ8hNgzU0rd3LtleT6PPlEsMPooSrk/3mV1FRaaRQYr4y6oDww7Dx/eviWKU40MOQ8rpVMqkEypHp1SCVoN9DoNzFY72s02pBvDd5zkXVVzF8xWOxITNPjk7rMxPMe1JfAzV03CXX/dilfXHkVptgkLzijp9fl9ZUpJkoSURJ1SGGZRSl1E8YJFqdhjtdnR4Dx3uo/vAa5cqZ4dcBzfUze9VgOdRoLVLqPDbOvVKUuR5W98L1HnXkS0KefwRiWDletHvonvq56ZZDRwPIMSxakm7iQSVu6ZUnY/Lfuu/CFXAUN02DAcNTpEt0NBWpJHQQoALps0BL+YNxoA8MiHu/HVgdpen99XphQAj6wBBp2ri9iBr2dHDQ1+De1myLJj7L3nBiFifK+mx/geg87VTZIkV64Uz+dR5y/oXKNxjWCJwoJ7Bmt6EjulyDf38U8KLXZKEcUpZScRtiKHRX5aIjQSYLbZUdfWjdw+tpEVXTUeRSmDDo0dFl7ERkm1c9v33B7dEMKiOSNxtK4D722pwKK3tuCDxWcq2wYD3guN7hx3yx1ddOyUUhdRvKhkp1TMESHnmSaDxwgu4Ht8z2xz3JTg+J56mQw6tHRZe4VnU+T5y5QCHF3rnRYbfvjCN0hLSlC6pTRS791zidz1LGhS6PAMShSnRCsyx/fCI0GrUd58VvSRK2Wx2ZUwc/f8IbETHy9io6PG+cYyz0cxUZIkPPmjCZhRmoG2bive/Pa4x8d77qjYk/vmAql8DapKHjulYlZta++d94Q85/her0wpKzOl1I6dUoOHUpTy0SkFANNKMgAAdW1mHK5tx86TzQCAoZlGZrBSn5gpFT4sBxPFKfegcwqPwowknGruwsnGTkwdmuH1Oe5FJ/f8IaOBF7HRVK0Upbx3SgGAXqfBtTNLsPFYI7adaPL4WM+csJ7c77ayU0pdxPged9+LPXVtYue93ufNXB+77zHonETHLG8yRZcsy37H9wDgpeum4URjB1q7rM5fFrR1W5ViFZEvyvgeX+shx6IUUZxyje/xDXG4FKYnYSMa+9yBT+zGk6CVoHcLwhUdNu3crScqxBtLX51SwuTidADA7lMtMFvtyhr6G99LTnTPlOKpVk3E91RThwVdFpvPwF0afMTOe946pZRMqVZHjqDoqFAypXTssFArpVOK5/OoMtvsEBGfiX2M72k0EkqyTBE6Koon7JQKH97WIYpTje3cSSTcAtmBr73b+y5tJqVTiie2aBCdUn1lgQFASZYRGcYEmK127K1sUR7v6O6dE+ZOdEqZ9Fro2EGhKqmJOuXClTvwxRZlfC+5d1FKFKosNlnZ3RYAujm+p3rKTSZ2PkdVl9mu/L6vTimi/hKdUl0sSoUcz6BEcarJ2SmVxvG9sBni3IEvkE4pU4+7dq5MKV7ERkON881nno+gc0GSJExydkuJET5ZlpU74j3XVUg2OIrBHN1TH0mSOMIXIScaOvDq2qMh+zkqOqWyvRSlErQaZazPfYTPwqBz1TMaRFGKb1SjSXSv6DQSX48UFokMOg8bvmKJ4lQTg87DrjA9iE6pHh01RnZKRY0sy26ZUn13SgGuEb6t5Y0AHJ0RYkSg57oKolOKIefqJL6v2CkVXs99cQCPf7wHH247FZKv11fQOQDkpvQOsWemFCU7z+e8yRRdSp5UH6N7RAMhOvA62CkVcjyDEsUpUZTKYKdU2BRluDqlZFn2+hx/nVJs94+8tm7X1t25fQSdC5N7dEq5r5nRx4gAi1Lqlu/slDrV7LtgTQMnikgVfdwYCEZfnVKAa129FaX0WmZKqZVRyYjkG9VoCmTnPaKBSNI7SifslAo9FqWIYtjh2jafd+aaGHQedmJ8r63bipZO7+vQ1i12aeuZKcWL2GgRozcpibpe6+KNKEodq+9AY7vZLSdM63P76LKCVADA+CFpIThiijVj8lMAAFuON0b5SOJbS6fj5osoTg2UsvteivebOWK3zuqWbsiyjH9srsCKdccAAEkB/Cyh+CRuOnXwJlNUsVOKwk1cMzJTKvR4BiWKUXtOteCSP3yNC8vy8PL10z0+1mWxocviuHubxqJU2Bj1OmSa9GhoN+NkU6fXf2vRkdMzEFvs1sN2/8irCWJ0DwDSjXoMyzbhaF07tlU0Kbtw9VXQml6aiQ2/ugDZJv+dWBR/zhyZDQD49kgDLDY7R7vCpKXL8fNTdDgNhMVmR0O7oyjlLegccI3v7alsxi1/3oQv9tYAACYVp+P6WSUDPgaKTUbeZBoU2ClF4ZbI3ffChldJRDFqR0UTANdIkTsxuqfVSEjxkXlDoVHoJ+xcjHqJ3fYEE4NRo6ZKKUoFXjBSRvjKm1wjmYa+L3xzUxJ9dlJRfCsrSEWGMQFt3VblZzWFnuiUCkVRShSktBrJ59i7KGR/vrsaX+ytQYJWwr3zT8N7t89SOmdJfUy8yTQoiEJBIotSFCZJDDoPGxaliGKUKILUtnb3+uGojO4lJUCS+KY4nFxh5x1ePy46pXp21YhOKWZKRZ4Y38tLCaxTCvDMlXKN77HgS95pNBJmj3B0S31zqD7KRxOfZFlGS1foxvfE18g06X0Wk8WuigAwbkgqPrrrLCyaMxI6dsKpmpIpxZtMUSWKguyUonBRMqXYKRVyPIsSxSj3Hd/KGzwLIo3tzp33OLoXdoUZfjqlfASdJzs7pXhnNfJESHFugON7gKsotb2iSckJ67mmRO7ECN/aQ3VRPpL41G21w2JzbDBR12b2udlEoGqd3Va+RvcAYNaILPxg8hDcO/80vL/oTIzJTx3Qn0nxwcTd9waFo3XtAFzXZUShxk6p8OFtXqIYVeFWBDle347TnMG6ANCshJxz571w8ze+1yG6anplSjGDIlpqWh1FqfwgxvfGFqRCr9OgqcOCPadaAPTOCSNyd+bILADA1vJGdJit7KwLMTG6BwBmmx0tndYBZSjWOTulslN8/1xITNBi+U+m9PvPoPgkXttt7JSKqn2VrQBcG00QhRozpcKHnVJEMaqvTimRKZXO7ejDTumU8rElua9OKeXOKsf3Ik4Z3wuiU0qv02DcEEdXxDeHHZ0v/jKlSN2GZhpRlJEEi03GhqMN0T6cuCNG94TaAeZKKTvvJfNmDgWHnVKDw74qxw2jsQXsYKTwEAVoFqVCj0UpohhktdmVsGbAy/ieKEqxUyrsBtop1caiVMT1Z3wPACYVpQMAdlQ0A2CmFPVNkiScqeRKcYQv1Jo7PX92DjTsXGRK5fTRKUXkDTOloq/DbMVx57UwO6UoXMT4XhenHEKORSmiGFTV0gWb3ZWfcby+R6eUMr7HTqlwK3J2StW1mdHl5c6J/0wp24CzUChwsiyjRumUCu7N55Sh6QCgvPaYKUX+nDmKYefh0qtTaoBh53UBZEoRecOMyOg7UN0GWQaykw3I4muYwoRB5+HDohRRDKroMSrWs1Oq2dkplcGiVNilJSUoxQlv3VI+d99ztvtb7TLMNnuYj5KEpg6L8u8dbEeECDsXmClF/swe4ciV2lPZgvoBdvKQJ/dMKWDgnVJH6toABN9BSSR20+0w22C38yZTNOyrFKN77JKi8GGmVPiwKEUUg0R+0bBsEwCgorHDo3OqscPRKZXG8b2wkySpz1ypdrFTW4/8IaPblsUdbPmPmGpnyHmmSQ+DLrhOp6GZRmSaXK8pFqXIn+xkgzJKsu4wu6VCqbXLsytlIJ1SJxo6sOtkCzSSq5BIFCj3cwHfrEbHviqGnFP4KeN7FjsL0CHGohRRDBIdOdNKMpCglWCxyahsdhVEGHQeWX3lSinjez0KGDqtBgad40cwc6UiR4Sc5/YjN0aSJEwqSlP+38jxPQrAWSMdI3zrDjNXKpR6ju8NpFPqs11VAICZw7KQzdEfCpJBp4FGcvy+nSN8USFCzsfkM+ScwifJ7bqvy8oCdCixKEUUgyoaHeN6jt2djACAcrdcqSZlfI+dUpEwJN13p5TogjJ5CcV2z5WiyBAh58HsvOducnGG8ntva0rU05nOotRahp2HVIsz6Fz8HBW75/XHJ7sqAQCXTMgf+IGR6kiSpJwP2PkcebIsK51Sp7FTisIo0a3DvpPX7iHFohRRDBIdOYXpSRia6SxKueVKMeg8spTxvT46pbx11YhcKd5ZjZwapSjVv26Iyc6wc4DjexSY04dlQqeRcKKh0+PmAQ2M6JQanuMYY+/v+N6ppk5sLW+CJAHzx7EoRf3D83n0VLd0o6nDAq1Gwsjc5GgfDsUxjUZCYgLDzsOBRSmiGCQ6cgozklCS5ShKHW/o3SmVxvG9iCj00Slls8vosjhCtb0VMHhnNfKqlZ33+tkpVZSu/N5o4Pge+Wcy6JSdG7/hCF/IiKDz4c5sxf6O74nRvRklmQw5p34T5/N2ns8jTozuDc82KUHUROHiypXiaz2UWJQiijF2u4xTTY5uj6IMt04p5x34TrMN3VZHISTDxPG9SCjy0Snlvj20104p52PMlIocMb7X3zefacYEjC1wZFbk8w0sBYgjfKHX4gw6H5Hj6Iyoa+uGLAcfPPupc3TvYo7u0QCwUyp6OLpHkSSKUp1m7pwdSixKEcWY2rZumG12aDUS8lMTe43vidE9nUaCiUHMEVGY7liDqpYuWG2uk5TIitJqJCXU3J1JyZTiRWykVDtHfPL6EXQuvHjtVLx6w3SlOEXkjyhKrT9czx17QqTVOb43zDm+Z7HJaO609PUpvVS3dGHT8UYAwEXjWZSi/jOy8zlq9lU6OqV4TqZISHS+t+K1e2ixKEUUYyqcI2L5qYnQaTUoyXJckB+vbwfgtvOeUQ9JkqJzkCqTm2JAglaCzS4rRQ8AaO925Ul5Wwul3Z9hiRFT3TywoHMAKM024YKxeaE6JFKBycXpMOm1aGg340BNa7QPJy6I8b0skwGpiSLsPLgRvs93V0GWgalD01GQlhTyYyT1EIH77JSKPNEpNYadUhQBSqcUx/dCikUpohgjdt4T4dqiU6qly4qmDjMaOxhyHmkajaQUB8UdO8DVKeVrlzbR7t/B8b2IsNll1LYNLFOKqD8StBqUOrOPKp2FURoYMb6XmqRDjrPzsSbIsPNPdopd9wpCe3CkOmIcn+fzyDJb7Thc2wYAGMNOKYoAZkqFB4tSRDFG5BYVOcO1k/Ra5YK8vKEDzaJTiiHnETXVGWS82TkKAriyonwFYrNTKrLq27ths8vQSEB2MvPWKLIyjI7vuSbnjQMaGNEplZqYgOxkxzmwri3wf9va1m5sONoAgKN7NHA8n0fHkbo2WGwyUhJ1GJLGm00Ufkl6dkqFA4tSFJdkWcbSd7fhsY/2RPtQQs595z2hxNktdby+A41u43sUOdNKMgB4FqXEvHmyl533ALdgVN5ZjYga58572ckG6LQ8/VFkie7Vhvbgco+oty6La0OP1KQEZDtvzNQF0Sn17z1VsMvApKI0FGUYw3KcpB5K5zPH9yJqX6VrdI+RFRQJDDoPD16VU1w62dSJf245ide+ORp3b/hFp1RhuqsoNTTLFXYugs45vhdZoii1vaIJFmfYudga2tvOewCQrGfQeSSJnfc4ukfRkGlip1SotDpH9yQJSDHokOPslKoNIlPq051VAICLObpHIaB0SjHoPKJceVIc3aPISGLQeViwKEVxqdbtbmllc2cUjyT0RNC5+51dZQe+etf4XgaLUhE1PDsZaUkJ6LLYsdeZKyVOWL4zpXgRG0nVLSJPqv877xH1l+hebWhnUWqgxM57yXodNBpJGWEPtFOqod2M9UfqAQAXc3SPQoCdUtGxr8pxvXUaQ84pQpgpFR4sSlFcci9KnWyKn1BZWZa9j+85O6WON7S7BZ1zfC+SNBqpV66U0inlY3zPxLstESU6pXLZKUVRkOm8USB2SKX+c4WcO/5NRUZcoJ1Sq/dWw2aXMW5IqrJJBdFAsFMqOsT43tgCFqUoMhK5+15YsChFccn9wvRUU/x0SjV2WJQfggVugY5DMx0X1eX1HcobnjQGnUdcz1wpV6eU9/E9Uaxqi7MR08GqptU5vpfCohRFXoZzfK+xj/G91i4LfvvZPuw51eLzOeQKOU9JdPwMVTqlAixKHa5tBwDMKM0Mw9GRGokx/XbeZIqYpg4zqpw3m0bnsShFkaEEnTNTKqRYlKK4JAKNgfgqSlU0dgAAclMMSqUecI3vVbZ0KVtiZ7BTKuKmOotSW0SnlFlkSnnvlEpW2v15tyUSOL5H0RTI+N6nO6vw4prD+P8+3xepw4pJLc7xPVenlBjfC2w0UnRNFnC3LgoRk/MmUwc7pSJG5EkVZyYhJZE3YikyjOyUCgsWpSguuXdKnYyjopS30T3AMbpg1Gshy1DyjBh0HnmTitKh1Ug41dyFU02d6HB2QJkMPjqllHZ/3lmNBAadUzRlGkXQue/xPXHX/1BtW0SOKVa1dDrH95xvRN07pex22e/nVzXzZwGFlihKsVMqcvY5r3dPy2PIOUWO6JRiplRosShFcck9UyqeOqW87bwHAJIkKd1SYptsFqUiz2TQKbkGW8ob/XZKmZTd93hiG4gD1a0B7WgmOqVy2SlFUSB+Jjd0mCHL3gsn9c4bKicbO9Ft5c8FX5ROKef4XpbJ8Zq22mU0d/rP7KpuZVGKQsuVEcnXbaSITinmSVEkiUkV5sGGFotSFJc8i1LxE3Tubec9QRSlBAadR8fUoa5cqXZ/nVLOx5kp1X9Hatsw77n/4tY/b+7zeRabHfXtYnyPb0Qp8kSmlNlq99n2X+cc7bPLwImGjogdW6xp7TG+p9dplBzFQMLOq52dUvkc36MQYedz5Imi1Jh8dkpR5CQp43vMlAolFqUoLrkXpSqbOwNq548FFT7G9wDXDnxCOoPOo0KEnW8pbwogU8rVKeWrc4L6dqjGMea0ubyxz1bqurZuyDKg00jKGBVRJJn0Wui1jsuuRh8jfPVuBZUjzjBu6s01vuf62aqM8LX2XZRq67YqP5uZL0ehYmJGZETZ7TL2O4tSp+WzU4oiRxnf42s9pFiUorgjy7JHUcpikwPeJnqwE+N7Rem9i1JD3ba11ms1yk4wFFmiU2r3yWY0ODtzkn1mSjket9llZeySgiNCo212GXsqfe9YpozupRig0UgROTYid5IkKSN8jT7CzuvbXI8frVNvUUqWZTzy4W68uvao14/3DDoHHNmKgP9OKZEnlZKo83nDgChYSqeU2cqbTBFwuLYNnRYbEhM0KM3qPT1AFC5JDDoPCxalKO60dFphtjne4IuL1HgJOxe773nrlHIf30szJkCS+MY7GooykpCbYoDVLivbuvt64+P+OO+u9k+925v7nRXNPp8nQs5zObpHUZTpHOFr9JGB5v79rOaiVHlDB1asO4anPt3rtdO5pVNkSrkXpRxdT7V+OqW44QGFg+iUkmWgi2M9YbfxmGOX4ynFGdBp+XaWIkd0SrEoFVp8FVPcqW1zXHCmJuowLNvRPRQPYectXRa0djlGFnoGnQNAiVtRiqN70SNJkjLCJ95L+cqU0mokJCY4fgwzh6J/GtyLUid9F6VqlDeiHNeh6FE6pbyM71ltdo9ilZqLUuLfx2KTUdfeu8jU4jwXpiZ5Gd9r63vTA1GUymdRikIoUaeFuBfInMjw23isAQAwY1hmlI+E1EbplArwZnJlcyf+sbkibqJkwoVFKYo7Na1ih61EDHEWb+KhKHXSmSeVYUxQth52V5iRBDGVlMHMnKgSRSmhrxGRZG4jPSANAXZKVbE7ggYB8bPZ2/heY4cF7lM/ai5Kue+gV93spSjl/HhKPzqlqpSuSRaoKXQ0GglG7soVMUpRqjTDzzOJQivYTqlfv78bv/j7dry3pSKchxXzWJSiuCMuSHOSDW5Fqdjfge9kHyHnAJCg1Sh/3zQjO6WiaWqPopSpj6KUa8cetgH3h/u408GaVp9vBkSmFItSFE0ZfYzvid0hxV3YmtZu1XZcuBelKpt731QSXcPu43s5yaJTqu+iVI3zZwE7pSjUjAaezyOhsrkTFY2d0GokTBnKohRFVjCdUna7jO+O1AMA1jv/S94N6qLUI488AkmSPH6NGTNG+XhXVxcWLVqErKwsJCcn44orrkB1dbXH1ygvL8ell14Ko9GI3Nxc3HvvvbBaPS/y1qxZg6lTp8JgMGDkyJFYsWJFr2N5/vnnUVpaisTERMycORMbNmwIy9+ZBk4pSqW4ilLxkCkl8qSK0n0HOood+DJYlIqqcUNSode5frwafYzvAa6wc95Z7Z8Gt9Eeuwzs9RF2zhwZGgwy+gg6FyHnxZlJSh7iMZV2S7W4FaVEZ5PHx5Wgc2/je4EFneen8WcBhZZrR12ez8NJ5EmVFaQq/+ZEkZLoFnTub1ODgzVtaHXeXNpyvDHsxxbLBnVRCgDGjRuHyspK5dfatWuVj91zzz346KOP8Pe//x1fffUVTp06hR/96EfKx202Gy699FKYzWasW7cOb7zxBlasWIFly5Ypzzl69CguvfRSzJkzB9u2bcOSJUvws5/9DJ9//rnynHfeeQdLly7Fww8/jC1btmDSpEmYP38+ampqIvOPQEFxL0oVpjsuOuNifK+p704pAChx7sAn7sZTdBh0WkwsTFP+v69OKZNyZ5UXsf3R4HwjL96Q7vAywme12bH9RBMAYFg2d+mh6FHG97xkSoliSpbJoOQhHlFpUcq9U0oUkQSLza5sDNGfoHNlfC+FRSkKLXGTqZ0bl4TVJufo3nSO7lEUJLntbu5v5+wt5a5C1LH6Dr83TdRs0BeldDod8vPzlV/Z2dkAgObmZrz66qt49tlncf7552PatGl4/fXXsW7dOnz77bcAgH//+9/Ys2cP3nzzTUyePBkXX3wxHn/8cTz//PMwmx1vZF566SUMGzYMzzzzDMaOHYvFixfjyiuvxHPPPaccw7PPPotbbrkFCxcuRFlZGV566SUYjUa89tprkf8HIb+8dUrFVVHKS8i5cP2sElw6oQBXTSuO1GGRDyJXSpKghJl7I4pS7m/CKDCyLCvje+eOzgHgPex8S3kTWrqsSDcmYFJReiQPkciDqyjlu1MqK1mPUucNhqO16ixKtfRRlBKjewCQkti7U6q+3dxnoKzY9ICdUhRq4gZUB28yhdWGo46i1OmlDDmnyBPje4D/Eb7NPbqj2C3l26AvSh08eBBDhgzB8OHDce2116K8vBwAsHnzZlgsFsydO1d57pgxYzB06FCsX78eALB+/XpMmDABeXl5ynPmz5+PlpYW7N69W3mO+9cQzxFfw2w2Y/PmzR7P0Wg0mDt3rvIcGlyUoHO3olRjhyXm26krnJlSRX10So3JT8Xz107FyNzkSB0W+SBypUx6HSSxJY8XZQWpAIA1+2sjclzxpMNsU+5SKUUpL51S/9lXozyHW0dTNGWYxO57vYtS4g5qdrIBw3IcRalj9SotSnW5Z0p5FqVEwcqk13q8nrOcI482u+z13xdw5HuIawTuxEmhJkb12SkVPs2dFuyvbgUATGdRiqJAq5GUiA5/YeeiCCUaCjaXsyjly6C+Op85cyZWrFiBzz77DC+++CKOHj2Ks88+G62traiqqoJer0d6errH5+Tl5aGqqgoAUFVV5VGQEh8XH+vrOS0tLejs7ERdXR1sNpvX54iv4Ut3dzdaWlo8flH4uXdKpSYmIMXZiRLrYef+gs5pcDljeBYK0hIxe0RWn8+7bFIBAEfhpLWL3VLBEJ0lBp0GM4c7Lk4P1bb1GoX80lmUOn9MbmQPkKgH1+57vV/r4vs5O1mP4RzfU35f3SNTShSs3HfeAxybfaQ7M7vq2rwXperbzbDaZUiSKxidKFSUTqkYvwk6mG053ghZBoZlm5TuSKJIS1J22vRdlGpoNyvn8IVnlgIANh9jUcqXQV2Uuvjii3HVVVdh4sSJmD9/Pj755BM0NTXh3XffjfahBeTJJ59EWlqa8qu4mCNVkVDb5ipKAYiLEb4ui00ZU+or6JwGj7SkBKy9/3z8acG0Pp9XVpCK4TkmdFvtWLWnus/nkiexW1mWSY/clETkpyZCloE9bmHnJ5s6sb+6FRrJ1U1FFC19ju+J7+dkA4ZlO7pdj9a2+Q1SjUeeu+91efwbKDvvJfXO6vO3A58ocGUnG9g1SSGnZEpx972w2SjypEqYJ0XRI4pSXX10Sm11dkWNyDHhgrGO5pYdJ5vRbeXPB29i6oycnp6O0aNH49ChQ8jPz4fZbEZTU5PHc6qrq5Gfnw8AyM/P77Ubn/h/f89JTU1FUlISsrOzodVqvT5HfA1fHnzwQTQ3Nyu/Tpw4EfTfmYJjsdnR4CzeiItT0VkUy0UpMb5g1Gu9XojT4KTVSH2O7gGAJEn4/qQhAIAPt5+KxGHFDfFaz3SO7UwocoTLu4edi9G9qUMzkG7kBgAUXaIo5Rg99bwwFd09WSY9SrKMkCSgpcuqfJ+riXtRqtNiQ0unq/NEjO+lJvbeZdZf2Lmy8x534aQwMHH3vbDb5Ow0mcHRPYoiEXbe1/ieyJOaVpKB0iwjMk16mK127D7FySlvYqoo1dbWhsOHD6OgoADTpk1DQkICVq9erXx8//79KC8vx6xZswAAs2bNws6dOz12yVu1ahVSU1NRVlamPMf9a4jniK+h1+sxbdo0j+fY7XasXr1aeY4vBoMBqampHr8ovMTdUZ1GUi7+hzh34DsZw0Up9y2s/RU5KPaIotTag3WqfAPaX6J7MMvkeCM6wbnj4S63sHMxujeHo3s0CKQk6qDVOH6GN/XYgc+9UyoxQYshaY4bKkdVOMLnXoQCXDvmAa7xvdQkL0WpFD+dUq2Or5PHohSFgeiUamPQeVh0W23YVtEEAJgxjEUpip5EZ6dUX0Hnoig1dWgGJEnC1KGO7j6GnXs3qItSv/jFL/DVV1/h2LFjWLduHX74wx9Cq9Xipz/9KdLS0nDzzTdj6dKl+PLLL7F582YsXLgQs2bNwhlnnAEAmDdvHsrKyrBgwQJs374dn3/+OR566CEsWrQIBoPjwuX222/HkSNHcN9992Hfvn144YUX8O677+Kee+5RjmPp0qV4+eWX8cYbb2Dv3r2444470N7ejoULF0bl34V8E3dHs5MN0Dgv/MX4XkwXpVocx17A3YLi0vCcZIwvTIXVLuPTXZXRPpyY0dDu6iwB3DulmgA4Lha+OVQHgHlSNDhoNBLSncWUngVo90wpwJGZAqgzV0p0ShmcYbKVza7ztyhYpSb6Ht+r9VWUahZFKWbRUOgpnVIc3wuLnRXNMFvtyE7WozSLURYUPUY/nVIWmx3bndeiYjdu8d+eO/KRw6CeA6qoqMBPf/pT1NfXIycnB2eddRa+/fZb5OQ4ckGee+45aDQaXHHFFeju7sb8+fPxwgsvKJ+v1Wrx8ccf44477sCsWbNgMplwww034LHHHlOeM2zYMKxcuRL33HMPli9fjqKiIrzyyiuYP3++8pyrr74atbW1WLZsGaqqqjB58mR89tlnvcLPKfrcQ86FwjjIlKpURg4Ych6vvj9pCHadbMGH207h2pkl0T6cmKCM74milLNT6khdO9q6rdhwtB7dVjuGpCViTH5K1I6TyF2GSY/6drNHrlSH2aoEpmY5CyvDsk1Ye6gOx1RWlLLbZaUbamRuMnafalG6hQF/nVKOnwW+xveqWxyPc3yPwkHJlOL4XlhsUPKkMjk1QFHlL1NqX2Uruix2pCbqMCLHkRE5vdRRlNp0vBGyLPN7uIdBXZT629/+1ufHExMT8fzzz+P555/3+ZySkhJ88sknfX6d8847D1u3bu3zOYsXL8bixYv7fA5Fn7eilCvoPHZ33xMX5OyUil+XThyCJz7Zhw3HGlDV3IV8rrVforNEZEplJxswJC0Rp5q7sPtks5InNWdMLk/+NGhkOHeIcx/fc99J0uR8Yys6pdQ2vtdmtkLkmp+Wn+IoSrmN74mg8xQvnVLZStC59zFo8XU4vkfh4MqUYqdUOCh5UhzdoyhL9LP73ubjjgLq1JIMZXJnQmEaErQSalu7UdHYieJMdvu5G9Tje0TBqhFFqeTeRanK5k7Y7bG5i1GlW6YUxafC9CTMKM2ALAMf72DgeSAa3HbfE9zDzr/cVwuAo3s0uIjAfffxPZGPlp1sUAqow3LUWZRq7nCN7pVmOf4NPDql+gg6FzekfHdKOYtSPJdSGJj0jqJUOzOlfGrusPQrO9Nul7HJ2Sk1o5Q771F0KUHnvopS5U0AgGlDXd+riQlajBviuEblCF9vLEpRXBEXorlueRF5KQZoJMBik32Gnw527JRSB+7CFxzX+J7r9S5G+N7bUoGTTZ0w6DSYPSI7KsdH5E2msyjV5Da+V98mQs5dBdbhbp1SPW+ovPTVYTz4zx0xe6OlLyJPKjUpQRmzqwxwfC8n2U/QeQszpSh8jIa+uyd6stjs4TycQcdqs+N7//s15v/+v2jtsvj/BDcHalrR0mWFUa9FWQE3jqLoSkpwlFB8ZUqJMPOpJZ4FVOZK+caiFMUVb+N7Oq1GubCN1bBzdkqpw8UTCqDVSNhR0ay6HJn+qO+RKQUAE4rSAQD7qloBALNGZCl3tIgGg3STCDrvPb7n3vVXmJ6EBK2EbqsdlW7jazsrmvHUp/vw1w0nsLcq/raWFkWntKQE5ZxX7b77nhJ07rtTqqHdDFuPgl2XxYZGZxcWM6UoHJROqQAypd7bXIGxv/4MT3yyNy6Ly96UN3TgREMnalu78cXe6qA+d+Mx105mOi3fvlJ09ZUpVdXchZNNndBIwKTidI+PsSjlG1/VFFfEjjvu43tAbOdKma125a5vQRqDzuNZdrIBs0dkAQA+YreUXz133wNcnVICR/dosPHWKVUnRlGTPW+oiMwJ9yL1s6v2K7/3NaYWy8R4XlpSgtId7L1TqnemlChQ2+yyR5A84Pq30us0SPPSZUU0UCLo3N/ue3a7jP/98hCsdhn/998juOOtzX1uLR8vDlS3Kb9fuSO4nYY3HnWGnHN0jwaBJGcB2tvrdku5o+A0Jj8VyQbP85QoSu2rakEbx3w9sChFccVbpxTgXpSKvU4pcYdYr9MoAbkUv9xH+GRZHXdP+6PLYlNGJDLdRp4yTXplx00AmHMai1I0uGQ4i1LuRZO6VmeB1e17GXCN8B1xFqU2H2/El/trXZ/nI9A7linje4k6JfupudOiXPz3lSmVoNUg13n+75nFJULO81MTufEBhYUIOvfXKbX2UB2O1rUjKUELvVaDz3dX4yf/tx41rbF34zQYB6tbld9/daBWea37I8syvjtaDwA4vZQh5xR9olPK2/ie6IKaVtK7gJqXmoiijCTYZWCbM3eKHFiUorghy7JyQs9N8WzNF0WpWBzf44W0uswfnw+dRsLBmjaP7gDyJEb3ErQSUnrciZroDDsfnZfM3U1o0El33lxocN99r917l6+yA1+to8Di3iUFxGunlOMNfVpSAlIMOmU3QnEu7Gv3PcD1RuC7I/Uej1e7nUuJwkF8r7Z3W/u8qfSXb48DAK6eUYy3bpmJDGMCtlc044fPr8MBt8JNvDlQ4+qUsthkrNoT2AjfwZo2VLd0w6DT9MroIYqGJL0zU8pLp9RmJU8q3evncoTPOxalKG60dVvRZXGERmaneN5tLkx3XITGYqcU86TUJTUxIaaLqJEigqEzTfpexdo5zpG9H04pivhxEfkjRsw8g869d0oNy04GAByta8O6w3X45lA9ErQSvjexAIDvQO9Y1uw2vidJknLuq2zuhM0uo9U58uAt6BwAZjq3i//OOe4jiA1DchlyTmFidN4gsctAt9V7iPnJpk6sduYpXXdGCWaUZuKfd56JYdkmnGzqxBUvrovbjinRKSVydlYGuNPwfw84ukNnDs9CYgIzIin6fHVKdVls2H2qGQAwbaj3rj6lKFXOopQ7FqUobog7xskGHYx6zzuosfwmv6rZcczceU89vOWokKd6LzvvCVdNK8Lqn5+L284ZHunDIvIr3Tm+574tuiguZZm8d0odqWvHs/8+AAD4yYyhmOx8UxePnVLuRSnAdUOmqrkLbV2usShfnVJnOHP5Nh9v9NjdjJ1SFG5Gt4JJu4+8mLe/Ow67DMwekYWRuY6i87BsE/55x2yUZhnR2mXFd0cavH5uLLPa7Dji7Pi8Z+4oAMDXB+s8ivO+fH2wDgBwzijupEuDQ6KPotSuk82w2GRkJxtQnOk9B3jqUEdRauvxRtVschAIFqUobvjKkwKAwozYzZRip5T6KEWpGPx+jZQGL7uVCZIkYUROMjQajrvS4COyAVu7rLA6iyaiyNorUyrHUZQ6Xt+BTccbYdBpsPj8kcp5Lp47pUQnVH6q4/xd1dKlhJwnJmhg0HnvmBidm4J0YwI6zDbsPNmsPF7d4vi3ymNRisJEo5FcYedexnq6rTb8bcMJAMD1s0o8PpZh0iujaScaO8J8pJF3vKEDZpsdSQlanDMqB2PyU2C1y/j37r5H+LqtNiVP6iwWpWiQELs69xzf23aiCQAwZWi6z8iVMfkpSErQorXbiqP13GlbYFGK4kZNH0Up0SnV2GFBRwBb9Q4mYuSggBfSqlHg/H5lp5RvDUqnVO+iFNFg5hhLc/y+qdMCu11Wvp+ze2RK5aYYlDe5ALDgjBLkpSYqz4vHTinX7nqOolSBW6dUcx8h54JGIylhyO4dJyKTKo83eCiMRKe+t7Dzz3ZVob7djPzURMwdm9fr48UZjgzEEw2hL0rJsoz//c9B/GtrRci/diDE6N6oPMcNIzGC/PHOvnfh23ysEV0WO3JSDDgtLyXsx0kUCHFe7urRKXXQucPk2Hzf36s6rQYjch03nA655aypHYtSFDf66pRKTUxQwpBPNcXWG31Xp5T3NlCKP0PcMlTIu3oWpShG6bQapajS2G5Gc6cFNmcLv9iZT5AkCaVZjotXo16L288bAQCq6JQS43t5buPMPQtWvswc7hjh+9Yt7LxGFKW8XCMQhYrJIMLOe3dK/Xm9I+D8mplDodP2fgs21LkxR3kYilJ7K1vxu38fwP3/2NnrjXQkHHC+WR+V63izfulEx07D3xyq8xhl7um/ztG9s0dlc7MfGjR8je8dqnV8n4/0U0AVrwMWpVxYlKK4UdvmffciQXRLxdoIn9Ipxbu7qiEKkOyU8q3BuVtZdjKLUhR7RDG1scOi7LyXlpQAva73ZVnZkFQAwI2zS5UOKfHfxg6LR25SPOjZDSW6hKtbuvzuvCecMdzRKbXpWAOsNjtkWXbtZMtzKYWR6JTq2ZW/+1QzNh9vhE4j4Sczir1+7tAs0SkV+uvUgzWOTiWzza6MGEWS2FVwdJ4rR2vckFTY7DI+313l8/PWHnKEnJ/N0T0aRETQufuYrizLSpFpZE5yn58v8uRYlHJhUYriRl+dUgAwJAZ34LPa7MouLCxKqQeDzv1r6CPonGiwS3fmSjV2mFHnY+c94f6LxuDZH0/CPReOdn1+UgJ0zsw0sXNfvGjpdLyZ7xl0XtnchZYAxvcAYEx+KlITdWg327D7VAtaOl278zJTisLJpPfeKfXmt44uqYvG5yPXx/egGN872dSp5M2Fivub3w1HIx+kLsaaRuW53qx/z9kttXKH9xG++rZu7DrZAgA4cySLUjR4JHkZ36trc3Q+S5IrD9KXETksSvXEohTFjb4ypYDY7JSqbeuGXQZ0GglZPjrAKP6IolRdWzfMPraVVjuO71EsE2N6je1mpaiU7aPAmpNiwI+mFiHBbdxHo5GUIlY85UrJsqwUntKMnkWpurZupRjtb3xPq5Fw+jBnrtTRelQ7b+6kJSVwS3kKK6Ohd6dUc6cF7289BcCRC+dLbooBep0GNrsc8ptSoigERL4oZbHZcaTOc3wPAC6d4MiVWne4zuso8tpDjtG9MfkpyE1hMZkGD9Ep5R50LroRizOMfs8zojh7qKaNO/A5sShFcUNcmOf6KUqdjKFMKXFRkpeaCC13ElONTJMeep0Gsuzaxpw8NfjYrYwoFihFKbfxvWC/l+MxV6rLYofZ2SGS6hzRyzTqodc6fh6Ku8qpfsb3AGDmMEeu1HdHGpQx+Hx2SVGYuTqlXEWpT3dWotNiw+i8ZKVY6o1GI6HIuVt0qMPORdYNAGw+3hjRsd/j9e2w2GQY9VoUprvyUYdmGTGxKA122REC39NaZ57UOaNzInasRIFIcsuUkmVHUelwjSi89j26BwAlmUYkaCV0Wmw4xfxYACxKURwJdHwvlsKjlQtpju6piiRJHOHzo6GNnVIUuzKCGN/zJR534BNB5lqNhGRnx4lGIyEvzfF3Fbk0/jqlAGCmM1dqw9EG5byfm8qOYwov1+57rg6Klc4d5n4wudBvWHc4ws4tNjuO1Tm2ntfrNOi02LDrZHO/v54sy/jD6oP41M/OeYIyupfr2HnPndiF781vj3uMQsmyjK/dQs6JBhMxvmeXodxIUfKkAihK6bQaDMvmDnzuWJSiuGCzy0rwsa+ilMieaeywROy4BqqSRSnVKuAOfD51W21odd6FzmJRimJQhsk1vic6nbKCzEcTm3rUxlGnlCvkXOfx5r0g1dFdcVDplPJflCorSEWKQYfWbivW7HeEJbNTisJN7L7X4TxH1bd1Y91hxy6QYlytL6IodaIxdEWp4/XtsNplmPRanDPK0XU0kBG+rSea8OyqA7jjrS14+rN9fsePlJ33vOxI9sMpRcgwJmBfVSt+9a9dStfJoZo2VLV0Qa/TYEap7+4yomhwH8/rMjuKUuL8NCKAohTAsPOeWJSiuFDvzF7SSL4v7DPdMjxiRZWzIFHAC2nVGcId+HxqbHd1UwTy5pRosPEY33MWlbJ93FDxRTw/njqllKJUj06oPGeRXux05G/3PcBxJ3p6aQYAYPW+GsfX4bmUwsxk8OyU+nx3NWx2GeMLU1Ga3Xf4MeAKOy8P4Q587h0cZ7h1EPaX+2jhC2sO4+6/bfXocurpgDNrx9tYU06KAf97zVRoJOC9LRX483pHILzokpo5LJM5cDToJGg1SNA6bpx0WBwF6ENBjO8Brh36WJRyYFGKoqa2tRvfOEMMB0qEnGclG3xmL4ndjho6zMqdmMGOnVLqpew4FUPB/JEiMngyjPpeowBEscB9fM8VdB5kplRy/GVKKSHnPYpSPXefDWR8DwBmDnfkSokNI/J4LqUwE5lSIuh85U5HwPmlE4YE9PnFYRjfE+NzI3JdmVYbjjXA1s+A5ZPO65LSLCN0Ggkf76jEda98p2Q99v7zHUWp0V46pQDHznq/vGQsAODxj/fguyP1+Pqgo7uRo3s0WCW6hZ23dFmU96IBd0o5Xw8sSjmwKEVR8+v3d+HaV77Dl847mMFo7jGCJ8YXcvrYoU5kz5itdnT2cUdnMBGZUgVpSX6eSfGmIJ2dUr6IN/Ec3aNYpYzvdZiVnSSD3WE1njulehaleo7dBRJ0Dji6LPr6OkShpmRKddtQ19aN9UGM7gFAcabj3F8RwqKUCDkfmZuMsoJUmPRatHZZsb+qtV9fT+xifdmkIXjjptORkqjDpuON+NEL3/QKaLfY7DjqzLMSO455c/NZw3D55CGw2mXc+dYWfHvE0cl11kiGnNPg5B52LgpLeamGgDv4RafUwZq2mGmWCCcWpShqdlc6Qha/OlAb1Oe9s7Eckx77Nx78505YneFy/kLOAcCo10Kvc3zL+7qbM9iwU0q9xMgmi1K9idcvQ84pVmUYvWRKBbv7Xhx2Svka3+t5Dgy0U2p8YZrSuQI43jAQhZOSKWW24rNdVbDLwMSiNAzNMgb0+aJTqr7djDa3HfwGwjVWlAKdVoNppWKEr75fX6/SuYv1kPQknDkyG/+8YzYK05NwrL4Dv3p/l8dzj9U5dt4z9dh5rydJkvDkjyairCAV9e1mdFpsyE42YEy+9+4qomgTYeddFhsOVQceci4MzzFBkhznPbHhiZqxKEVRYbPLykkt2Ll2UcT664ZyLHp7C7ostoCKUpIkueVKDf6wc7tdRnWL6JRiUUptCmJwt8hIEZ0lmUG+iScaLDJMjqJKU6cFrV2ON57ZwQadpzi+/+OpU6ql0/Fv0fNOc6+iVIB3ohPc3oAD7JSi8HPvlFq5w7E7XaBdUoDje1uM9/bsOuoPu13G4VrPN8wz3Ub4+kOM74lr01F5KXjrZzOh1Uj474FabDvRpDxXhD+PzEvxu/Ngkl6LPy2Ypvz9zx6VzRF9GrSUTimzXelGHJUbeBE1MUGrbGzAET4WpShKqlu6YHXOsu+ralG2gQ6EmI0HHAGSN7y2QTnh9lWUAly5Uo0dg78iXd9uhtUuQyP5/3tR/BEjm3VtZnRbY2PcNFLETpsc36NYlZ7k+N4VHfs6jYTUpMBG0oScZMcbwpYua9z8jPA1vtc7UyrwfyvxBlyrkYIekSQKluiUKm/owHfOTqRLgihKAa5uqVAUpU42daLLYodep0FxhuO6QsmVOtrQr7EhMb7n3vlUmm3Cj6YUAgD+sPqg8viBat8h594UZxrxyg3Tcf6YXNx6zvCgj40oUkSnlPv4XqB5UoIr7Lx/o7TxhEUpioqTbuHNdhnYcrwxoM9zn01/9seTkGzQ4bujDfjnlpMAgFw/xZtMtxyPwU7kSeWkGJCg5UtVbTKMCTA4x02rm+OnEyIUOL5HsU6v0yDZ4CqsZCXr/XYR9JSapIPeeW6Il9Z/X0WpnGQD3Bsmgtl186yRjqDkkkyjz41QiEJFdEqdbOqEXQYmFacrRaZAhTLsXLxZHp5tgs7582JiURr0Og3q2sw44rymDlRrlwUtzu7Ogh7jeIvmjIRGAv6zrwY7KxwRHeJG8ug+8qR6mlaSiddunIGxBalBHRtRJIlOqQ6z1bXDZU6QRak87sAn8J0uRUVFo+eJdmOALcTH69thtTtm0384pRB/u/UMZLvd+fTXUSTCZWMhU0qMbeUz5FyVJElSugM4wueJQecUD8QIHwBkBTm6Bzh+RmQ7R1jr4mSEz5Up5dkJpdNqlPO7XqtRCvaBmFScjhevnYo//HRK6A6UyAeT3vN793tBdkkBUEZ6QtEpddDZgeHewWHQaTGlOB1A8BEaIucyLSnBo7AOOLqlLp/s6JZa7uyWUjqlfOy8RxSrRFGqqcOCE873tcFkSgFunVK1LEqxKEVRcbLR8SY7McHxLbjxWGCdUgeqPWfTxxem4b07ZmFophGSBIzJ7/uuirINdwwUpapEnhQzMFRLjPAx7NyTq1OKozgUu0TYORB8yLkQbzvwiVH+np1SgOsGTWqSLuiusosnFGB8YdrAD5DID6NB6/H/F0/ID/prFGc4i1KNA78h5Qo593yzPNNthC8YYtJhiI/Q8kXnO7qlvthbjW0nmpTphtEsSlGcSXSO7+0+1QxZdkTEZAd5LhdFLPdoGrViUYqiQpzULixznKy3nWgKKBNDvGjdT64lWSb8+55z8N975/itUCtB5x2DP+icO++RK+ycRSl3oijV3zfyRINBultRKrufWUdiB77aONmBr8XH+B4A5Dt3zgtmdI8o0ty7h6YMTUdRRnCje4CrUyoU43tK0HiP6+PTh2UBCL4o5cqT8n5tOiInGZdNGgIAeOC9HbDaZSQbdBjCa1mKM6JTaufJFgCOrqdgb5iI12VNa7fSKaxWLEpRVFQ47/6cPTIbWSY9zFa7Mn/eF9GG3HM2PTFBG9DMvjK+F0OZUtx5T704vued2H2P43sUyzKN7uN7/eyUchal4m58z0vhSXSOpngpWBENFka9q1MqmF333BVnOr7XTzR09CuIXJBl2a1TyrNTaWpJOnQaCSebOntFavRF7Jztq1MKABbPGQlJAvZVOa7ZR+YG/2adaLATr3Uxohrs6B4ApCQmKLvCqj1XikUpigoxvleUmYTppRkAAhvh83VyDZQYl4iF8T1XphSLUmol3oSdamKnlGCx2ZU3rgw6p1iW7jG+189OqRQVdUo5z4WpicHtUkgUSUa9DmlJCUjQSkHvuicMSU+CRgK6rfYBjebWtnajtcsKjQSUZnveuDXqdcpIazDdUqJTqqCPvNNReSkef/dAd94jiiWiU8rm3E2+P0Up9887zKIUUWTZ7TIqnCe1onQjZpQ65tr9hZ1bbXYcqXXMpvf3hZ9hip3xPVenFIPO1Up0SlW1sFNKEDtnSpLnm3qiWONeVA02h6Ln59XFQVHKYrOj3ewY4/dWlJo5LBN6rUbJwiEajLQaCX++6XT89ZYz+uwm6kuCVqN87kBG+MToXkmWCQadttfH+5Mr5cqU6vuG6d3nj1J+zzwpikeJCZ6vqYEWpdQeds6iFEVcXXs3zFY7JMlx5/N050lx07EG2O2+25SPN3TAbLMjKUGLwn6e6DNjpFNKlmVXphSDzlVLCTpnp5RC5EllGPXc3p1iWobb+F6/M6VSHOeHeAg6b3HL00jx0g01ZWgGdj46D4vd3uwSDUaTitMxvXRgxVNX2Hn/i1KHfORJCZOdO/DtPtUS8Nc81Swypfq+Dj8tPwU/mVEMnUbCOaNzAv76RLEiSR/aotRB5xigWrEoRQN2uLYN2040Bfx8MbqXn5oIvU6DsoJUGPVatHRZcaDG9wtSCTnPS4amn29G051vAho6zAOa0+8vWZbx8n+PYN3huj6f19RhQbfVDgDITeUOY2olOqXq283osvjfCEANGtrEznvskqLYlh6K3feUTqnBfaMlEC1dVgCOoGid1vvlqbduD6J4pISd1/e/U9pfUWpsgWPH6v3VrbDa7H6/ns0uK138gXSBPfHDCdj5yHycls9OKYo/SW6dUkkJWgzp52TLKHZKAWBRigZIlmVc/+oG/OiFbwIKKgdcIefiLotOq8HUoc5cqT5aiA/V9D9IThBvZM1WOzqj8CZ/24km/L9P9uLn727v83miSyrLpO/VHkrqkW5MQGKC48d0dQu7pQCgrp1FKYoP7t/DA86UioNOqeY+8qSI1GZo1sB34BObA43M8X7dPDTTCJNeC7PVjqN17X6/Xl1bNyw2GVqNhNwU/z+zNBqpVzcJUbxwL0qNzO1/w4R4X1vR2IlOs3pvQLMoRQPS3GnByaZO2GXg2VX7A/ocMY9elOGqKItcqQ19hJ0fqB5YyDng2ClBr3N82zdEYYTvWL3jpF/Z3KXcbfJGZAgx5FzdJElS7rww7NyhwZmdw533KNalh2D3PVGUauu2xvzFrLLzHotSRMo18sDG9xzXnKPyvBelNBpJ6WLaW+V/dEhcv+enJvrsZiRSC/eC60AaJrKSDcgwJkCWHdNHasWfKDQgousJAL7cX4vNx/3voCe2ni30KEq5OqV8jdUdVHbe6/8LX5IkJcejsT3yYecVDa5/r75GHiuVkHMWpdQun2HnHhrYKUVxoijdCL1Og6KMpH53xCYbdDA4b7TEeti5yJTi7npErvG9E/3slGrqMCs/E0b46JQCgDHOEb69lf5zpU4FGHJOpAY9O6UGQjRcsChF1E89T5bPrTrg93NOKuN7ru1pJw9Nh04joaqly6PQJdjssvJCHeguHhki7Lwj8p1S4i4TAGyvaPL5PNFFxU4pKmCnlId6Z1GKnVIU69KMCfho8Vn4261n9PtrSJLkGuGL8aIUx/eIXIqdRamqli50W4PvghR5UoXpSTAZfBd6xwZRlBKbrnBXaCLPTqm+Cr+BGCFypWpYlCLqF9FWPK0kAwlaCWsP1eG7I/V9fo638T2jXodxhWkAgI3HeudKnWjogNlqR2KCxqPDqj9Eh0U0ilLuBbftAXVK8cSvdqJbrq9xTzVhpxTFk9PyU1CUYfT/xD6InftiPVeKRSkilyyTHka9FrLsupkbDPHmdoSfDo6yAseN3n2VgY/vBRJyThTv3DucfY3IBsq1Ax+LUkT9IoosM4dl4uoZxQCAZ1Yd8DmCJ8uyK+i8R3HpdDHC5yVX6oBzm8wROckD3gY+w/lmNhqZUu6dUjsqmmG3e/93EiOOeanslFK7AmebfGUzx/cAV6dUZj+DoYnijeiUipvxPRaliCBJkmsHvn6M8InIC18h58Jp+Y5OqaqWLjT6uS4W43uFHN8jUsb3ErQSSjIHdnNJRNPsr/ZfHI5XLErRgIjxvaIMIxbNGQm9ToMNRxvwzSHv3VJNHRZ0OMNYC3vcaRFh5946pUKRJyUomVIdkc2Usttl5W6XJDmCaY/U9a6Id1lsSt7UBGf3GKmX6JSqZKcUAFcxmeN7RA7x0inV0sVOKSJ3oovyxAA6pfx1cCQbdErxy98I36lmdkoRCaPykjFreBZunF064OD/SUXpkCTgaF07alS62zaLUjQg4kRZnJmEgrQkXHP6UADAM6v2e+2WEl1S2cmGXsGu051FqUM1bb22pnWdXAeWJwUAmSJTKsKdUrVt3TDb7NBqJEwuTgcAbD/R3Ot5G481oMtiR16qAaMH2A5KsU+McLIo5cDxPSJP8dIpxfE9Ik8DCTsX182BBDCPCXAHPpFtyaIUEZCg1eCvt56BX11aNuCvlWZMwLghjq7F9X5icOIVi1LUb45RPMeJsth5N+fOOSOQmKDB1vImrNlf2+tzTjaJzqreJ7RMkx7nj8kFAPzpq8MeHztY4zhRhqRTSozvRThTShTk8lMTMW2oY1TRW9j5fw84/t3OHpUDSRrYqCLFviHOolRDuxldltje8n2g2rqtSlGKo61EDjnJjnNarHdKNSvje9x9jwhw3PAFgPL64IpSzR0WJS7itHz/N3MDCTvvNNuU8y+LUkShN2t4FgDgWxaliIJT12ZGl8UOSXLl3uSmJOL6WaUAgD/+52Cvz/GVJyUsmjMCAPDelgolQ8dul0PaKSV232uKeFHKcVFRmJGESUqnVFOv5319sA4AcM7onEgdGg1iqUk6ZW69Z9i5zUcmWbwSF8z5qYnslCJycnVKRT4nMZRaOq0A2ClFJCidUo3BFaX2OM+VxZlJSE30/3oKpCglRveSDTqkJrJwTBRqs0Y4ilLrD7MoRRQUcZLMT02EQecaxfvZWcMAAFvKm1DT6vkmWhSlinzcZZlWkonTh2XCYpPxytdHlc/pstih12mUE/RAuILOI5sp5b7roBjf21PZ4rHVb3VLF/ZVtUKSgLNHZkf0+GhwkiRJKfqecgs7f+XrIzjtoU+x4NXvsO5Qnc/NBeLJ7pOOcVfR4kxE8ZMpxfE9Ik9K0HmQnVKiKDU2P7Bz5VjnDnwHq9tgtdm9PqeySewKncgufqIwmFGaCY0EHKvvUOXmRixKUb+JAlNxj+2sc1MTMbHIEdDdc4TPvTDjy6I5IwEAb39XjoZ2szK6F4qd94DoZUq5F+SKMpKQadLDYpOx120bXjG6N7EwTSmeEYmwc9Ep9Zf1x/CblXthtcv4+mAdrnnlO1z+/Df4bFelzx0d48HuU44LbRaliFziLVMqkM4OIjUQQeet3Vbl9REI0fFUFuC5sjjDCJNeC7PNjiM9Ml0FsfMeR/eIwiMlMUHZ4EqN3VIsSlG/KTvvZfY+Qc05zZENtWZ/jcfjJ/2M7wHAOaOyMW5IKjotNqxYdyykO+8BQLqy+545ot0lSlEqwwhJkjDJWbhzH+H7r3N07+xRHN0jF/ew83c3ncCvP9gNAFh4ZilumFUCg06D7RXNuP3NLbho+X+Vi8d4I4pSZUO4KyWRIDqlOsw2tHdbo3w0/WO3y2jl7ntEHpL0WmQ7M+Mqghjh2+M8V4qxPH80Gglj/IzwnWRRiijszlDxCB+LUtRv4gRZlNF7pG6OM7D86wN1sLi1Avf1OYIkSUq31IpvjmJreSOA0BWlRBZNt9WOzggGR59s9Ax575krZbfLWHvQ0SnFPClyJzql/rX1JB54bwcAR0Fq2ffK8OgPxuObB87HXeePRFpSAg5Ut+H+93bE3Tif2WpXuibZKUXkYjLoYNQ7RuhjtVuqzWyFaPJMZVGKSFHoLAKJG5v+uJ8rywIsSgFuO/BVet+BT9zsKkznJiNE4SLCztW4Ax+LUtRvrvG93ndNJhamIcukR2u3FZuPO4pKLV0WtHQ57uIW+rnTMn9cPoZnm9DSZcXnu6sBhCbkHACMei30Ose3fkOERvhkWVbuMhX2KEptc+7At+tUMxo7LEg26DBlaHpEjotig+iUOlTTBrsM/PT0oVj2vTIl1yE72YCfzzsN/7pzNvQ6Db4+WId/bK6I5iGH3IHqVlhsMtKSEvoc/yVSo1jPlWrucHRJGXQaJCZo/TybSD3ETdxAi1KHa9tgsclISdQFda70F3YuMi3ZKUUUPjNKM6HTSKho7FQmktSCRSnqN/FiKfYSPq7RSDjX2e3zpXOET4zupRsTYDL0vXOHViPh9vNGeDw2Ki80nVKSJCHDOcLX1BGZsPP6dredCp0FhklF6QCAI7XtaO60KHlSs0dkIUHLlya5iE4pAPjRlEL8v8vHew0aHZ6TjHvmjgYAPP7xHtS0dPV6TqwS4whlBakMWSXqIdZzpVqco3vskiLyJApLgY7vuY/uBXOu9FuUcgadsyhFFD4mg07JZVZbtxTf+VK/2Oyy39Dy85wjfGv2OYotJxv9h5y7u3xyofJmPEEroSQEO+8JGUaxA19kOqXEHa68lESlSyvTpFd2VtlZ0Yz/HnDmSXF0j3qYXpqB8YWpuGbmUDx95URo+gj8v+XsYZhQmIaWLit+/cGuuBnj232KO+8R+SJyZ2K2U4o77xF55SpKBdYpJXbeC2Z0DwBOc47v1bR2o75HcVuWZbfxPRaliMJpljNX6luV5UqxKEX9UtPaBYtNhk4jKZ0/PZ0zKhsaCdhf3YqTTZ2u8bUAT2h6nQa3njMcADAqNwW6EHYPiVypxo7IFKV8FeTECN/aQ3XY4szOOpch59RDSmICPr7rbDzxwwl+Xwc6rQa/vWIidBoJn++uxic7qyJ0lOGl7LxXyKIUUU+iU6q2LbK7yoZKC4tSRF6J8b2TARalgt15T0g26FCS5fiz9lV55ko1tJvRbXV0++elMlOKKJxmDc8G4OiUipcby4FgUYr65USDa7Zc66NrI92ox9ShGQCAL/fVBBRy3tN1Z5TgwYvH4P/9cPwAj9iT6JRqjFinlGfIuSB24Hvru+Ow2mWUZhkxNCt0HWGkTmVDUnGnc/z14Q93Rez7PFzsdlm50B7HnfeIeon1TKmWTkfeZGpi36P9RGoTzPieLMv97pQCgLH53kf4xOheTrJB6fYnovCYVpKBBK2EyuYuHK9XT64Uf7JQv4g8KX+jeGIXvjX7a4LulAKABK0Gt507AlOcxa1QyTA57sY2RChTSrRdF/b495rs7JRqdQbAc9c9CpVF54/EqNxk1LWZ8djHe6J9OANyrL4d7WYbDDoNhmebon04RINOrGdKcXyPyDtx3djSZVVeJ75UtXShqcMCnUbCyH7sWD2mwPsOfOL6nXlSROGXpNdiSrHjfa+acqVYlKJ+ce2813dXz5zTHEWpbw7V40htO4DAM6XCKTPCnVKu/C3Pf69xQ9I8Os3O5ugehYhBp8XTV04EAPxr68mY7aAAXKN7YwpSQzrGSxQvYr1TikUpIu+Mep0SOeFvhE+EnI/ISe7XLpa+ws6ZJ0UUWWc4c6XWqyhXilf31C8nGsXOe32foMYWpCAv1YBOi02ZUe/ZLRQNGc4TfEOEMqVE23XPE3qSXovReY47UzqNpITbEYXClKEZOM35/SUyy2KRkifFkHMir0SnVKzuuCmKUtx9j6i3QEf4lF1q+3muFCN/h2raYLHZlcdPKZ1SzJMiioRZw51FKRXlSg3qotSTTz6JGTNmICUlBbm5ubj88suxf/9+j+ecd955kCTJ49ftt9/u8Zzy8nJceumlMBqNyM3Nxb333gur1erxnDVr1mDq1KkwGAwYOXIkVqxY0et4nn/+eZSWliIxMREzZ87Ehg0bQv53jhWu8b2+O6UkSVK6pYSi9OhnJolMqaYIFKVkWe5z58HJxY6MnGklGUg2ME+DQmtqiaMFeMvxWC5Kcec9or6MyEmGJAGnmrticoSvpYudUkS+iGtH0XXvy96q/udJAY4bp8kGHcw2Ow7XtimPn2rm+B5RJE0Zmg69ToPa1m4cdk4axbtBXZT66quvsGjRInz77bdYtWoVLBYL5s2bh/Z2z8W55ZZbUFlZqfx6+umnlY/ZbDZceumlMJvNWLduHd544w2sWLECy5YtU55z9OhRXHrppZgzZw62bduGJUuW4Gc/+xk+//xz5TnvvPMOli5diocffhhbtmzBpEmTMH/+fNTU1IT/H2IQUsb3/HRKAcB5bkWpFIMOqUnRL7wonVLt4c+UauqwoN1sA+D9hP6TGUNRmmVUdhokCqVpzqLU5hgtSsmyrNz9Zcg5kXdpSQkY5cyQicUCNDuliHwTN4ArAhzfG9vPopRGI2FMvqO7+qqX1uPG1zfghTWHlEkHX7ttE1FoJSZoMW2ounKlBnVR6rPPPsONN96IcePGYdKkSVixYgXKy8uxefNmj+cZjUbk5+crv1JTXT+M//3vf2PPnj148803MXnyZFx88cV4/PHH8fzzz8NsdnTJvPTSSxg2bBieeeYZjB07FosXL8aVV16J5557Tvk6zz77LG655RYsXLgQZWVleOmll2A0GvHaa69F5h9jELHY7KhsDixTCgDOHJmFBK0jN6kwIwmS5H23vkiKZGlqFjMAAD8USURBVKaUuIjISTF4nfGfVJyONffOwQVj88J+LKQ+U4emAwB2nGyG2Wrv+8mDUHVLN+rbzdC6XSwTUW9KAToGR3WZKUXkm4h+6Gt8r63bimPOnbrGFvT/XHndGSVINujQ2mXFmv21ePqz/UomLDOliCJHRLp8q5JcqUFdlOqpudkxwpGZmenx+FtvvYXs7GyMHz8eDz74IDo6XD+0169fjwkTJiAvz/WGf/78+WhpacHu3buV58ydO9fja86fPx/r168HAJjNZmzevNnjORqNBnPnzlWeoyaVTV2wy4Bep1HCVfuSkpiAGaWONRsMIecAkG50XPg2dpjDPqt7simwnQqJwmFYtgkZxgSYrXZlDC6WiGMekWPqV3ArkVpMHRqbo7rdVhsqnVvOpyayKEXUkytTynen1H7n6F5+aiKyArg29+XyKYXYtuxCfLT4LPz6e2W4aFw+spP1GDckFaPygt/Rj4j65+Lx+fjN5ePxi/mnRftQIiL6c1QBstvtWLJkCc4880yMHz9eefyaa65BSUkJhgwZgh07duD+++/H/v378c9//hMAUFVV5VGQAqD8f1VVVZ/PaWlpQWdnJxobG2Gz2bw+Z9++fT6Pubu7G93drmyHlpYWn8+NJeJOTVFGEjSawLqefjilEOsO12NaSab/J0eA2Mmk22pHp8UGoz58LwVxEcE7TBQNkiRhWkkGvthbg83HGzHF+cY1Vuzm6B5RQER+3I4KR1ekXhcb9x2fWLkXVS1dSDcm9DugmSieBTK+5xrdG3hHsU6rwYSiNEwoSsPNZw0b8NcjouCNykvBqDz1TAjETFFq0aJF2LVrF9auXevx+K233qr8fsKECSgoKMAFF1yAw4cPY8SIEZE+TA9PPvkkHn300ageQzgoO+8FMLonXDW9GNNKMjA0M/oh5wBg1Guh12lgttrR0G6OSFHKXyg8UbhMdRalYnEHPoacEwVmeLYJ6cYENHVYsKeyBZOL06N9SH6t3FGJN9YfBwA89+PJHN8j8kLsWt3caUFrlwUpXjoK91QObOc9IqJoionbaIsXL8bHH3+ML7/8EkVFRX0+d+bMmQCAQ4cOAQDy8/NRXV3t8Rzx//n5+X0+JzU1FUlJScjOzoZWq/X6HPE1vHnwwQfR3Nys/Dpx4kQAf9vB70RD4CHn7obnJEOnHRzfcpIkIcM5wtfUEd6w84o+dt4jigQRlrj5eGPMbS27e4BbXBOphSRJHq/1we5YXTvuf28HAOD2c0dgzphcP59BpE7JBp1yzeprB749lY4w8v6GnBMRRdPgqBD4IMsyFi9ejH/961/4z3/+g2HD/LeQbtu2DQBQUFAAAJg1axZ27tzpsUveqlWrkJqairKyMuU5q1ev9vg6q1atwqxZswAAer0e06ZN83iO3W7H6tWrled4YzAYkJqa6vErHpxQxvdiu/Mnwyh24Atv2LkYdyxkUYqiZGJROnQaCdUt3X63lBYO17Zh5Y5K2OzRK2I1d1iUou64Ao7vEfkjRvgGS1ekLMtYtacaG481wO72s6TLYsOdb21BW7cVM0oz8It5o6N4lESDn7iGrGjofQ632uzYJzqlWJQiohg0qMf3Fi1ahLfffhsffPABUlJSlAyotLQ0JCUl4fDhw3j77bdxySWXICsrCzt27MA999yDc845BxMnTgQAzJs3D2VlZViwYAGefvppVFVV4aGHHsKiRYtgMDiCAG+//Xb87//+L+677z7cdNNN+M9//oN3330XK1euVI5l6dKluOGGGzB9+nScfvrp+P3vf4/29nYsXLgw8v8wUSbeJAYzvjcYiVypxo7wFqVEEaCYRSmKkiS9FmVDUrGjohmbjzcGVFBe8rdt2HmyGaeXZuLZqydFpQi9u9IxuleUkYQ0I8d6iPwZbGHna/bX4pY/bwIA5KUacPH4Alw6sQD/2noSeypbkGnS448/nTpouqiJBquidCN2nWzxugPfsfp2dFvtMOq1KMkyReHoiIgGZlBfBbz44otobm7Geeedh4KCAuXXO++8A8DRwfTFF19g3rx5GDNmDH7+85/jiiuuwEcffaR8Da1Wi48//hharRazZs3Cddddh+uvvx6PPfaY8pxhw4Zh5cqVWLVqFSZNmoRnnnkGr7zyCubPn6885+qrr8bvfvc7LFu2DJMnT8a2bdvw2Wef9Qo/V4MTDc5MqSDH9wYb0SnV2I9OqfZuK373+X4cqmnr83mO+X8rAGAIg84pisSb1a3lTX6fK8syDlQ7RgE2HGvAxcu/xgfbTobz8Lzao4Sc884vUSAmFadBq5FQ2dyFUwF2RXpT0djRr3NjT98ecW1lXd3SjRXrjuGql9bj7e/KIUnAc1dPRn5a4oD/HKJ419cOfGJ077T8FGgD3ICIiGgwGdSdUv6yT4qLi/HVV1/5/TolJSX45JNP+nzOeeedh61bt/b5nMWLF2Px4sV+/7x41mWxoabVsaNgzI/vmRydFw39yJR6+esj+N8vD2HNgRp8tPgsSJL3i4CTzouHLJM+rGHqRP5MK8nAinXHAsqaqW3tRrfVDo0ETCpOx9byJvzP37bhy301eOzy8RHbtn0Pd94jCopRr0NZQSp2nnR0RfbnZsj+qlZ8749fQ4KE700swIJZJZhcnO7zPNeX7RVNAIDHLx+PgtREfLKzEqv2VKO124q7zh+Fc0fnBP01idSor6KU2BCEo3tEFKv4LpmCIkbRTHqtEroYqzIH0Cn16U7HKOmuky1Yd7geZ47M9vq8CiV/i11SFF3TnFkzeypb0GG29lkkFblxBWlJ+Ptts/C/Xx7CH1YfxPvbTmHHyWb8847ZSHe+fsJJHMeInOSw/1lE8WLq0HTsPNmMLeWNuGzSkKA//4u91bDYZAAy/rn1JP659SQmFKZhwawS/GhKYcCjdja7jJ0VjjfLM0ozMCY/FXPL8tBttaGisRPDszlmRBQocSO4oqn3+N76w46OxEkxsOMmEZE3g3p8jwYf1+iesV93TQcT8aY62Eypw7Vt2O8cbQKAl7467PO54o4WQ84p2oakJ6EgLRE2u4ztJ5r7fK7YYbMoIwk6rQZL5o7G32+fjYK0RBypbcedb22BxWYP+zFXtzi6MvNSDWH/s4jihRJ23s9cKTFyt+CMEvxoaiH0Og12nmzGff/YgRfX+D7f9XSktg3tZhuMei1G5aYojxt0WozISY75awiiSCpyRmac7NEpVdPahR3O4u95p7HzkIhiE4tSFJQTja43q7Guv0Hnn+1ydEmNyU+BRgK+PlinjBn1JDrLYn3UkeKDEoLsZ2cu9+KzMK0kA6/dOAMmvRbrDtdj2Qe7/Y5YD4Qsy6hp7QIA5KYwc4YoUKIrcvepFnRZbEF9rtlqx6Zjjp8P154xFM/+eDK+ffAC/PT0oQCAdYfr+/p0D9tONAEAxg9JY84N0QAVOkdxGzssaOu2Ko+v2V8LAJhQmMZzJRHFLBalKCiucbTYL7JkOItSDe3BZUp9uqsSAHDD7FJcMqEAAPB///V+91j8exUy5JwGAdFB4S9XSozN9dxhc2xBKpb/ZAokCfjrhnKsWHcsLMcJAK3dVnRZHN1YueyUIgpYYXoSclMMsNplpYMiUDtPNqHTYkOmSY/Rzu6mTJMeN84uBeDIiLLZAytGiz97UjEz4YgGKiUxAWlJjtgM926pL/fVAADmjMmNynEREYUCi1IUlArnWI97B0WsEplSTUF0Sp1o6MCuky3QSMC8sjzcds4IAMBHOyq9btPr6pRiUYqiT3RQbClv7LPL6YTyOu/9fTu3LA8PXjwGAPD4x3uwZn9NGI4UqGlxdEmlJuqQmKANy59BFI8kSVJe64FsbODu2yMNAICZwzKhcetuGpmbDJNeiw6zTdmZ058dzpDziUXpQR0DEXnnCjt3XG+arXZ8fbAOAHA+i1JEFMNYlKKglGQZMbEoDSNyYj+gNN0Z1N7Qbg54DEmM7s0cloWsZAMmFKXhzJFZsNllvLb2mMdz1x2uw8HqNgDMlKLBoawgFQadBk0dFhypa/f5PKVTykfx+Zazh+OqaUWwy8Bdb2/FwQDfpAajxpknlZvKcQSiYPW3KCUCk88YnuXxuFYjKSHKW8ub/H6dbqsNeyodY+2TWJQiComeO/BtOtaAtm4rspP1mFjIjkQiil0sSlFQ7rtoDD5cfBbOOy3278iITKluqx2dAeZufOIc3bt4Qr7ymOiW+tvGcjR3OEYB//LtcVz/6gZ0W+2YUZqhjEEQRZNep1HeIPp6s2q12VHZ7OhS6jm+J0iShP/3wwk4vTQTrd1WPPnpvpAfa02rsyiVwtE9omBNcebHbfXTFenObLVj03FHp9SsEVm9Pj5laDoAYNsJ/4WufZWtsNhkZBgTvHZcElHwRHSG6ML/j3N077zTcj06G4mIYg2LUqRaRr0Wep3jJdDY4T9XqrK5E1vLmyBJwPxxrqLU2aOyMbYgFR1mG15fdxS/fn8Xfv3+LljtMr4/aQj+cvNMXizQoDGlJB2A7525Kpu7YLPL0Os0fRaE9DoNHv3BOACO3bpCvRtftXN8L4+dUkRBG1+YCr1Wg/p2M47X9x4t92ZHRRO6LHZkmvQYlZvc6+NTikWhq8nv19ruNrrHXfaIQkPkk4rxvf84x+c5ukdEsY5FKVItSZKQ4Rzha2z3nyv1uXN0b9rQDI83ypIk4bZzhgMAfv/FQfzl2+MAgHvnn4blP5nMPBwaVMQOfGJnrJ7EzntF6Ul+i6mn5aUg06RHh9mm5MeECjuliPrPoNNiQpFjnCfQET7X6F6m10LSZGen1MGaNjR39n0jZ/sJEXKeHuARE5E/7uN7x+racaS2HTqNhLNGZUf5yIiIBoZFKVK1DKPYgc9/UepTZ1HqovH5vT526cQC5Q6WUa/F/y2YhkVzRvIOMQ0644akAgAO1bSh29p7bNVfnpQ7jUbCGcMzAbje0IaKKErlsChF1C9TnUWkrQGM2wHAt0cdr+FZw3uP7gFAdrJBGcXzV4QWnVKTiphzQxQqYnyvorFTGd2bUZqJ1MSEaB4WEdGAsShFqiZypRr97MBX29qNDcccWRsXTyjo9fEErQbP/ngSLp88BO/dMRvzxvUuXBENBoXpSUhN1MFql3Gopq3Xx/vaec8b8QZ2/ZHQFqU4vkc0MKflOwrQx+r8j+91W21KR1XPkHN3gYzwtXZZcLjW8bOFO+8RhY7YNKeh3YyVOx0ZpxeM5egeEcU+FqVI1USnlNjJxJd/76mCLDvu+oqOqJ5mDs/C738yBWMLUkN+nEShIkkSxji/R/dW9t41T+mU8hFy3pMIRN50rNFr51V/1XJ8j2hAhjq7Hcsb/Beltp9oRpfFjuxkPUZ6yZMSRNj51nLf3Vc7TzZDlh0FcHY6EoVOWlICUhN1AFxjuXOYJ0VEcYBFKVI1cYH9v/85hH1VLT6f95kyute7S4oo1pQpRane3/MiUyqQ8T0AGJGTjJwUA7qt9oACkANV4+yUymWnFFG/iKLUyaZOWP1sRPCts9Nx5vCsPsfOp7hl0vna1W9HhciT4ugeUagVut0wKskyYni2KYpHQ0QUGixKkaotPHMYzh6VjU6LDbf+eTOavIzxfXekHuuceTkXe8mTIoo1YwtSAMBrIfaEs2sw0E4pSZKUcZ9Q5Uq1dVvRbnZ0XbFTiqh/clMM0Os0sNllVDZ39flcUZTqa3QPcBS09ToNGjssPnf12+G28x4RhZYIOweAOaflMruUiOICi1KkalqNhD/8ZAqKMpJQ3tCB//nbNtjsrru/f990Ate9+h1sdhnnjs5BKe9IURwY6za+597t0Gm2KWNzgWZKAcDsEaHNlRJdUskGHUwGXUi+JpHaaDQSip1vYPsa4XPPk5rl3LjAF71Oo2yW4CtAXey8N5Eh50Qh516UOp+je0QUJ1iUItXLMOnxpwXTkJigwVcHavHcqgOw22X89rN9uPcfO2Cxybh0QgH+tGBatA+VKCRG56VAIznCUsUudwBQ4cyTSjHokJYU+G4+Iux8a3kjOs0Dz5WqbmGeFFEoBJIrta28Cd1WO7KTDRiR4ztPSugr7Ly2tRsnmzohScCEQhaliEJN7MBn1Gsx008RmYgoVrAoRQRg3JA0/PaKiQCA//3yEK7603q8uOYwAOCu80fijz+dgsQEbTQPkShkEhO0GO5887nHLVdKhJwXZRqDGgkoyTKiIC0RFpusdFwMRE2ro1OKIclEAxNIUerbI46dZc8YnhnQ694Vdt7U62NidG9ETjJSuE09UcjNHJYJSQJ+MLkQBh2vS4koPrAoReT0g8mFuOnMYQAcu5rotRo8++NJ+Pm806DRcGaf4stYL2HnJxpEnlTgo3uAI1dKdEutP1I34GMTI4R5DDknGpDiAIpS4jXrL09KEEWpvZUt6LJ4dkZuFyHnzJMiCovxhWnY+Ku5eOwH46J9KEREIcOiFJGbBy8Zg4vH56M4Mwlv3TITP5paFO1DIgoLEXa+t7JVeSzYnffcnTEidGHn1WLnPXZKEQ2I6JQ64aMoZbHZscXZ8XRGgKNAhelJyEkxwGqXsetks8fHtp9wfC3uvEcUPtnJBiRo+RaOiOIHE2SJ3CRoNXjxummQZZk7mlBc89op5RzfC7ZTCnCFnW+vaEZbtxXJAwgoFzlXuaksShENhL9OqWN17TBb7TDptRie7T9PCnB0Rk4uTseqPdXYWt6E6aWOYlZDuxnbneN77JQiIiKiQLHMTuQFC1IU78qcRakjtW3KCI4yvtePTqmiDCOKM5Ngs8vYeKxhQMdW08LxPaJQEK/lpg4LWrosvT6+t8rRKTk6PyWoMXUlV8q5A9/nu6sw77mv0NRhQZZJjzHOTkwiIiIif1iUIiJSodwUAzJNethl4EC1442p0inVj6IU4NqF79sBjvBVM+icKCSSDTpkmfQAvI/w7a9ydEqOyQ+uiCR24Nt0rBFL39mG2/6yGXVtZozOS8YbN53OAGYiIiIKGItSREQqJEmSW65UC5o7LGjtsgIAivoxvgcAs0Su1JGBFaVqnZ1SuSnslCIaqOI+cqX2OzulTssLrig1sSgNGskxavvPrSehkYA7zhuBj+46C+MLmSdFREREgWNRiohIpcbmi1ypVqVLKjvZAKO+f3lQs4ZnAwB2nWxGc2fvUaFAdJitaO12FMfymClFNGBD+8iV2ieKUs6fBYEyGXQYN8RRfBqebcI/7piN+y8aww4pIiIiChqDzomIVEqEne+pbHHbea9/XVIAkJ+WiGHZJhyta8e3R+oxf1x+0F9D5EklJWgHFJZORA6+ilJt3VZUNDpy5IId3wOA/++qidh4tAFXTitGkp7FKCIiIuofdkoREanUGLfxPfGGtTijf3lSwrmjcwAAr359FLIsB/357jvvccMBooFzFaU6PR4Xo3u5KQZkOHOngjEmPxULZpWyIEVEREQDwqIUEZFKjcxNhk4jobXLig1HHTvmDaRTCgBuO3c4DDoNNhxrwH/21QT9+TXOkPM85kkRhYSvTClRlBpTENzoHhEREVEosShFRKRSBp0WI3OTAQBfH6oDMPBOqYK0JCw8cxgA4Lef7YPNHly3VLVzfC+HeVJEITE0y/Garmjs8Hg99nfnPSIiIqJQYlGKiEjFRK6U2WoH4OqqGIg7zh2BtKQEHKhuw3ubK4L6XNEplZvCohRRKOSnJiJBK8Fik1HV0qU8vq+fO+8RERERhRKLUkREKja2wPMN6UA7pQAgzZiAxXNGAgCeXXUAXRZbwJ9b6+yUykvl+B5RKGg1Eoqcr+vyescInyzL2F8tdt5jUYqIiIiih0UpIiIVG+uWJ6ORgIL00BSDFswqQWF6EqpauvD6N8cC/rxqdkoRhVzPXKma1m40dVig1UjKCC8RERFRNLAoRUSkYu5FqYK0JCRoQ3NaSEzQ4ufzRgMAXlhzCI3t5oA+r8bZKZXLoHOikCnOcGxgIHbZFKN7pVlGJCZw9zwiIiKKHhaliIhULDvZgBxnV9JAd97r6QeTCzEmPwWtXVa8sOZQQJ9T0yrG99gpRRQqQ52dUkpRqlKEnHPnPSIiIoouFqWIiFROdEuFIk/KnVYj4YGLxwAA3lh3HIdq2vp8fpfFhuZOCwB2ShGFUs+i1P4q5kkRERHR4MCiFBGRyp05IgsAMHloesi/9rmjc3Du6ByYbXYseWerssufN7XOLim9ToPUJF3Ij4VIrXpmSu1jUYqIiIgGCRaliIhU7mdnD8fqn5+La04fGvKvLUkSnr5yItKNCdh1sgXPfXHA53OrndvV56UaIElSyI+FSK2GZjmKUvXtZjR3WnCo1tG1OJbje0RERBRlLEoREamcViNhRE5y2ApBeamJeOpHEwAAL311GOsP13t9nsiT4ugeUWilJiYg3ZgAAPj6YC3MVjuMei2KMkKbI0dEREQULBaliIgo7C4aX4CrpxdDloGfv7sNzR2WXs+pcXZK5aYw5Jwo1ESu1Ko91QCA0Xkp0GjYkUhERETRxaIUERFFxLLLylCaZcSp5i786v2dkGXZ4+PVys577JQiCjWRK/WffTUAgDHMkyIiIqJBgEUpIiKKCJNBh9//ZAq0Ggkf76jEv7ae9Ph4TYujKJXDTimikBOdUq1dVgAMOSciIqLBgUUpIiKKmMnF6VhywSgAwMMf7EZlc6fysZpWju8RhYsoSgksShEREdFgwKIUERFF1J1zRmJycTpau6146F+7lDE+0SnF8T2i0OtZlBrDnfeIiIhoEGBRioiIIkqrkfD/XTkReq0Gq/fV4INtpwC4dUqlslOKKNTci1I5KQZkmvRRPBoiIiIiBxaliIgo4kblpeB/5jrG+B75aDdONXWi0bkjX24KO6WIQq0gLRFa5257DDknIiKiwYJFKSIiiopbzxmOcUNS0dRhweK3twAAErQSMowJUT4yovij02owJN1R8GVRioiIiAYLFqWIiCgqErQaPH3lROg0EraUNwFwdElJkhTdAyOKUyNzkgEA4wvTonwkRERERA4sShERUdSMG5KGO88bofx/DnfeIwqbZZeNw6PfH4dLJhRE+1CIiIiIALAoRUREUbbo/JEYnefo4MhlUYoobIZlm3DD7FIkaHn5R0RERIMDr0qIiCiqDDot/vDTKZg1PAvXnVES7cMhIiIiIqII0UX7AIiIiMbkp+Kvt54R7cMgIiIiIqIIYqcUERERERERERFFHItSREREREREREQUcSxKERERERERERFRxLEoRUREREREREREEceiVJCef/55lJaWIjExETNnzsSGDRuifUhERERERERERDGHRakgvPPOO1i6dCkefvhhbNmyBZMmTcL8+fNRU1MT7UMjIiIiIiIiIoopLEoF4dlnn8Utt9yChQsXoqysDC+99BKMRiNee+21aB8aEREREREREVFMYVEqQGazGZs3b8bcuXOVxzQaDebOnYv169d7/Zzu7m60tLR4/CIiIiIiIiIiIhalAlZXVwebzYa8vDyPx/Py8lBVVeX1c5588kmkpaUpv4qLiyNxqEREREREREREgx6LUmH04IMPorm5Wfl14sSJaB8SEREREREREdGgoIv2AcSK7OxsaLVaVFdXezxeXV2N/Px8r59jMBhgMBgicXhERERERERERDGFnVIB0uv1mDZtGlavXq08ZrfbsXr1asyaNSuKR0ZEREREREREFHvYKRWEpUuX4oYbbsD06dNx+umn4/e//z3a29uxcOHCaB8aEREREREREVFMYVEqCFdffTVqa2uxbNkyVFVVYfLkyfjss896hZ8TEREREREREVHfJFmW5WgfhFq0tLQgLS0Nzc3NSE1NjfbhEBERERERERGFXKD1D2ZKERERERERERFRxLEoRUREREREREREEceiFBERERERERERRRyDziNIxHe1tLRE+UiIiIiIiIiIiMJD1D38xZizKBVBra2tAIDi4uIoHwkRERERERERUXi1trYiLS3N58e5+14E2e12nDp1CikpKZAkKdqH0y8tLS0oLi7GiRMnuINgnONaqw/XXB24zurDNVcHrrO6cL3Vg2utLvG03rIso7W1FUOGDIFG4zs5ip1SEaTRaFBUVBTtwwiJ1NTUmH+RUGC41urDNVcHrrP6cM3VgeusLlxv9eBaq0u8rHdfHVICg86JiIiIiIiIiCjiWJQiIiIiIiIiIqKIY1GKgmIwGPDwww/DYDBE+1AozLjW6sM1Vweus/pwzdWB66wuXG/14FqrixrXm0HnREREREREREQUceyUIiIiIiIiIiKiiGNRioiIiIiIiIiIIo5FKSIiIiIiIiIiijgWpYiIiIiIiIiIKOJYlCKisLDb7dE+BCIKg+7u7mgfAhGFAc/bRPGHr2uKBSxKUUTxB6M67Nu3D8uXL4/2YVAEcSNXddi/fz+WLVsGq9Ua7UOhCOF5Wx143lYfvrbjH1/X6hSLr21J5jsJioDm5makpaUBcLxQNBrWQ+PVzp07MWPGDJjNZqxfvx4zZ86M9iFRGDU0NCAzMxOAozAlSVKUj4jCZceOHZg5cya6u7vxySef4KKLLor2IVEY8bytHjxvqwtf2+rA17X6xPJrO3aOlGLWnj17UFJSgieeeAIAoNFoYrKCS/5t374dp59+Oq6++mqce+65+PjjjwHEZsWe/NuzZw/y8vKwZMkSAIAkSeyYilPbt2/HGWecgZtuuglXXXUV3n77bXR2dnK94xTP2+rB87a68LWtDnxdq0+sv7ZZlKKwqqiowHXXXYe8vDw888wzeOqppwDE3guF/Nu6dSvOPvts/PznP8cbb7yBGTNm4E9/+hOam5uh0Wj45jXOnDp1CgsXLsTEiRPxyiuv4J577gHAwlQ82rJlC84++2wsXboUzz//PGbOnImPPvoIVVVVXO84xPO2evC8rS58basDX9fqEw+vbRalKGzsdjvee+89DBs2DC+99BLuu+8+PPnkkzH5QqG+1dTU4Mwzz8Rtt92G3/zmNwCAu+66C5mZmcosO8e64ocsy/jyyy9RUlKCP/7xj3j55Zfx4osvYunSpQBYmIonTU1NOOuss3Drrbcqr+1FixZh+PDhePzxxzmyGWd43lYPnrfVha9tdeDrWn3i5bWti/YBUPzSaDS45JJLkJubizlz5mDy5MmQZRlPPvkkAOCBBx5QXiixNPNKvSUkJOCzzz7DOeecozyWl5eHKVOm4N///jeWLVsGgJlD8UKSJJx99tlISUnB7NmzMXv2bMiyjJtuugmyLOO5555TClNc79iWnp6OdevWYfLkyQAcr2GdTod58+Zh5cqVqK+vR3Z2Ntc6TvC8rR48b6sLX9vqwNe1+sTNa1smCjO73a78vra2Vn7qqafk1NRU+cknn5RlWZatVqv84YcfyrW1tdE6RAoxm80my7Is79q1SzYYDPKrr74a5SOicHB/bVutVvntt9+WDQaDfM8998iyLMsWi0V+88035Z07d0brEClExFqL/546dUo2mUzyE088Ec3DojDheVt9eN5WB7621YWva/WI9dc2O6UopE6dOoWTJ0+ivr4ec+fOhUajgUajgdVqhU6nQ3Z2Nm666SYAwBNPPAFZllFfX4/ly5ejvLw8ykdPwfC11qISL8syhg0bhu9973v49NNPcc0118BgMPDOTIw6ceIE9u7di9raWlx44YVIT0+HXq9XXttarRZXXXUVAGDhwoUAAJvNhhdffBGHDh2K5qFTkHyttc1mg1arhc1mQ0FBAW699VasXLkS1113HYqLi6N92NRPPG+rB8/b6sLXtjrwda0+cfnajmJBjOLM9u3b5eLiYrmsrEzW6XTylClT5BdffFFubW2VZdlRoRVqa2vlJ598UpYkSc7IyJA3btwYrcOmfvC31uLOjCzL8ltvvSUbDAZ5w4YN0TpcGqDt27fLeXl58tSpU2W9Xi+PGzdOvvfee+XGxkZZlj1f21arVf7LX/7C13aMCmatP/30UzklJUX+6KOPonS0NFA8b6sHz9vqwte2OvB1rT7x+toexIOFFEvq6urwk5/8BNdccw1WrlyJU6dOYcyY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wAMPyDNmzJBra2sjeag0AFxn9fG35o888ogsSZI8bNgwefPmzbIsO36uv/DCC/Lhw4ejddhhx6IUybIsy4cOHZKLiork++67T25qapI3bdok33DDDfJNN90kd3V1Kc979NFH5bPPPluWJEmeNm2anJ+fL2/ZsiWKR07B4lqrS1/rbbVaPS527Ha7bLVa5bvvvlvOyMiQd+3aFcUjp2BxrdUlmPVubW2Vp0yZIp933nlyYmKivGnTpigeOQWLa60uway3LMvy8ePH5XvvvVfOyMiQt2/fHqWjpmBxndWnrzW3WCyyLMuyxWKR77zzTnnDhg2yLLuKku43FOMRi1Ikd3d3y0uXLpV//OMfy93d3crjr776qpyVldWrM6aurk7+9NNP5bVr18onTpyI9OHSAHCt1SXY9ZZlWd6wYYMsSRLvrMcYrrW6BLveTU1NcklJiZyZmSlv27Yt0odLA8C1Vpdg13vjxo3ynXfeKU+aNInrHUO4zurTn+s0NWGmFMFut6OoqAhjx46FXq+HLMuQJAmzZ89GcnKysv2kmGXOysrCRRddFOWjpv7gWqtLoOvtbsaMGWhoaEB6enrkD5j6jWutLsGud1paGm655RZcccUVGDNmTJSOmvqDa60uwa739OnT0dnZiYceeggFBQVROmoKFtdZffpznSbej6kBi1KExMREXH755Rg2bJjH4+np6UhISFBeJBqNBlu3bsWUKVOicZgUAlxrdQl0vQF4rHdaWlpEj5MGjmutLsGs96ZNmzB9+nT86le/ivRhUghwrdUlmPXevHkzpk2bhrPPPjvSh0kDxHVWn/5cp6mlIAUA6vmbkofKykps2LABn332Gex2u/ICsdlsyo4tzc3NaGxsVD5n2bJluOCCC1BfX69sPUyDH9daXUKx3tw2PDZwrdWlv+s9b948/iyPMVxrdenvel944YVc7xjCdVYfvgcLQqTnBSn6tm/fLpeUlMijR4+W09LS5DFjxshvv/22XF9fL8uyK1Bt//79ck5OjtzQ0CA//vjjclJSEgMzYwzXWl243urBtVYXrrd6cK3VheutDlxn9eGaB4dFKZWpqamRx4wZI//yl7+UDx8+LJ88eVK++uqr5bFjx8oPP/ywXFNTozy3urpanjJlinz11VfLer1elS+QWMa1Vheut3pwrdWF660eXGt14XqrA9dZfbjmwWNRSmV2794tl5aW9vqGv//+++UJEybITz/9tNze3i7Lsizv2bNHliRJTkpKkrdu3RqFo6WB4FqrC9dbPbjW6sL1Vg+utbpwvdWB66w+XPPgMVNKZSwWC6xWKzo6OgAAnZ2dAICnnnoKc+bMwYsvvohDhw4BADIyMnDnnXdiy5YtmDx5crQOmfqJa60uXG/14FqrC9dbPbjW6sL1Vgeus/pwzYMnybKaErQIAE4//XQkJyfjP//5DwCgu7sbBoMBgGOL8JEjR+Kvf/0rAKCrqwuJiYlRO1YaGK61unC91YNrrS5cb/XgWqsL11sduM7qwzUPDjul4lx7eztaW1vR0tKiPPanP/0Ju3fvxjXXXAMAMBgMsFqtAIBzzjkH7e3tynPV/gKJJVxrdeF6qwfXWl243urBtVYXrrc6cJ3Vh2s+cCxKxbE9e/bgRz/6Ec4991yMHTsWb731FgBg7NixWL58OVatWoWrrroKFosFGo3jW6GmpgYmkwlWq1Vd21DGOK61unC91YNrrS5cb/XgWqsL11sduM7qwzUPDV20D4DCY8+ePTjnnHNw/fXXY/r06di8eTMWLlyIsrIyTJkyBd///vdhMplw5513YuLEiRgzZgz0ej1WrlyJb7/9FjodvzViBddaXbje6sG1Vheut3pwrdWF660OXGf14ZqHDjOl4lBDQwN++tOfYsyYMVi+fLny+Jw5czBhwgT84Q9/UB5rbW3Fb37zGzQ0NCAxMRF33HEHysrKonHY1A9ca3XheqsH11pduN7qwbVWF663OnCd1YdrHlosz8Uhi8WCpqYmXHnllQAAu90OjUaDYcOGoaGhAQAgyzJkWUZKSgp++9vfejyPYgfXWl243urBtVYXrrd6cK3VheutDlxn9eGahxb/ReJQXl4e3nzzTZx99tkAAJvNBgAoLCxUXgSSJEGj0XgEskmSFPmDpQHhWqsL11s9uNbqwvVWD661unC91YHrrD5c89BiUSpOjRo1CoCjGpuQkADAUa2tqalRnvPkk0/ilVdeUXYC4IskNnGt1YXrrR5ca3XheqsH11pduN7qwHVWH6556HB8L85pNBrIsqy8AETldtmyZfjNb36DrVu3MmQtTnCt1YXrrR5ca3XheqsH11pduN7qwHVWH675wLFTSgVElr1Op0NxcTF+97vf4emnn8amTZswadKkKB8dhRLXWl243urBtVYXrrd6cK3VheutDlxn9eGaDwxLdiogqrUJCQl4+eWXkZqairVr12Lq1KlRPjIKNa61unC91YNrrS5cb/XgWqsL11sduM7qwzUfGHZKqcj8+fMBAOvWrcP06dOjfDQUTlxrdeF6qwfXWl243urBtVYXrrc6cJ3Vh2veP5Ises1IFdrb22EymaJ9GBQBXGt14XqrB9daXbje6sG1VheutzpwndWHax48FqWIiIiIiIiIiCjiOL5HREREREREREQRx6IUERERERERERFFHItSREREREREREQUcSxKERERERERERFRxLEoRUREREREREREEceiFBERERERERERRRyLUkRERERON954Iy6//PKo/fkLFizAE088EbU/f7A777zzsGTJEp8fN5vNKC0txaZNmyJ3UERERNRvLEoRERGRKkiS1OevRx55BMuXL8eKFSuicnzbt2/HJ598grvvvhvd3d0YN24cbr311l7Pu++++zBs2DC0trZG5LhWrFgBSZIwduzYXh/7+9//DkmSUFpaGtI/c82aNZAkCU1NTUF9nl6vxy9+8Qvcf//9IT0eIiIiCg8WpYiIiEgVKisrlV+///3vkZqa6vHYL37xC6SlpSE9PT0qx/fHP/4RV111FZKTk2EwGPDnP/8ZK1aswOeff64859tvv8Vzzz2HFStWICUlJaR/vizLsFqtXj9mMplQU1OD9evXezz+6quvYujQoSE9joG69tprsXbtWuzevTvah0JERER+sChFREREqpCfn6/8SktLgyRJHo8lJyf3Gt8777zzcNddd2HJkiXIyMhAXl4eXn75ZbS3t2PhwoVISUnByJEj8emnn3r8Wbt27cLFF1+M5ORk5OXlYcGCBairq/N5bDabDf/4xz9w2WWXKY9NmzYNv/rVr3DzzTejqakJXV1dWLhwIe666y6ce+65WLt2Lc4++2wkJSWhuLgYd999N9rb25XP/8tf/oLp06cjJSUF+fn5uOaaa1BTU6N8XHQjffrpp5g2bRoMBgPWrl3r9fh0Oh2uueYavPbaa8pjFRUVWLNmDa655ppez3/xxRcxYsQI6PV6nHbaafjLX/7i8XFJkvDKK6/ghz/8IYxGI0aNGoUPP/wQAHDs2DHMmTMHAJCRkQFJknDjjTcqn2u323HfffchMzMT+fn5eOSRRzy+dkZGBs4880z87W9/8/nvTURERIMDi1JEREREfXjjjTeQnZ2NDRs24K677sIdd9yBq666CrNnz8aWLVswb948LFiwAB0dHQCApqYmnH/++ZgyZQo2bdqEzz77DNXV1fjxj3/s88/YsWMHmpubMX36dI/Hf/WrXyE/Px933303HnroIUiShCeeeAKHDx/GRRddhCuuuAI7duzAO++8g7Vr12Lx4sXK51osFjz++OPYvn073n//fRw7dsyjuCM88MADeOqpp7B3715MnDjR5zHedNNNePfdd5W/54oVK3DRRRchLy/P43n/+te/8D//8z/4+c9/jl27duG2227DwoUL8eWXX3o879FHH8WPf/xj7NixA5dccgmuvfZaNDQ0oLi4GO+99x4AYP/+/aisrMTy5cs91sNkMuG7777D008/jcceewyrVq3y+Nqnn346vv76a59/FyIiIhokZCIiIiKVef311+W0tLRej99www3yD37wA+X/zz33XPmss85S/t9qtcomk0lesGCB8lhlZaUMQF6/fr0sy7L8+OOPy/PmzfP4uidOnJAByPv37/d6PP/6179krVYr2+32Xh/bvXu3nJiYKOv1ennjxo2yLMvyzTffLN96660ez/v6669ljUYjd3Z2ev0zNm7cKAOQW1tbZVmW5S+//FIGIL///vteny+4/1tNnjxZfuONN2S73S6PGDFC/uCDD+TnnntOLikpUZ4/e/Zs+ZZbbvH4GldddZV8ySWXKP8PQH7ooYeU/29ra5MByJ9++qnHsTU2Nnp8nZ7rIcuyPGPGDPn+++/3eGz58uVyaWlpn38vIiIiij52ShERERH1wb17SKvVIisrCxMmTFAeE51CYjRu+/bt+PLLL5GcnKz8GjNmDADg8OHDXv+Mzs5OGAwGSJLU62NlZWW44oorcOGFFyqdVNu3b8eKFSs8/oz58+fDbrfj6NGjAIDNmzfjsssuw9ChQ5GSkoJzzz0XAFBeXu7x9d27s9y/3u23397rWG666Sa8/vrr+Oqrr9De3o5LLrmk13P27t2LM8880+OxM888E3v37vV4zP3f1WQyITU11WO80Jee3VwFBQW9Pi8pKUnp6CIiIqLBSxftAyAiIiIazBISEjz+X5Ikj8dEIclutwMA2tracNlll+G3v/1tr69VUFDg9c/Izs5GR0cHzGYz9Hp9r4/rdDrodK7Ltra2Ntx22224++67ez136NChaG9vx/z58zF//ny89dZbyMnJQXl5OebPnw+z2ezxfJPJpPx+27Ztyu9TU1N7fe1rr70W9913Hx555BEsWLDA45iC5e3fVfwbDvTzGhoakJOT0+9jIyIioshgUYqIiIgohKZOnYr33nsPpaWlARdtJk+eDADYs2eP8nt/f8aePXswcuRIrx/fuXMn6uvr8dRTT6G4uBgAsGnTJr9f19fXEzIzM/H9738f7777Ll566SWvzxk7diy++eYb3HDDDcpj33zzDcrKyvz++YIozNlstoA/x92uXbswZcqUfn0uERERRQ7H94iIiIhCaNGiRWhoaMBPf/pTbNy4EYcPH8bnn3+OhQsX+iyy5OTkYOrUqT53v+vp/vvvx7p167B48WJs27YNBw8exAcffKAEnQ8dOhR6vR5//OMfceTIEXz44Yd4/PHHQ/L3W7FiBerq6pSRxJ7uvfderFixAi+++CIOHjyIZ599Fv/85z/xi1/8IuA/o6SkBJIk4eOPP0ZtbS3a2tqCOsavv/4a8+bNC+pziIiIKPJYlCIiIiIKoSFDhuCbb76BzWbDvHnzMGHCBCxZsgTp6enQaHxfev3sZz/DW2+9FdCfMXHiRHz11Vc4cOAAzj77bEyZMgXLli3DkCFDADiKXCtWrMDf//53lJWV4amnnsLvfve7kPz9kpKSkJWV5fPjl19+OZYvX47f/e53GDduHP70pz/h9ddfx3nnnRfwn1FYWIhHH30UDzzwAPLy8jx2FfRn/fr1aG5uxpVXXhnw5xAREVF0SLIsy9E+CCIiIiK16+zsxGmnnYZ33nkHs2bNivbhxKyrr74akyZNwi9/+ctoHwoRERH5wU4pIiIiokEgKSkJf/7zn1FXVxftQ4lZZrMZEyZMwD333BPtQyEiIqIAsFOKiIiIiIiIiIgijp1SREREREREREQUcSxKERERERERERFRxLEoRUREREREREREEceiFBERERERERERRRyLUkREREREREREFHEsShERERERERERUcSxKEVERERERERERBHHohQREREREREREUUci1JERERERERERBRxLEoREREREREREVHE/f+VV/hLxZrv0QAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"code","source":["train = rides_by_month[rides_by_month[\"year\"]<2023]\n","val = rides_by_month[rides_by_month[\"year\"]==2023]"],"metadata":{"id":"JBFE91FC4tT-","executionInfo":{"status":"ok","timestamp":1745780479776,"user_tz":300,"elapsed":3,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}}},"execution_count":8,"outputs":[]},{"cell_type":"markdown","source":["# SARIMA"],"metadata":{"id":"fMkHqlIX191t"}},{"cell_type":"code","source":["import itertools\n","import statsmodels.api as sm\n","\n","# Define parameter ranges (similar to your AutoARIMA grid)\n","p = d = q = range(0, 3)   # (p,d,q) from 0 to 2\n","P = D = Q = range(0, 2)   # (P,D,Q) from 0 to 1\n","s = 52                   # seasonal period (12 months)\n","\n","# Generate all combinations\n","pdq = list(itertools.product(p, d, q))\n","seasonal_pdq = list(itertools.product(P, D, Q, [s]))\n","\n","# To store the best model\n","best_aic = float(\"inf\")\n","best_params = None\n","best_model = None\n","\n","# Grid Search\n","for param in pdq:\n","    for param_seasonal in seasonal_pdq:\n","        try:\n","            mod = sm.tsa.SARIMAX(\n","                train['total_rides'],\n","                order=param,\n","                seasonal_order=param_seasonal,\n","                enforce_stationarity=False,\n","                enforce_invertibility=False\n","            )\n","            results = mod.fit(disp=False)\n","\n","            # Print every model tried\n","            print(f'Tested SARIMAX{param}x{param_seasonal} - AIC:{results.aic}')\n","\n","            if results.aic < best_aic:\n","                best_aic = results.aic\n","                best_params = (param, param_seasonal)\n","                best_model = results\n","\n","        except Exception as e:\n","            print(f'SARIMAX{param}x{param_seasonal} failed. Reason: {e}')\n","            continue\n","\n","# Best model\n","print(f'\\nBest model: SARIMAX{best_params[0]}x{best_params[1]} - AIC:{best_aic}')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BFCfzC_b44ql","executionInfo":{"status":"ok","timestamp":1745777912002,"user_tz":300,"elapsed":841684,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"d57ec9f8-3d55-4781-d043-e0ef96fdf650"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Tested SARIMAX(0, 0, 0)x(0, 0, 0, 52) - AIC:4038.6066680532476\n","Tested SARIMAX(0, 0, 0)x(0, 0, 1, 52) - AIC:4308.611703808872\n","Tested SARIMAX(0, 0, 0)x(0, 1, 0, 52) - AIC:2457.689635791672\n","Tested SARIMAX(0, 0, 0)x(0, 1, 1, 52) - AIC:1195.457764621406\n","Tested SARIMAX(0, 0, 0)x(1, 0, 0, 52) - AIC:2474.034069506675\n","Tested SARIMAX(0, 0, 0)x(1, 0, 1, 52) - AIC:4076.9149354399224\n","Tested SARIMAX(0, 0, 0)x(1, 1, 0, 52) - AIC:1186.7302180167549\n","Tested SARIMAX(0, 0, 0)x(1, 1, 1, 52) - AIC:1197.427605132578\n","Tested SARIMAX(0, 0, 1)x(0, 0, 0, 52) - AIC:3910.8227350966213\n","Tested SARIMAX(0, 0, 1)x(0, 0, 1, 52) - AIC:317382.87273964606\n","Tested SARIMAX(0, 0, 1)x(0, 1, 0, 52) - AIC:2395.0133131578577\n","Tested SARIMAX(0, 0, 1)x(0, 1, 1, 52) - AIC:1176.9935336359804\n","Tested SARIMAX(0, 0, 1)x(1, 0, 0, 52) - AIC:2631.958442763837\n","Tested SARIMAX(0, 0, 1)x(1, 0, 1, 52) - AIC:317108.6651667347\n","Tested SARIMAX(0, 0, 1)x(1, 1, 0, 52) - AIC:1222.1725053783214\n","Tested SARIMAX(0, 0, 1)x(1, 1, 1, 52) - AIC:1178.9114877274426\n","Tested SARIMAX(0, 0, 2)x(0, 0, 0, 52) - AIC:3864.681914947274\n","Tested SARIMAX(0, 0, 2)x(0, 0, 1, 52) - AIC:317048.210281149\n","Tested SARIMAX(0, 0, 2)x(0, 1, 0, 52) - AIC:2357.433309840131\n","Tested SARIMAX(0, 0, 2)x(0, 1, 1, 52) - AIC:1153.5559181042115\n","Tested SARIMAX(0, 0, 2)x(1, 0, 0, 52) - AIC:2633.1876010768474\n","Tested SARIMAX(0, 0, 2)x(1, 0, 1, 52) - AIC:317235.1412937124\n","Tested SARIMAX(0, 0, 2)x(1, 1, 0, 52) - AIC:1220.7930931266997\n","Tested SARIMAX(0, 0, 2)x(1, 1, 1, 52) - AIC:1155.4027988672467\n","Tested SARIMAX(0, 1, 0)x(0, 0, 0, 52) - AIC:3488.8297146855284\n","Tested SARIMAX(0, 1, 0)x(0, 0, 1, 52) - AIC:4295.526409998094\n","Tested SARIMAX(0, 1, 0)x(0, 1, 0, 52) - AIC:2363.1795245726553\n","Tested SARIMAX(0, 1, 0)x(0, 1, 1, 52) - AIC:1165.7377769578693\n","Tested SARIMAX(0, 1, 0)x(1, 0, 0, 52) - AIC:2341.7513005306264\n","Tested SARIMAX(0, 1, 0)x(1, 0, 1, 52) - AIC:2321.8295112311334\n","Tested SARIMAX(0, 1, 0)x(1, 1, 0, 52) - AIC:1193.3224960437515\n","Tested SARIMAX(0, 1, 0)x(1, 1, 1, 52) - AIC:1167.5514617073466\n","Tested SARIMAX(0, 1, 1)x(0, 0, 0, 52) - AIC:3458.6869360596434\n","Tested SARIMAX(0, 1, 1)x(0, 0, 1, 52) - AIC:15929.652907174444\n","Tested SARIMAX(0, 1, 1)x(0, 1, 0, 52) - AIC:2319.5053726302303\n","Tested SARIMAX(0, 1, 1)x(0, 1, 1, 52) - AIC:1130.2439278835554\n","Tested SARIMAX(0, 1, 1)x(1, 0, 0, 52) - AIC:2332.0556105466285\n","Tested SARIMAX(0, 1, 1)x(1, 0, 1, 52) - AIC:2289.971699978055\n","Tested SARIMAX(0, 1, 1)x(1, 1, 0, 52) - AIC:1179.9163483295054\n","Tested SARIMAX(0, 1, 1)x(1, 1, 1, 52) - AIC:1132.2422105889837\n","Tested SARIMAX(0, 1, 2)x(0, 0, 0, 52) - AIC:3435.3941405662354\n","Tested SARIMAX(0, 1, 2)x(0, 0, 1, 52) - AIC:20040.227708065766\n","Tested SARIMAX(0, 1, 2)x(0, 1, 0, 52) - AIC:2299.985568061568\n","Tested SARIMAX(0, 1, 2)x(0, 1, 1, 52) - AIC:1110.984670612942\n","Tested SARIMAX(0, 1, 2)x(1, 0, 0, 52) - AIC:2333.2667887966977\n","Tested SARIMAX(0, 1, 2)x(1, 0, 1, 52) - AIC:2269.8133557255783\n","Tested SARIMAX(0, 1, 2)x(1, 1, 0, 52) - AIC:1182.1417401591439\n","Tested SARIMAX(0, 1, 2)x(1, 1, 1, 52) - AIC:1112.9846598572367\n","Tested SARIMAX(0, 2, 0)x(0, 0, 0, 52) - AIC:3612.5792330892323\n","Tested SARIMAX(0, 2, 0)x(0, 0, 1, 52) - AIC:2398.7234518738046\n","Tested SARIMAX(0, 2, 0)x(0, 1, 0, 52) - AIC:2452.821142407452\n","Tested SARIMAX(0, 2, 0)x(0, 1, 1, 52) - AIC:1196.5379976657548\n","Tested SARIMAX(0, 2, 0)x(1, 0, 0, 52) - AIC:2420.878856365257\n","Tested SARIMAX(0, 2, 0)x(1, 0, 1, 52) - AIC:2400.4867836689714\n","Tested SARIMAX(0, 2, 0)x(1, 1, 0, 52) - AIC:1227.8147722397011\n","Tested SARIMAX(0, 2, 0)x(1, 1, 1, 52) - AIC:1197.8126420172027\n","Tested SARIMAX(0, 2, 1)x(0, 0, 0, 52) - AIC:3455.7983878890027\n","Tested SARIMAX(0, 2, 1)x(0, 0, 1, 52) - AIC:2284.7681061025974\n","Tested SARIMAX(0, 2, 1)x(0, 1, 0, 52) - AIC:2326.7823752495706\n","Tested SARIMAX(0, 2, 1)x(0, 1, 1, 52) - AIC:1131.4340111913773\n","Tested SARIMAX(0, 2, 1)x(1, 0, 0, 52) - AIC:2326.435922049326\n","Tested SARIMAX(0, 2, 1)x(1, 0, 1, 52) - AIC:2284.6867419679907\n","Tested SARIMAX(0, 2, 1)x(1, 1, 0, 52) - AIC:1180.5194438680662\n","Tested SARIMAX(0, 2, 1)x(1, 1, 1, 52) - AIC:1133.1803385660858\n","Tested SARIMAX(0, 2, 2)x(0, 0, 0, 52) - AIC:3407.2174292250497\n","Tested SARIMAX(0, 2, 2)x(0, 0, 1, 52) - AIC:2249.934429885573\n","Tested SARIMAX(0, 2, 2)x(0, 1, 0, 52) - AIC:2291.258349615927\n","Tested SARIMAX(0, 2, 2)x(0, 1, 1, 52) - AIC:1099.8581712567704\n","Tested SARIMAX(0, 2, 2)x(1, 0, 0, 52) - AIC:2314.048062417735\n","Tested SARIMAX(0, 2, 2)x(1, 0, 1, 52) - AIC:2248.250943011284\n","Tested SARIMAX(0, 2, 2)x(1, 1, 0, 52) - AIC:1168.0982900338468\n","Tested SARIMAX(0, 2, 2)x(1, 1, 1, 52) - AIC:1100.8307408361995\n","Tested SARIMAX(1, 0, 0)x(0, 0, 0, 52) - AIC:3511.4998978503245\n","Tested SARIMAX(1, 0, 0)x(0, 0, 1, 52) - AIC:23727.884653441535\n","Tested SARIMAX(1, 0, 0)x(0, 1, 0, 52) - AIC:2371.393928657974\n","Tested SARIMAX(1, 0, 0)x(0, 1, 1, 52) - AIC:1175.724898673395\n","Tested SARIMAX(1, 0, 0)x(1, 0, 0, 52) - AIC:2342.85117917494\n","Tested SARIMAX(1, 0, 0)x(1, 0, 1, 52) - AIC:4435.841266782386\n","Tested SARIMAX(1, 0, 0)x(1, 1, 0, 52) - AIC:1175.7998891625919\n","Tested SARIMAX(1, 0, 0)x(1, 1, 1, 52) - AIC:1177.6346960420742\n","Tested SARIMAX(1, 0, 1)x(0, 0, 0, 52) - AIC:3481.19431756611\n","Tested SARIMAX(1, 0, 1)x(0, 0, 1, 52) - AIC:17702.5694435921\n","Tested SARIMAX(1, 0, 1)x(0, 1, 0, 52) - AIC:2339.4957627344147\n","Tested SARIMAX(1, 0, 1)x(0, 1, 1, 52) - AIC:1152.9976914796268\n","Tested SARIMAX(1, 0, 1)x(1, 0, 0, 52) - AIC:2333.3707012335976\n","Tested SARIMAX(1, 0, 1)x(1, 0, 1, 52) - AIC:15109.389469931055\n","Tested SARIMAX(1, 0, 1)x(1, 1, 0, 52) - AIC:1175.7817329923791\n","Tested SARIMAX(1, 0, 1)x(1, 1, 1, 52) - AIC:1154.6371995326933\n","Tested SARIMAX(1, 0, 2)x(0, 0, 0, 52) - AIC:3458.0379368462304\n","Tested SARIMAX(1, 0, 2)x(0, 0, 1, 52) - AIC:18892.121606869812\n","Tested SARIMAX(1, 0, 2)x(0, 1, 0, 52) - AIC:2319.920959659285\n","Tested SARIMAX(1, 0, 2)x(0, 1, 1, 52) - AIC:1131.7332454899479\n","Tested SARIMAX(1, 0, 2)x(1, 0, 0, 52) - AIC:2334.6241943784585\n","Tested SARIMAX(1, 0, 2)x(1, 0, 1, 52) - AIC:19460.177279350566\n","Tested SARIMAX(1, 0, 2)x(1, 1, 0, 52) - AIC:1177.484398743067\n","Tested SARIMAX(1, 0, 2)x(1, 1, 1, 52) - AIC:1135.0690745361744\n","Tested SARIMAX(1, 1, 0)x(0, 0, 0, 52) - AIC:3478.4535612793056\n","Tested SARIMAX(1, 1, 0)x(0, 0, 1, 52) - AIC:22725.05077234367\n","Tested SARIMAX(1, 1, 0)x(0, 1, 0, 52) - AIC:2345.555812073506\n","Tested SARIMAX(1, 1, 0)x(0, 1, 1, 52) - AIC:1156.8326539812401\n","Tested SARIMAX(1, 1, 0)x(1, 0, 0, 52) - AIC:2310.603077392093\n","Tested SARIMAX(1, 1, 0)x(1, 0, 1, 52) - AIC:2310.96995433832\n","Tested SARIMAX(1, 1, 0)x(1, 1, 0, 52) - AIC:1159.5346344193244\n","Tested SARIMAX(1, 1, 0)x(1, 1, 1, 52) - AIC:1158.8167439300796\n","Tested SARIMAX(1, 1, 1)x(0, 0, 0, 52) - AIC:3459.1630339000903\n","Tested SARIMAX(1, 1, 1)x(0, 0, 1, 52) - AIC:22182.82843885839\n","Tested SARIMAX(1, 1, 1)x(0, 1, 0, 52) - AIC:2321.4511281190244\n","Tested SARIMAX(1, 1, 1)x(0, 1, 1, 52) - AIC:1132.1835094665562\n","Tested SARIMAX(1, 1, 1)x(1, 0, 0, 52) - AIC:2312.182199658597\n","Tested SARIMAX(1, 1, 1)x(1, 0, 1, 52) - AIC:2291.273529493971\n","Tested SARIMAX(1, 1, 1)x(1, 1, 0, 52) - AIC:1156.0630999799746\n","Tested SARIMAX(1, 1, 1)x(1, 1, 1, 52) - AIC:1134.183207387102\n","Tested SARIMAX(1, 1, 2)x(0, 0, 0, 52) - AIC:3422.524402241419\n","Tested SARIMAX(1, 1, 2)x(0, 0, 1, 52) - AIC:19200.616898757537\n","Tested SARIMAX(1, 1, 2)x(0, 1, 0, 52) - AIC:2299.1542158732286\n","Tested SARIMAX(1, 1, 2)x(0, 1, 1, 52) - AIC:1111.4456162928577\n","Tested SARIMAX(1, 1, 2)x(1, 0, 0, 52) - AIC:2310.2832873525795\n","Tested SARIMAX(1, 1, 2)x(1, 0, 1, 52) - AIC:2265.6536428942895\n","Tested SARIMAX(1, 1, 2)x(1, 1, 0, 52) - AIC:1158.3568253864082\n","Tested SARIMAX(1, 1, 2)x(1, 1, 1, 52) - AIC:1112.4888667909395\n","Tested SARIMAX(1, 2, 0)x(0, 0, 0, 52) - AIC:3535.709874567023\n","Tested SARIMAX(1, 2, 0)x(0, 0, 1, 52) - AIC:2348.655288818233\n","Tested SARIMAX(1, 2, 0)x(0, 1, 0, 52) - AIC:2390.0228907271057\n","Tested SARIMAX(1, 2, 0)x(0, 1, 1, 52) - AIC:1171.6110951332637\n","Tested SARIMAX(1, 2, 0)x(1, 0, 0, 52) - AIC:2347.5982257285414\n","Tested SARIMAX(1, 2, 0)x(1, 0, 1, 52) - AIC:2348.2454172016887\n","Tested SARIMAX(1, 2, 0)x(1, 1, 0, 52) - AIC:1175.5321774888646\n","Tested SARIMAX(1, 2, 0)x(1, 1, 1, 52) - AIC:1173.5319409795652\n","Tested SARIMAX(1, 2, 1)x(0, 0, 0, 52) - AIC:3438.4185246161105\n","Tested SARIMAX(1, 2, 1)x(0, 0, 1, 52) - AIC:2277.0920331882835\n","Tested SARIMAX(1, 2, 1)x(0, 1, 0, 52) - AIC:2314.7859550849516\n","Tested SARIMAX(1, 2, 1)x(0, 1, 1, 52) - AIC:1125.1148964399977\n","Tested SARIMAX(1, 2, 1)x(1, 0, 0, 52) - AIC:2296.5381285097387\n","Tested SARIMAX(1, 2, 1)x(1, 0, 1, 52) - AIC:2273.9142099643445\n","Tested SARIMAX(1, 2, 1)x(1, 1, 0, 52) - AIC:1150.7123091139167\n","Tested SARIMAX(1, 2, 1)x(1, 1, 1, 52) - AIC:1127.0328675562055\n","Tested SARIMAX(1, 2, 2)x(0, 0, 0, 52) - AIC:3408.1619635184843\n","Tested SARIMAX(1, 2, 2)x(0, 0, 1, 52) - AIC:2257.19475468486\n","Tested SARIMAX(1, 2, 2)x(0, 1, 0, 52) - AIC:2291.085597619248\n","Tested SARIMAX(1, 2, 2)x(0, 1, 1, 52) - AIC:1099.0185650945807\n","Tested SARIMAX(1, 2, 2)x(1, 0, 0, 52) - AIC:2292.594867405135\n","Tested SARIMAX(1, 2, 2)x(1, 0, 1, 52) - AIC:2249.6483406737266\n","Tested SARIMAX(1, 2, 2)x(1, 1, 0, 52) - AIC:1145.5290981734593\n","Tested SARIMAX(1, 2, 2)x(1, 1, 1, 52) - AIC:1099.9379053813589\n","Tested SARIMAX(2, 0, 0)x(0, 0, 0, 52) - AIC:3479.646162839832\n","Tested SARIMAX(2, 0, 0)x(0, 0, 1, 52) - AIC:4312.611693899822\n","Tested SARIMAX(2, 0, 0)x(0, 1, 0, 52) - AIC:2340.7826342937724\n","Tested SARIMAX(2, 0, 0)x(0, 1, 1, 52) - AIC:1175.3923130569858\n","Tested SARIMAX(2, 0, 0)x(1, 0, 0, 52) - AIC:2311.8784072476074\n","Tested SARIMAX(2, 0, 0)x(1, 0, 1, 52) - AIC:22172.61067685447\n","Tested SARIMAX(2, 0, 0)x(1, 1, 0, 52) - AIC:1152.356847863695\n","Tested SARIMAX(2, 0, 0)x(1, 1, 1, 52) - AIC:1154.3268325170015\n","Tested SARIMAX(2, 0, 1)x(0, 0, 0, 52) - AIC:3481.6480994983267\n","Tested SARIMAX(2, 0, 1)x(0, 0, 1, 52) - AIC:20037.567582381256\n","Tested SARIMAX(2, 0, 1)x(0, 1, 0, 52) - AIC:2341.425959541408\n","Tested SARIMAX(2, 0, 1)x(0, 1, 1, 52) - AIC:1153.1959284206612\n","Tested SARIMAX(2, 0, 1)x(1, 0, 0, 52) - AIC:2313.5048883415243\n","Tested SARIMAX(2, 0, 1)x(1, 0, 1, 52) - AIC:3328.937991858765\n","Tested SARIMAX(2, 0, 1)x(1, 1, 0, 52) - AIC:1154.5812934554908\n","Tested SARIMAX(2, 0, 1)x(1, 1, 1, 52) - AIC:1156.5616642204943\n","Tested SARIMAX(2, 0, 2)x(0, 0, 0, 52) - AIC:3446.1262058963257\n","Tested SARIMAX(2, 0, 2)x(0, 0, 1, 52) - AIC:18244.794770778277\n","Tested SARIMAX(2, 0, 2)x(0, 1, 0, 52) - AIC:2321.82611750988\n","Tested SARIMAX(2, 0, 2)x(0, 1, 1, 52) - AIC:1135.4906113193758\n","Tested SARIMAX(2, 0, 2)x(1, 0, 0, 52) - AIC:2310.7195814399365\n","Tested SARIMAX(2, 0, 2)x(1, 0, 1, 52) - AIC:18017.057656655372\n","Tested SARIMAX(2, 0, 2)x(1, 1, 0, 52) - AIC:1156.746886554939\n","Tested SARIMAX(2, 0, 2)x(1, 1, 1, 52) - AIC:1137.0040004948607\n","Tested SARIMAX(2, 1, 0)x(0, 0, 0, 52) - AIC:3459.132828919216\n","Tested SARIMAX(2, 1, 0)x(0, 0, 1, 52) - AIC:22721.08524416662\n","Tested SARIMAX(2, 1, 0)x(0, 1, 0, 52) - AIC:2323.7829363151122\n","Tested SARIMAX(2, 1, 0)x(0, 1, 1, 52) - AIC:1156.0705681414317\n","Tested SARIMAX(2, 1, 0)x(1, 0, 0, 52) - AIC:2290.556534476481\n","Tested SARIMAX(2, 1, 0)x(1, 0, 1, 52) - AIC:2290.953470803097\n","Tested SARIMAX(2, 1, 0)x(1, 1, 0, 52) - AIC:1137.1302681010689\n","Tested SARIMAX(2, 1, 0)x(1, 1, 1, 52) - AIC:1136.4510712335575\n","Tested SARIMAX(2, 1, 1)x(0, 0, 0, 52) - AIC:3459.8241782658797\n","Tested SARIMAX(2, 1, 1)x(0, 0, 1, 52) - AIC:28939.552677630512\n","Tested SARIMAX(2, 1, 1)x(0, 1, 0, 52) - AIC:2321.656580733901\n","Tested SARIMAX(2, 1, 1)x(0, 1, 1, 52) - AIC:1134.0884027778823\n","Tested SARIMAX(2, 1, 1)x(1, 0, 0, 52) - AIC:2292.419669992463\n","Tested SARIMAX(2, 1, 1)x(1, 0, 1, 52) - AIC:2291.3102725170033\n","Tested SARIMAX(2, 1, 1)x(1, 1, 0, 52) - AIC:1135.6562287289921\n","Tested SARIMAX(2, 1, 1)x(1, 1, 1, 52) - AIC:1136.0873795431519\n","Tested SARIMAX(2, 1, 2)x(0, 0, 0, 52) - AIC:3423.2066848823747\n","Tested SARIMAX(2, 1, 2)x(0, 0, 1, 52) - AIC:5586.023181406803\n","Tested SARIMAX(2, 1, 2)x(0, 1, 0, 52) - AIC:2303.545419983653\n","Tested SARIMAX(2, 1, 2)x(0, 1, 1, 52) - AIC:1114.5129793717113\n","Tested SARIMAX(2, 1, 2)x(1, 0, 0, 52) - AIC:2289.899783161599\n","Tested SARIMAX(2, 1, 2)x(1, 0, 1, 52) - AIC:2267.6217459803715\n","Tested SARIMAX(2, 1, 2)x(1, 1, 0, 52) - AIC:1137.8115708359196\n","Tested SARIMAX(2, 1, 2)x(1, 1, 1, 52) - AIC:1116.4965382688206\n","Tested SARIMAX(2, 2, 0)x(0, 0, 0, 52) - AIC:3469.8309375708322\n","Tested SARIMAX(2, 2, 0)x(0, 0, 1, 52) - AIC:2320.1953170050356\n","Tested SARIMAX(2, 2, 0)x(0, 1, 0, 52) - AIC:2349.5585900981173\n","Tested SARIMAX(2, 2, 0)x(0, 1, 1, 52) - AIC:1158.642450489661\n","Tested SARIMAX(2, 2, 0)x(1, 0, 0, 52) - AIC:2298.299741354759\n","Tested SARIMAX(2, 2, 0)x(1, 0, 1, 52) - AIC:2299.5991280633125\n","Tested SARIMAX(2, 2, 0)x(1, 1, 0, 52) - AIC:1143.207514041558\n","Tested SARIMAX(2, 2, 0)x(1, 1, 1, 52) - AIC:1137.8070653198713\n","Tested SARIMAX(2, 2, 1)x(0, 0, 0, 52) - AIC:3433.2935440327265\n","Tested SARIMAX(2, 2, 1)x(0, 0, 1, 52) - AIC:2275.19055437379\n","Tested SARIMAX(2, 2, 1)x(0, 1, 0, 52) - AIC:2316.2606843409303\n","Tested SARIMAX(2, 2, 1)x(0, 1, 1, 52) - AIC:1125.6515891218764\n","Tested SARIMAX(2, 2, 1)x(1, 0, 0, 52) - AIC:2274.4281615948885\n","Tested SARIMAX(2, 2, 1)x(1, 0, 1, 52) - AIC:2274.1781812843055\n","Tested SARIMAX(2, 2, 1)x(1, 1, 0, 52) - AIC:1128.844990296739\n","Tested SARIMAX(2, 2, 1)x(1, 1, 1, 52) - AIC:1127.403005938489\n","Tested SARIMAX(2, 2, 2)x(0, 0, 0, 52) - AIC:3409.4389837482286\n","Tested SARIMAX(2, 2, 2)x(0, 0, 1, 52) - AIC:2254.3472840169206\n","Tested SARIMAX(2, 2, 2)x(0, 1, 0, 52) - AIC:2288.8107646140975\n","Tested SARIMAX(2, 2, 2)x(0, 1, 1, 52) - AIC:1100.4148007063532\n","Tested SARIMAX(2, 2, 2)x(1, 0, 0, 52) - AIC:2274.808144159278\n","Tested SARIMAX(2, 2, 2)x(1, 0, 1, 52) - AIC:2251.4493260593395\n","Tested SARIMAX(2, 2, 2)x(1, 1, 0, 52) - AIC:1127.2094182629603\n","Tested SARIMAX(2, 2, 2)x(1, 1, 1, 52) - AIC:1102.2731016360012\n","\n","Best model: SARIMAX(1, 2, 2)x(0, 1, 1, 52) - AIC:1099.0185650945807\n"]}]},{"cell_type":"markdown","source":["SARIMAX(1, 2, 2)x(0, 1, 1, 52) performs the best!"],"metadata":{"id":"hI-tUXQLntTG"}},{"cell_type":"code","source":["# Forecast\n","history = list(train['total_rides'])\n","n_steps = len(val)\n","predictions = []\n","\n","for i in range(n_steps):\n","    # Predict one step ahead\n","    model = best_model.apply(history)  # apply = re-apply the model to updated history\n","    yhat = model.forecast(steps=1)[0]\n","\n","    # Enforce >0\n","    yhat = max(yhat, 0)\n","\n","    # Store forecast\n","    predictions.append(yhat)\n","\n","    # Update history\n","    history.append(yhat)\n","\n","# Done, predictions = recursive forecast\n","y_pred = np.array(predictions)\n","\n","# Plot\n","plt.figure(figsize=(15, 6))\n","\n","# Plot real Train and Val\n","plt.plot(train.index, train['total_rides'], label='Train', color='navy')\n","plt.plot(val.index, val['total_rides'], label='Validation', color='orange')\n","\n","# Plot Fitted\n","plt.plot(train.index, best_model.fittedvalues, label='Fitted', color='limegreen', linestyle='--')\n","\n","# Plot Forecast\n","forecast_index = val.index\n","plt.plot(forecast_index, y_pred, label='Forecast', color='crimson', linestyle='--')\n","\n","# Labels and legend\n","plt.legend()\n","plt.xlabel('Date')\n","plt.ylabel('Total Rides')\n","plt.title('Divvy Ridership Forecast and Fitted Values')\n","plt.grid(True, linestyle='--', alpha=0.5)\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"cMdwZNR88qVd","executionInfo":{"status":"ok","timestamp":1745778285762,"user_tz":300,"elapsed":15005,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"929c7cb0-e4b6-42ff-ca54-0f946555d0cd"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Prophet"],"metadata":{"id":"DZP8vcE4-TH-"}},{"cell_type":"code","source":["# Prepare train data\n","train_prophet = train.reset_index().rename(columns={'date': 'ds', 'total_rides': 'y'})\n","val_prophet = val.reset_index().rename(columns={'date': 'ds', 'total_rides': 'y'})\n","train_prophet.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"nBUioCRX-VPb","executionInfo":{"status":"ok","timestamp":1745779665685,"user_tz":300,"elapsed":17,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"676b604f-ea33-4816-ddf7-ebef5773597e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ds  year  week_of_year      y\n","153 2022-12-07  2022            48  46504\n","154 2022-12-14  2022            49  44932\n","155 2022-12-21  2022            50  31022\n","156 2022-12-28  2022            51  16313\n","157 2023-01-04  2022            52  22536"],"text/html":["\n","  <div id=\"df-ecdcd0cd-dbda-4cc0-a997-bf9b30da8819\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ds</th>\n","      <th>year</th>\n","      <th>week_of_year</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>153</th>\n","      <td>2022-12-07</td>\n","      <td>2022</td>\n","      <td>48</td>\n","      <td>46504</td>\n","    </tr>\n","    <tr>\n","      <th>154</th>\n","      <td>2022-12-14</td>\n","      <td>2022</td>\n","      <td>49</td>\n","      <td>44932</td>\n","    </tr>\n","    <tr>\n","      <th>155</th>\n","      <td>2022-12-21</td>\n","      <td>2022</td>\n","      <td>50</td>\n","      <td>31022</td>\n","    </tr>\n","    <tr>\n","      <th>156</th>\n","      <td>2022-12-28</td>\n","      <td>2022</td>\n","      <td>51</td>\n","      <td>16313</td>\n","    </tr>\n","    <tr>\n","      <th>157</th>\n","      <td>2023-01-04</td>\n","      <td>2022</td>\n","      <td>52</td>\n","      <td>22536</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ecdcd0cd-dbda-4cc0-a997-bf9b30da8819')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ecdcd0cd-dbda-4cc0-a997-bf9b30da8819 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ecdcd0cd-dbda-4cc0-a997-bf9b30da8819');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-921e28b7-924a-400d-99bb-8ff266baf018\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-921e28b7-924a-400d-99bb-8ff266baf018')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-921e28b7-924a-400d-99bb-8ff266baf018 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"train_prophet\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-12-07 00:00:00\",\n        \"max\": \"2023-01-04 00:00:00\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"2022-12-14 00:00:00\",\n          \"2023-01-04 00:00:00\",\n          \"2022-12-21 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2022\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          49\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 13359,\n        \"min\": 16313,\n        \"max\": 46504,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          44932\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["val_prophet.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ydO9RWobh-Au","executionInfo":{"status":"ok","timestamp":1745779668188,"user_tz":300,"elapsed":3,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"c70484a3-71c6-4e04-e8eb-6d4d55a27ca6"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["          ds  year  week_of_year      y\n","0 2023-01-11  2023             1  32356\n","1 2023-01-18  2023             2  43660\n","2 2023-01-25  2023             3  36110\n","3 2023-02-01  2023             4  26087\n","4 2023-02-08  2023             5  25650"],"text/html":["\n","  <div id=\"df-ec736cec-1799-4a07-954b-6580064f4b55\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ds</th>\n","      <th>year</th>\n","      <th>week_of_year</th>\n","      <th>y</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2023-01-11</td>\n","      <td>2023</td>\n","      <td>1</td>\n","      <td>32356</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2023-01-18</td>\n","      <td>2023</td>\n","      <td>2</td>\n","      <td>43660</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2023-01-25</td>\n","      <td>2023</td>\n","      <td>3</td>\n","      <td>36110</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2023-02-01</td>\n","      <td>2023</td>\n","      <td>4</td>\n","      <td>26087</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2023-02-08</td>\n","      <td>2023</td>\n","      <td>5</td>\n","      <td>25650</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec736cec-1799-4a07-954b-6580064f4b55')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec736cec-1799-4a07-954b-6580064f4b55 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec736cec-1799-4a07-954b-6580064f4b55');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-71cb68c5-4796-4ab9-b924-979fd90620cf\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-71cb68c5-4796-4ab9-b924-979fd90620cf')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-71cb68c5-4796-4ab9-b924-979fd90620cf button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"val_prophet","summary":"{\n  \"name\": \"val_prophet\",\n  \"rows\": 52,\n  \"fields\": [\n    {\n      \"column\": \"ds\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2023-01-11 00:00:00\",\n        \"max\": \"2024-01-03 00:00:00\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          \"2023-05-24 00:00:00\",\n          \"2023-10-25 00:00:00\",\n          \"2023-12-06 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"int32\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          2023\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"week_of_year\",\n      \"properties\": {\n        \"dtype\": \"UInt32\",\n        \"num_unique_values\": 52,\n        \"samples\": [\n          20\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"y\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 39328,\n        \"min\": 25650,\n        \"max\": 140880,\n        \"num_unique_values\": 52,\n        \"samples\": [\n          111612\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["param_grid = {\n","    'changepoint_prior_scale': [0.001, 0.01, 0.1, 0.5],\n","    'seasonality_prior_scale': [0.01, 0.1, 1.0, 10.0],\n","    'seasonality_mode': ['additive', 'multiplicative']\n","}\n","\n","# Generate all combinations\n","all_params = [dict(zip(param_grid.keys(), v)) for v in itertools.product(*param_grid.values())]\n","\n","best_mae = float(\"inf\")\n","best_params = None\n","best_model = None\n","\n","# Search\n","for params in all_params:\n","    model = Prophet(\n","        changepoint_prior_scale=params['changepoint_prior_scale'],\n","        seasonality_prior_scale=params['seasonality_prior_scale'],\n","        seasonality_mode=params['seasonality_mode']\n","    )\n","    model.fit(train_prophet)\n","\n","    future = model.make_future_dataframe(periods=len(val_prophet), freq='7D')\n","    forecast = model.predict(future)\n","\n","    # Match predicted yhat to validation y\n","    y_pred = forecast.set_index('ds').loc[val_prophet['ds'],'yhat'].values\n","\n","    mae = mean_absolute_error(val_prophet['y'], y_pred)\n","\n","    print(f\"Tested params {params} - MAE: {mae:.2f}\")\n","\n","    if mae < best_mae:\n","        best_mae = mae\n","        best_params = params\n","        best_model = model\n","\n","# Best result\n","print(f\"\\nBest Params: {best_params} - Best MAE: {best_mae:.2f}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qoDNwq4Qh7BY","executionInfo":{"status":"ok","timestamp":1745779974603,"user_tz":300,"elapsed":9582,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"3d0a37c1-a3b4-43b7-ef2e-cd7366c3b056"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/l0kipyh9.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/t4p05iot.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=20195', 'data', 'file=/tmp/tmpz_q82237/l0kipyh9.json', 'init=/tmp/tmpz_q82237/t4p05iot.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeltvcz9aa8/prophet_model-20250427185244.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:44 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:44 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:44 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/a0bws5dd.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/1o35fni0.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=6356', 'data', 'file=/tmp/tmpz_q82237/a0bws5dd.json', 'init=/tmp/tmpz_q82237/1o35fni0.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelx9uh15y_/prophet_model-20250427185244.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:44 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/kgq7rd3w.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/nv1txuut.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=57440', 'data', 'file=/tmp/tmpz_q82237/kgq7rd3w.json', 'init=/tmp/tmpz_q82237/nv1txuut.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelb1ajadk3/prophet_model-20250427185245.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:45 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ka1b8h8c.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/r88rcd5d.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=13781', 'data', 'file=/tmp/tmpz_q82237/ka1b8h8c.json', 'init=/tmp/tmpz_q82237/r88rcd5d.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelkha7m280/prophet_model-20250427185245.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'additive'} - MAE: 33572.58\n"]},{"output_type":"stream","name":"stderr","text":["18:52:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/euw1i9oy.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/1lnhgn2u.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=42695', 'data', 'file=/tmp/tmpz_q82237/euw1i9oy.json', 'init=/tmp/tmpz_q82237/1lnhgn2u.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelznpv519o/prophet_model-20250427185245.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:45 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/y0nqt7tp.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ytpvhrgl.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=43075', 'data', 'file=/tmp/tmpz_q82237/y0nqt7tp.json', 'init=/tmp/tmpz_q82237/ytpvhrgl.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelaove6lys/prophet_model-20250427185245.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'multiplicative'} - MAE: 36561.57\n"]},{"output_type":"stream","name":"stderr","text":["18:52:45 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/l2q4zlkr.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/_xjhh5ra.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=29348', 'data', 'file=/tmp/tmpz_q82237/l2q4zlkr.json', 'init=/tmp/tmpz_q82237/_xjhh5ra.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelgg129rsg/prophet_model-20250427185245.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:45 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:46 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/z2bsot91.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/qmt0u73n.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=7768', 'data', 'file=/tmp/tmpz_q82237/z2bsot91.json', 'init=/tmp/tmpz_q82237/qmt0u73n.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelio7nlctv/prophet_model-20250427185246.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'additive'} - MAE: 16822.23\n"]},{"output_type":"stream","name":"stderr","text":["18:52:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/chlwg830.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/t7b_ivy2.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=59311', 'data', 'file=/tmp/tmpz_q82237/chlwg830.json', 'init=/tmp/tmpz_q82237/t7b_ivy2.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeluwi7hzg2/prophet_model-20250427185246.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:46 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/yrd7sw0y.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/01k94va1.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=50253', 'data', 'file=/tmp/tmpz_q82237/yrd7sw0y.json', 'init=/tmp/tmpz_q82237/01k94va1.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model5eg9f8e6/prophet_model-20250427185246.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'} - MAE: 19755.31\n"]},{"output_type":"stream","name":"stderr","text":["18:52:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/8dsebgcr.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/5pp1ghwp.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=64046', 'data', 'file=/tmp/tmpz_q82237/8dsebgcr.json', 'init=/tmp/tmpz_q82237/5pp1ghwp.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelks14p_3f/prophet_model-20250427185246.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:46 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:46 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/3hj0l_4j.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/57ya0xla.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=50933', 'data', 'file=/tmp/tmpz_q82237/3hj0l_4j.json', 'init=/tmp/tmpz_q82237/57ya0xla.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelqm40j06c/prophet_model-20250427185246.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:46 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'additive'} - MAE: 16268.09\n"]},{"output_type":"stream","name":"stderr","text":["18:52:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/3qpy1lz1.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/k2b8zi2f.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=93694', 'data', 'file=/tmp/tmpz_q82237/3qpy1lz1.json', 'init=/tmp/tmpz_q82237/k2b8zi2f.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modele6wcydzt/prophet_model-20250427185247.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:47 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:47 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/3x8uwku4.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/y2e4qd54.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=60885', 'data', 'file=/tmp/tmpz_q82237/3x8uwku4.json', 'init=/tmp/tmpz_q82237/y2e4qd54.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model84qb0dv8/prophet_model-20250427185247.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:47 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'multiplicative'} - MAE: 20424.66\n"]},{"output_type":"stream","name":"stderr","text":["18:52:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/738urua9.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/f9beavv8.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=38946', 'data', 'file=/tmp/tmpz_q82237/738urua9.json', 'init=/tmp/tmpz_q82237/f9beavv8.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelcjouvdoz/prophet_model-20250427185247.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:47 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:47 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:47 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/u0o5a8ti.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ev_pkbuv.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=95225', 'data', 'file=/tmp/tmpz_q82237/u0o5a8ti.json', 'init=/tmp/tmpz_q82237/ev_pkbuv.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelmudlupgj/prophet_model-20250427185247.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:47 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'additive'} - MAE: 16594.33\n"]},{"output_type":"stream","name":"stderr","text":["18:52:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ve9je2pz.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/3_zu4hnj.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=43060', 'data', 'file=/tmp/tmpz_q82237/ve9je2pz.json', 'init=/tmp/tmpz_q82237/3_zu4hnj.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeludhtua2p/prophet_model-20250427185248.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:48 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:48 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/3y_cpxtm.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/9g5mt1oz.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=86061', 'data', 'file=/tmp/tmpz_q82237/3y_cpxtm.json', 'init=/tmp/tmpz_q82237/9g5mt1oz.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelr971_8yt/prophet_model-20250427185248.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:48 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.001, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'multiplicative'} - MAE: 20950.57\n"]},{"output_type":"stream","name":"stderr","text":["18:52:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/mn8l0mdk.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/wyc671ez.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=5785', 'data', 'file=/tmp/tmpz_q82237/mn8l0mdk.json', 'init=/tmp/tmpz_q82237/wyc671ez.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelthwjr0en/prophet_model-20250427185248.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:48 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:48 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/4kqzy7wk.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/rl_qtc8m.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=77358', 'data', 'file=/tmp/tmpz_q82237/4kqzy7wk.json', 'init=/tmp/tmpz_q82237/rl_qtc8m.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model03uonusf/prophet_model-20250427185248.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:48 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'additive'} - MAE: 33570.52\n"]},{"output_type":"stream","name":"stderr","text":["18:52:48 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/0b36g5pe.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/yy3lp2xr.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=3139', 'data', 'file=/tmp/tmpz_q82237/0b36g5pe.json', 'init=/tmp/tmpz_q82237/yy3lp2xr.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelyc7m7_fb/prophet_model-20250427185249.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:49 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/d9qtrbnw.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/s4nz6mkf.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=6951', 'data', 'file=/tmp/tmpz_q82237/d9qtrbnw.json', 'init=/tmp/tmpz_q82237/s4nz6mkf.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model4w_m7e9y/prophet_model-20250427185249.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'multiplicative'} - MAE: 36575.30\n"]},{"output_type":"stream","name":"stderr","text":["18:52:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/_4mcuc0o.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/uq8792xk.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=45280', 'data', 'file=/tmp/tmpz_q82237/_4mcuc0o.json', 'init=/tmp/tmpz_q82237/uq8792xk.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model0bmcva2g/prophet_model-20250427185249.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:49 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/vb5rkgwo.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/yh24e9ja.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=59346', 'data', 'file=/tmp/tmpz_q82237/vb5rkgwo.json', 'init=/tmp/tmpz_q82237/yh24e9ja.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model1ixhlcr8/prophet_model-20250427185249.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:49 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'additive'} - MAE: 16284.77\n"]},{"output_type":"stream","name":"stderr","text":["18:52:49 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/vj739sii.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/v04fkgpi.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=55331', 'data', 'file=/tmp/tmpz_q82237/vj739sii.json', 'init=/tmp/tmpz_q82237/v04fkgpi.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelks391vna/prophet_model-20250427185250.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:50 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:50 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:50 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/zwnvtedn.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/spwcqo0m.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=907', 'data', 'file=/tmp/tmpz_q82237/zwnvtedn.json', 'init=/tmp/tmpz_q82237/spwcqo0m.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelru9uff38/prophet_model-20250427185250.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:50 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'} - MAE: 19772.79\n"]},{"output_type":"stream","name":"stderr","text":["18:52:50 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/05u7npgo.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/u2i8ldoc.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=46734', 'data', 'file=/tmp/tmpz_q82237/05u7npgo.json', 'init=/tmp/tmpz_q82237/u2i8ldoc.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelbf8kq3g6/prophet_model-20250427185250.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:50 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:50 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:50 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/kur_6ucd.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/wts1tf9e.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=49169', 'data', 'file=/tmp/tmpz_q82237/kur_6ucd.json', 'init=/tmp/tmpz_q82237/wts1tf9e.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeldtufmwdg/prophet_model-20250427185250.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:50 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'additive'} - MAE: 16270.16\n"]},{"output_type":"stream","name":"stderr","text":["18:52:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/r6vq1zgl.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/an1kl8l1.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=49951', 'data', 'file=/tmp/tmpz_q82237/r6vq1zgl.json', 'init=/tmp/tmpz_q82237/an1kl8l1.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelqh9ewo43/prophet_model-20250427185251.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:51 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ojqkb0yk.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/5n6bgnf8.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=26940', 'data', 'file=/tmp/tmpz_q82237/ojqkb0yk.json', 'init=/tmp/tmpz_q82237/5n6bgnf8.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeliurl4sth/prophet_model-20250427185251.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'multiplicative'} - MAE: 20358.50\n"]},{"output_type":"stream","name":"stderr","text":["18:52:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/f0s6bz4_.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/590m76wh.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=65895', 'data', 'file=/tmp/tmpz_q82237/f0s6bz4_.json', 'init=/tmp/tmpz_q82237/590m76wh.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelcpnlwkzn/prophet_model-20250427185251.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:51 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","18:52:51 - cmdstanpy - ERROR - Chain [1] error: error during processing Operation not permitted\n","ERROR:cmdstanpy:Chain [1] error: error during processing Operation not permitted\n","WARNING:prophet.models:Optimization terminated abnormally. Falling back to Newton.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/20wdycjh.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/774mpsvw.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=87870', 'data', 'file=/tmp/tmpz_q82237/20wdycjh.json', 'init=/tmp/tmpz_q82237/774mpsvw.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelhatqfk9n/prophet_model-20250427185251.csv', 'method=optimize', 'algorithm=newton', 'iter=10000']\n","18:52:51 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'additive'} - MAE: 16326.04\n"]},{"output_type":"stream","name":"stderr","text":["18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/qiagskdg.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/5dfcct2w.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=44243', 'data', 'file=/tmp/tmpz_q82237/qiagskdg.json', 'init=/tmp/tmpz_q82237/5dfcct2w.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model6u7mebu3/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/4jbc1d2r.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/n91ene0f.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=73976', 'data', 'file=/tmp/tmpz_q82237/4jbc1d2r.json', 'init=/tmp/tmpz_q82237/n91ene0f.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeldhegp3g5/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.01, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'multiplicative'} - MAE: 20404.52\n","Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'additive'} - MAE: 33143.48\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/sebl7g7p.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/qkfnjk5j.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=4569', 'data', 'file=/tmp/tmpz_q82237/sebl7g7p.json', 'init=/tmp/tmpz_q82237/qkfnjk5j.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model0y9aukj0/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/gwa2cbga.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/xed0_n9v.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=14892', 'data', 'file=/tmp/tmpz_q82237/gwa2cbga.json', 'init=/tmp/tmpz_q82237/xed0_n9v.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeljl_x2t_3/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'multiplicative'} - MAE: 36161.46\n","Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'additive'} - MAE: 10333.01\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/yuynujfi.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/gu7lb9_p.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=92224', 'data', 'file=/tmp/tmpz_q82237/yuynujfi.json', 'init=/tmp/tmpz_q82237/gu7lb9_p.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelpuxhqjlk/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/sm3snc1j.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/5q9gw_qo.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=27500', 'data', 'file=/tmp/tmpz_q82237/sm3snc1j.json', 'init=/tmp/tmpz_q82237/5q9gw_qo.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model6koh4td5/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'} - MAE: 9846.86\n","Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'additive'} - MAE: 10624.61\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/2n5b0fde.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/cdn8xpin.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=49763', 'data', 'file=/tmp/tmpz_q82237/2n5b0fde.json', 'init=/tmp/tmpz_q82237/cdn8xpin.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeln6t_uuzg/prophet_model-20250427185252.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:52 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:52 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/8dn8re3u.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/vqlmyunr.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=81656', 'data', 'file=/tmp/tmpz_q82237/8dn8re3u.json', 'init=/tmp/tmpz_q82237/vqlmyunr.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeljdg8vgpo/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'multiplicative'} - MAE: 10950.71\n","Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'additive'} - MAE: 10590.78\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/m0gz6vp7.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/n7g8jqj1.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=83166', 'data', 'file=/tmp/tmpz_q82237/m0gz6vp7.json', 'init=/tmp/tmpz_q82237/n7g8jqj1.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelbt_bk7tc/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/tpz8c1ju.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/ol9yvuve.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=82821', 'data', 'file=/tmp/tmpz_q82237/tpz8c1ju.json', 'init=/tmp/tmpz_q82237/ol9yvuve.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelxegrau53/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'multiplicative'} - MAE: 10893.55\n","Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'additive'} - MAE: 87901.47\n"]},{"output_type":"stream","name":"stderr","text":["18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/fjv7cggt.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/d41jqfzd.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=62881', 'data', 'file=/tmp/tmpz_q82237/fjv7cggt.json', 'init=/tmp/tmpz_q82237/d41jqfzd.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelnowlybdw/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/y9eytei9.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/aor4cz_p.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=27638', 'data', 'file=/tmp/tmpz_q82237/y9eytei9.json', 'init=/tmp/tmpz_q82237/aor4cz_p.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelb1u88lkz/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 0.01, 'seasonality_mode': 'multiplicative'} - MAE: 82544.78\n","Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'additive'} - MAE: 12086.91\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/t98i4bhr.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/802ff0bo.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=88579', 'data', 'file=/tmp/tmpz_q82237/t98i4bhr.json', 'init=/tmp/tmpz_q82237/802ff0bo.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modeltmigcln4/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/g8yb8kxy.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/9rz594df.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=68783', 'data', 'file=/tmp/tmpz_q82237/g8yb8kxy.json', 'init=/tmp/tmpz_q82237/9rz594df.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model3b8rjqwn/prophet_model-20250427185253.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:53 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:53 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'} - MAE: 11671.80\n","Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'additive'} - MAE: 12159.21\n"]},{"output_type":"stream","name":"stderr","text":["INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/2d0svp_s.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/xinh4n1g.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=21469', 'data', 'file=/tmp/tmpz_q82237/2d0svp_s.json', 'init=/tmp/tmpz_q82237/xinh4n1g.json', 'output', 'file=/tmp/tmpz_q82237/prophet_model43el7a_n/prophet_model-20250427185254.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:54 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:52:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n","INFO:prophet:Disabling weekly seasonality. Run prophet with weekly_seasonality=True to override this.\n","INFO:prophet:Disabling daily seasonality. Run prophet with daily_seasonality=True to override this.\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/1h_sxy1d.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/v_eavd19.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=27374', 'data', 'file=/tmp/tmpz_q82237/1h_sxy1d.json', 'init=/tmp/tmpz_q82237/v_eavd19.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelowfo5cm5/prophet_model-20250427185254.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:52:54 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 1.0, 'seasonality_mode': 'multiplicative'} - MAE: 10512.77\n","Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'additive'} - MAE: 12365.41\n"]},{"output_type":"stream","name":"stderr","text":["18:52:54 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"stream","name":"stdout","text":["Tested params {'changepoint_prior_scale': 0.5, 'seasonality_prior_scale': 10.0, 'seasonality_mode': 'multiplicative'} - MAE: 10453.12\n","\n","Best Params: {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'} - Best MAE: 9846.86\n"]}]},{"cell_type":"code","source":["from prophet import Prophet  # or fbprophet depending on your version\n","\n","# 1. Fit the model\n","model = Prophet(weekly_seasonality=True, yearly_seasonality=True, daily_seasonality=False)\n","model.fit(train_prophet)  # train_prophet must have ['ds', 'y']\n","\n","# 2. Create future dataframe\n","future = model.make_future_dataframe(periods=len(val_prophet), freq='7D')  # match validation size and 7D frequency\n","\n","# 3. Predict\n","forecast = model.predict(future)\n","\n","# 4. Plot\n","plt.figure(figsize=(15, 6))\n","\n","# Plot Train\n","plt.plot(train_prophet['ds'], train_prophet['y'], label='Train', color='navy')\n","\n","# Plot Validation\n","plt.plot(val_prophet['ds'], val_prophet['y'], label='Validation', color='orange')\n","\n","# Plot Fitted on training\n","train_forecast = forecast[forecast['ds'].isin(train_prophet['ds'])]\n","plt.plot(train_forecast['ds'], train_forecast['yhat'], label='Fitted', color='limegreen', linestyle='--')\n","\n","# Plot Forecast on validation\n","val_forecast = forecast[forecast['ds'].isin(val_prophet['ds'])]\n","plt.plot(val_forecast['ds'], val_forecast['yhat'], label='Forecast', color='crimson', linestyle='--')\n","\n","# Labels and grid\n","plt.legend()\n","plt.xlabel('Date')\n","plt.ylabel('Total Rides')\n","plt.title('Divvy Ridership Forecast and Fitted Values (Prophet)')\n","plt.grid(True, linestyle='--', alpha=0.5)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":748},"id":"SKG1D71BlBDH","executionInfo":{"status":"ok","timestamp":1745780057276,"user_tz":300,"elapsed":617,"user":{"displayName":"Zimeng Huang","userId":"11912824630688390396"}},"outputId":"718b17aa-6c23-4eb5-a47e-78a4de45fe17"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/etyhudel.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpz_q82237/_0yj23q2.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=92635', 'data', 'file=/tmp/tmpz_q82237/etyhudel.json', 'init=/tmp/tmpz_q82237/_0yj23q2.json', 'output', 'file=/tmp/tmpz_q82237/prophet_modelkbg1nqcz/prophet_model-20250427185416.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","18:54:16 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","18:54:16 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["# Save the Models"],"metadata":{"id":"OWXYUctcnhwf"}},{"cell_type":"code","source":["# SARIMAX(1, 2, 2)x(0, 1, 1, 52)\n","mod = sm.tsa.SARIMAX(\n","            rides_by_month[rides_by_month[\"year\"]<=2023]['total_rides'],\n","            order=(1, 2, 2),\n","            seasonal_order=(0, 1, 1, 52),\n","            enforce_stationarity=False,\n","            enforce_invertibility=False\n","        )\n","results = mod.fit(disp=False)\n","# 'sarima_model.pkl'\n","results.save(os.path.join(MODEL_DIR, \"sarima_weekly_citywide.pkl\"))"],"metadata":{"id":"IPQ2nFKdnk9d","executionInfo":{"status":"ok","timestamp":1745781016264,"user_tz":300,"elapsed":27694,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# Best Params: {'changepoint_prior_scale': 0.1, 'seasonality_prior_scale': 0.1, 'seasonality_mode': 'multiplicative'}\n","model = Prophet(weekly_seasonality=True, yearly_seasonality=True, daily_seasonality=False,\n","                changepoint_prior_scale=0.1, seasonality_prior_scale=0.1, seasonality_mode='multiplicative')\n","train_val_prophet = rides_by_month[rides_by_month[\"year\"]<=2023].reset_index().rename(columns={'date': 'ds', 'total_rides': 'y'})\n","model.fit(train_val_prophet)\n","import pickle\n","with open(os.path.join(MODEL_DIR, 'prophet_weekly_citywide.pkl'), 'wb') as f:\n","    pickle.dump(model, f)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"H6sxYhSfpR6v","executionInfo":{"status":"ok","timestamp":1745781016317,"user_tz":300,"elapsed":56,"user":{"displayName":"Zimeng Huang","userId":"04279600351165994630"}},"outputId":"0b78d79e-11c9-4830-fecf-3bf84fa6a575"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["DEBUG:cmdstanpy:input tempfile: /tmp/tmpxza501xz/tog5xz8u.json\n","DEBUG:cmdstanpy:input tempfile: /tmp/tmpxza501xz/kawli161.json\n","DEBUG:cmdstanpy:idx 0\n","DEBUG:cmdstanpy:running CmdStan, num_threads: None\n","DEBUG:cmdstanpy:CmdStan args: ['/usr/local/lib/python3.11/dist-packages/prophet/stan_model/prophet_model.bin', 'random', 'seed=75011', 'data', 'file=/tmp/tmpxza501xz/tog5xz8u.json', 'init=/tmp/tmpxza501xz/kawli161.json', 'output', 'file=/tmp/tmpxza501xz/prophet_model15h6cw2o/prophet_model-20250427191016.csv', 'method=optimize', 'algorithm=lbfgs', 'iter=10000']\n","19:10:16 - cmdstanpy - INFO - Chain [1] start processing\n","INFO:cmdstanpy:Chain [1] start processing\n","19:10:16 - cmdstanpy - INFO - Chain [1] done processing\n","INFO:cmdstanpy:Chain [1] done processing\n"]}]}]}